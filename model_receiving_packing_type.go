/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// ReceivingPackingType the model 'ReceivingPackingType'
type ReceivingPackingType string

// List of Receiving.PackingType
const (
	ReceivingPackingTypeEVERYTHING_IN_ONE_BOX ReceivingPackingType = "EverythingInOneBox"
	ReceivingPackingTypeONE_SKU_PER_BOX ReceivingPackingType = "OneSkuPerBox"
	ReceivingPackingTypeMULTIPLE_SKU_PER_BOX ReceivingPackingType = "MultipleSkuPerBox"
)

func (v *ReceivingPackingType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ReceivingPackingType(value)
	for _, existing := range []ReceivingPackingType{ "EverythingInOneBox", "OneSkuPerBox", "MultipleSkuPerBox",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ReceivingPackingType", value)
}

// Ptr returns reference to Receiving.PackingType value
func (v ReceivingPackingType) Ptr() *ReceivingPackingType {
	return &v
}

type NullableReceivingPackingType struct {
	value *ReceivingPackingType
	isSet bool
}

func (v NullableReceivingPackingType) Get() *ReceivingPackingType {
	return v.value
}

func (v *NullableReceivingPackingType) Set(val *ReceivingPackingType) {
	v.value = val
	v.isSet = true
}

func (v NullableReceivingPackingType) IsSet() bool {
	return v.isSet
}

func (v *NullableReceivingPackingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReceivingPackingType(val *ReceivingPackingType) *NullableReceivingPackingType {
	return &NullableReceivingPackingType{value: val, isSet: true}
}

func (v NullableReceivingPackingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReceivingPackingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

