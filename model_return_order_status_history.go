/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"time"
)

// ReturnOrderStatusHistory struct for ReturnOrderStatusHistory
type ReturnOrderStatusHistory struct {
	Status *ReturnStatus `json:"status,omitempty"`
	// Date this corresponding return order status was created
	TimeStamp NullableTime `json:"time_stamp,omitempty"`
}

// NewReturnOrderStatusHistory instantiates a new ReturnOrderStatusHistory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnOrderStatusHistory() *ReturnOrderStatusHistory {
	this := ReturnOrderStatusHistory{}
	return &this
}

// NewReturnOrderStatusHistoryWithDefaults instantiates a new ReturnOrderStatusHistory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnOrderStatusHistoryWithDefaults() *ReturnOrderStatusHistory {
	this := ReturnOrderStatusHistory{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ReturnOrderStatusHistory) GetStatus() ReturnStatus {
	if o == nil || o.Status == nil {
		var ret ReturnStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnOrderStatusHistory) GetStatusOk() (*ReturnStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ReturnOrderStatusHistory) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ReturnStatus and assigns it to the Status field.
func (o *ReturnOrderStatusHistory) SetStatus(v ReturnStatus) {
	o.Status = &v
}

// GetTimeStamp returns the TimeStamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnOrderStatusHistory) GetTimeStamp() time.Time {
	if o == nil || o.TimeStamp.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.TimeStamp.Get()
}

// GetTimeStampOk returns a tuple with the TimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnOrderStatusHistory) GetTimeStampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeStamp.Get(), o.TimeStamp.IsSet()
}

// HasTimeStamp returns a boolean if a field has been set.
func (o *ReturnOrderStatusHistory) HasTimeStamp() bool {
	if o != nil && o.TimeStamp.IsSet() {
		return true
	}

	return false
}

// SetTimeStamp gets a reference to the given NullableTime and assigns it to the TimeStamp field.
func (o *ReturnOrderStatusHistory) SetTimeStamp(v time.Time) {
	o.TimeStamp.Set(&v)
}

// SetTimeStampNil sets the value for TimeStamp to be an explicit nil
func (o *ReturnOrderStatusHistory) SetTimeStampNil() {
	o.TimeStamp.Set(nil)
}

// UnsetTimeStamp ensures that no value is present for TimeStamp, not even an explicit nil
func (o *ReturnOrderStatusHistory) UnsetTimeStamp() {
	o.TimeStamp.Unset()
}

func (o ReturnOrderStatusHistory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TimeStamp.IsSet() {
		toSerialize["time_stamp"] = o.TimeStamp.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableReturnOrderStatusHistory struct {
	value *ReturnOrderStatusHistory
	isSet bool
}

func (v NullableReturnOrderStatusHistory) Get() *ReturnOrderStatusHistory {
	return v.value
}

func (v *NullableReturnOrderStatusHistory) Set(val *ReturnOrderStatusHistory) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnOrderStatusHistory) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnOrderStatusHistory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnOrderStatusHistory(val *ReturnOrderStatusHistory) *NullableReturnOrderStatusHistory {
	return &NullableReturnOrderStatusHistory{value: val, isSet: true}
}

func (v NullableReturnOrderStatusHistory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnOrderStatusHistory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
