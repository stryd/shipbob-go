/*
ShipBob Developer API

ShipBob Developer API Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// checks if the WebhookSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookSubscription{}

// WebhookSubscription struct for WebhookSubscription
type WebhookSubscription struct {
	// URL we will call when an event matching the subscription topic is raised. Must have ssl enabled (https) and accept POST requests with content type of application/json
	SubscriptionUrl string `json:"subscription_url"`
	Topic Topics `json:"topic"`
}

// NewWebhookSubscription instantiates a new WebhookSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookSubscription(subscriptionUrl string, topic Topics) *WebhookSubscription {
	this := WebhookSubscription{}
	this.SubscriptionUrl = subscriptionUrl
	this.Topic = topic
	return &this
}

// NewWebhookSubscriptionWithDefaults instantiates a new WebhookSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookSubscriptionWithDefaults() *WebhookSubscription {
	this := WebhookSubscription{}
	return &this
}

// GetSubscriptionUrl returns the SubscriptionUrl field value
func (o *WebhookSubscription) GetSubscriptionUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionUrl
}

// GetSubscriptionUrlOk returns a tuple with the SubscriptionUrl field value
// and a boolean to check if the value has been set.
func (o *WebhookSubscription) GetSubscriptionUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionUrl, true
}

// SetSubscriptionUrl sets field value
func (o *WebhookSubscription) SetSubscriptionUrl(v string) {
	o.SubscriptionUrl = v
}

// GetTopic returns the Topic field value
func (o *WebhookSubscription) GetTopic() Topics {
	if o == nil {
		var ret Topics
		return ret
	}

	return o.Topic
}

// GetTopicOk returns a tuple with the Topic field value
// and a boolean to check if the value has been set.
func (o *WebhookSubscription) GetTopicOk() (*Topics, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Topic, true
}

// SetTopic sets field value
func (o *WebhookSubscription) SetTopic(v Topics) {
	o.Topic = v
}

func (o WebhookSubscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscription_url"] = o.SubscriptionUrl
	toSerialize["topic"] = o.Topic
	return toSerialize, nil
}

type NullableWebhookSubscription struct {
	value *WebhookSubscription
	isSet bool
}

func (v NullableWebhookSubscription) Get() *WebhookSubscription {
	return v.value
}

func (v *NullableWebhookSubscription) Set(val *WebhookSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookSubscription(val *WebhookSubscription) *NullableWebhookSubscription {
	return &NullableWebhookSubscription{value: val, isSet: true}
}

func (v NullableWebhookSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


