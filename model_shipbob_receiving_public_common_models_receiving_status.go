/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// ShipbobReceivingPublicCommonModelsReceivingStatus the model 'ShipbobReceivingPublicCommonModelsReceivingStatus'
type ShipbobReceivingPublicCommonModelsReceivingStatus string

// List of Shipbob.Receiving.Public.Common.Models.ReceivingStatus
const (
	AWAITING ShipbobReceivingPublicCommonModelsReceivingStatus = "Awaiting"
	PROCESSING ShipbobReceivingPublicCommonModelsReceivingStatus = "Processing"
	COMPLETED ShipbobReceivingPublicCommonModelsReceivingStatus = "Completed"
	CANCELLED ShipbobReceivingPublicCommonModelsReceivingStatus = "Cancelled"
	INCOMPLETE ShipbobReceivingPublicCommonModelsReceivingStatus = "Incomplete"
	ARRIVED ShipbobReceivingPublicCommonModelsReceivingStatus = "Arrived"
	PARTIALLY_ARRIVED ShipbobReceivingPublicCommonModelsReceivingStatus = "PartiallyArrived"
)

func (v *ShipbobReceivingPublicCommonModelsReceivingStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ShipbobReceivingPublicCommonModelsReceivingStatus(value)
	for _, existing := range []ShipbobReceivingPublicCommonModelsReceivingStatus{ "Awaiting", "Processing", "Completed", "Cancelled", "Incomplete", "Arrived", "PartiallyArrived",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ShipbobReceivingPublicCommonModelsReceivingStatus", value)
}

// Ptr returns reference to Shipbob.Receiving.Public.Common.Models.ReceivingStatus value
func (v ShipbobReceivingPublicCommonModelsReceivingStatus) Ptr() *ShipbobReceivingPublicCommonModelsReceivingStatus {
	return &v
}

type NullableShipbobReceivingPublicCommonModelsReceivingStatus struct {
	value *ShipbobReceivingPublicCommonModelsReceivingStatus
	isSet bool
}

func (v NullableShipbobReceivingPublicCommonModelsReceivingStatus) Get() *ShipbobReceivingPublicCommonModelsReceivingStatus {
	return v.value
}

func (v *NullableShipbobReceivingPublicCommonModelsReceivingStatus) Set(val *ShipbobReceivingPublicCommonModelsReceivingStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableShipbobReceivingPublicCommonModelsReceivingStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableShipbobReceivingPublicCommonModelsReceivingStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipbobReceivingPublicCommonModelsReceivingStatus(val *ShipbobReceivingPublicCommonModelsReceivingStatus) *NullableShipbobReceivingPublicCommonModelsReceivingStatus {
	return &NullableShipbobReceivingPublicCommonModelsReceivingStatus{value: val, isSet: true}
}

func (v NullableShipbobReceivingPublicCommonModelsReceivingStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipbobReceivingPublicCommonModelsReceivingStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

