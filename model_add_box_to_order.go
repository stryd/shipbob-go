/*
ShipBob Developer API

ShipBob Developer API Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// checks if the AddBoxToOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddBoxToOrder{}

// AddBoxToOrder Information about a box shipment to be added to a receiving order
type AddBoxToOrder struct {
	// Items contained in this box
	BoxItems []AddBoxItemToBox `json:"box_items"`
	// Tracking number for the box shipment
	TrackingNumber NullableString `json:"tracking_number"`
}

// NewAddBoxToOrder instantiates a new AddBoxToOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBoxToOrder(boxItems []AddBoxItemToBox, trackingNumber NullableString) *AddBoxToOrder {
	this := AddBoxToOrder{}
	this.BoxItems = boxItems
	this.TrackingNumber = trackingNumber
	return &this
}

// NewAddBoxToOrderWithDefaults instantiates a new AddBoxToOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBoxToOrderWithDefaults() *AddBoxToOrder {
	this := AddBoxToOrder{}
	return &this
}

// GetBoxItems returns the BoxItems field value
// If the value is explicit nil, the zero value for []AddBoxItemToBox will be returned
func (o *AddBoxToOrder) GetBoxItems() []AddBoxItemToBox {
	if o == nil {
		var ret []AddBoxItemToBox
		return ret
	}

	return o.BoxItems
}

// GetBoxItemsOk returns a tuple with the BoxItems field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddBoxToOrder) GetBoxItemsOk() ([]AddBoxItemToBox, bool) {
	if o == nil || IsNil(o.BoxItems) {
		return nil, false
	}
	return o.BoxItems, true
}

// SetBoxItems sets field value
func (o *AddBoxToOrder) SetBoxItems(v []AddBoxItemToBox) {
	o.BoxItems = v
}

// GetTrackingNumber returns the TrackingNumber field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AddBoxToOrder) GetTrackingNumber() string {
	if o == nil || o.TrackingNumber.Get() == nil {
		var ret string
		return ret
	}

	return *o.TrackingNumber.Get()
}

// GetTrackingNumberOk returns a tuple with the TrackingNumber field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddBoxToOrder) GetTrackingNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackingNumber.Get(), o.TrackingNumber.IsSet()
}

// SetTrackingNumber sets field value
func (o *AddBoxToOrder) SetTrackingNumber(v string) {
	o.TrackingNumber.Set(&v)
}

func (o AddBoxToOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddBoxToOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BoxItems != nil {
		toSerialize["box_items"] = o.BoxItems
	}
	toSerialize["tracking_number"] = o.TrackingNumber.Get()
	return toSerialize, nil
}

type NullableAddBoxToOrder struct {
	value *AddBoxToOrder
	isSet bool
}

func (v NullableAddBoxToOrder) Get() *AddBoxToOrder {
	return v.value
}

func (v *NullableAddBoxToOrder) Set(val *AddBoxToOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBoxToOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBoxToOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBoxToOrder(val *AddBoxToOrder) *NullableAddBoxToOrder {
	return &NullableAddBoxToOrder{value: val, isSet: true}
}

func (v NullableAddBoxToOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBoxToOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


