/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// ProductsProductActiveStatus the model 'ProductsProductActiveStatus'
type ProductsProductActiveStatus string

// List of Products.ProductActiveStatus
const (
	ProductsProductActiveStatusANY ProductsProductActiveStatus = "Any"
	ProductsProductActiveStatusACTIVE ProductsProductActiveStatus = "Active"
	ProductsProductActiveStatusINACTIVE ProductsProductActiveStatus = "Inactive"
)

func (v *ProductsProductActiveStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ProductsProductActiveStatus(value)
	for _, existing := range []ProductsProductActiveStatus{ "Any", "Active", "Inactive",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ProductsProductActiveStatus", value)
}

// Ptr returns reference to Products.ProductActiveStatus value
func (v ProductsProductActiveStatus) Ptr() *ProductsProductActiveStatus {
	return &v
}

type NullableProductsProductActiveStatus struct {
	value *ProductsProductActiveStatus
	isSet bool
}

func (v NullableProductsProductActiveStatus) Get() *ProductsProductActiveStatus {
	return v.value
}

func (v *NullableProductsProductActiveStatus) Set(val *ProductsProductActiveStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableProductsProductActiveStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableProductsProductActiveStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductsProductActiveStatus(val *ProductsProductActiveStatus) *NullableProductsProductActiveStatus {
	return &NullableProductsProductActiveStatus{value: val, isSet: true}
}

func (v NullableProductsProductActiveStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductsProductActiveStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

