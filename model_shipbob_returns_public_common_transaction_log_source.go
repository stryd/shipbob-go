/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// ShipbobReturnsPublicCommonTransactionLogSource the model 'ShipbobReturnsPublicCommonTransactionLogSource'
type ShipbobReturnsPublicCommonTransactionLogSource string

// List of Shipbob.Returns.Public.Common.TransactionLogSource
const (
	RETURN_LABEL_INVOICE ShipbobReturnsPublicCommonTransactionLogSource = "ReturnLabelInvoice"
	RETURN_PROCESSING_FEE ShipbobReturnsPublicCommonTransactionLogSource = "ReturnProcessingFee"
	RETURN_TO_SENDER_FEE ShipbobReturnsPublicCommonTransactionLogSource = "ReturnToSenderFee"
)

func (v *ShipbobReturnsPublicCommonTransactionLogSource) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ShipbobReturnsPublicCommonTransactionLogSource(value)
	for _, existing := range []ShipbobReturnsPublicCommonTransactionLogSource{ "ReturnLabelInvoice", "ReturnProcessingFee", "ReturnToSenderFee",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ShipbobReturnsPublicCommonTransactionLogSource", value)
}

// Ptr returns reference to Shipbob.Returns.Public.Common.TransactionLogSource value
func (v ShipbobReturnsPublicCommonTransactionLogSource) Ptr() *ShipbobReturnsPublicCommonTransactionLogSource {
	return &v
}

type NullableShipbobReturnsPublicCommonTransactionLogSource struct {
	value *ShipbobReturnsPublicCommonTransactionLogSource
	isSet bool
}

func (v NullableShipbobReturnsPublicCommonTransactionLogSource) Get() *ShipbobReturnsPublicCommonTransactionLogSource {
	return v.value
}

func (v *NullableShipbobReturnsPublicCommonTransactionLogSource) Set(val *ShipbobReturnsPublicCommonTransactionLogSource) {
	v.value = val
	v.isSet = true
}

func (v NullableShipbobReturnsPublicCommonTransactionLogSource) IsSet() bool {
	return v.isSet
}

func (v *NullableShipbobReturnsPublicCommonTransactionLogSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipbobReturnsPublicCommonTransactionLogSource(val *ShipbobReturnsPublicCommonTransactionLogSource) *NullableShipbobReturnsPublicCommonTransactionLogSource {
	return &NullableShipbobReturnsPublicCommonTransactionLogSource{value: val, isSet: true}
}

func (v NullableShipbobReturnsPublicCommonTransactionLogSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipbobReturnsPublicCommonTransactionLogSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

