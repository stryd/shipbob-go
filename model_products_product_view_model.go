/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"time"
)

// ProductsProductViewModel struct for ProductsProductViewModel
type ProductsProductViewModel struct {
	// Barcode for the product
	Barcode NullableString `json:"barcode,omitempty"`
	BundleRootInformation *ProductsBundleRootInformationViewModel `json:"bundle_root_information,omitempty"`
	Channel *ProductsChannelViewModel `json:"channel,omitempty"`
	// Date the product was created
	CreatedDate *time.Time `json:"created_date,omitempty"`
	// The inventory that this product will resolve to when packing a shipment
	FulfillableInventoryItems []ProductsInventoryItemViewModel `json:"fulfillable_inventory_items,omitempty"`
	// Fulfillable quantity of this product broken down by fulfillment center location
	FulfillableQuantityByFulfillmentCenter []ProductsFulfillmentCenterQuantityViewModel `json:"fulfillable_quantity_by_fulfillment_center,omitempty"`
	// Unique identifier of the product
	Id *int32 `json:"id,omitempty"`
	// The name of the product
	Name NullableString `json:"name,omitempty"`
	// Unique reference identifier of the product
	ReferenceId NullableString `json:"reference_id,omitempty"`
	// Stock keeping unit for the product
	Sku NullableString `json:"sku,omitempty"`
	// Total committed quantity of this product
	TotalCommittedQuantity *int32 `json:"total_committed_quantity,omitempty"`
	// Total fulfillable quantity of this product
	TotalFulfillableQuantity *int32 `json:"total_fulfillable_quantity,omitempty"`
	// Total on hand quantity of this product
	TotalOnhandQuantity *int32 `json:"total_onhand_quantity,omitempty"`
}

// NewProductsProductViewModel instantiates a new ProductsProductViewModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductsProductViewModel() *ProductsProductViewModel {
	this := ProductsProductViewModel{}
	return &this
}

// NewProductsProductViewModelWithDefaults instantiates a new ProductsProductViewModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductsProductViewModelWithDefaults() *ProductsProductViewModel {
	this := ProductsProductViewModel{}
	return &this
}

// GetBarcode returns the Barcode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductsProductViewModel) GetBarcode() string {
	if o == nil || o.Barcode.Get() == nil {
		var ret string
		return ret
	}
	return *o.Barcode.Get()
}

// GetBarcodeOk returns a tuple with the Barcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductsProductViewModel) GetBarcodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Barcode.Get(), o.Barcode.IsSet()
}

// HasBarcode returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasBarcode() bool {
	if o != nil && o.Barcode.IsSet() {
		return true
	}

	return false
}

// SetBarcode gets a reference to the given NullableString and assigns it to the Barcode field.
func (o *ProductsProductViewModel) SetBarcode(v string) {
	o.Barcode.Set(&v)
}
// SetBarcodeNil sets the value for Barcode to be an explicit nil
func (o *ProductsProductViewModel) SetBarcodeNil() {
	o.Barcode.Set(nil)
}

// UnsetBarcode ensures that no value is present for Barcode, not even an explicit nil
func (o *ProductsProductViewModel) UnsetBarcode() {
	o.Barcode.Unset()
}

// GetBundleRootInformation returns the BundleRootInformation field value if set, zero value otherwise.
func (o *ProductsProductViewModel) GetBundleRootInformation() ProductsBundleRootInformationViewModel {
	if o == nil || o.BundleRootInformation == nil {
		var ret ProductsBundleRootInformationViewModel
		return ret
	}
	return *o.BundleRootInformation
}

// GetBundleRootInformationOk returns a tuple with the BundleRootInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsProductViewModel) GetBundleRootInformationOk() (*ProductsBundleRootInformationViewModel, bool) {
	if o == nil || o.BundleRootInformation == nil {
		return nil, false
	}
	return o.BundleRootInformation, true
}

// HasBundleRootInformation returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasBundleRootInformation() bool {
	if o != nil && o.BundleRootInformation != nil {
		return true
	}

	return false
}

// SetBundleRootInformation gets a reference to the given ProductsBundleRootInformationViewModel and assigns it to the BundleRootInformation field.
func (o *ProductsProductViewModel) SetBundleRootInformation(v ProductsBundleRootInformationViewModel) {
	o.BundleRootInformation = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *ProductsProductViewModel) GetChannel() ProductsChannelViewModel {
	if o == nil || o.Channel == nil {
		var ret ProductsChannelViewModel
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsProductViewModel) GetChannelOk() (*ProductsChannelViewModel, bool) {
	if o == nil || o.Channel == nil {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasChannel() bool {
	if o != nil && o.Channel != nil {
		return true
	}

	return false
}

// SetChannel gets a reference to the given ProductsChannelViewModel and assigns it to the Channel field.
func (o *ProductsProductViewModel) SetChannel(v ProductsChannelViewModel) {
	o.Channel = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *ProductsProductViewModel) GetCreatedDate() time.Time {
	if o == nil || o.CreatedDate == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsProductViewModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || o.CreatedDate == nil {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasCreatedDate() bool {
	if o != nil && o.CreatedDate != nil {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *ProductsProductViewModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetFulfillableInventoryItems returns the FulfillableInventoryItems field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductsProductViewModel) GetFulfillableInventoryItems() []ProductsInventoryItemViewModel {
	if o == nil  {
		var ret []ProductsInventoryItemViewModel
		return ret
	}
	return o.FulfillableInventoryItems
}

// GetFulfillableInventoryItemsOk returns a tuple with the FulfillableInventoryItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductsProductViewModel) GetFulfillableInventoryItemsOk() (*[]ProductsInventoryItemViewModel, bool) {
	if o == nil || o.FulfillableInventoryItems == nil {
		return nil, false
	}
	return &o.FulfillableInventoryItems, true
}

// HasFulfillableInventoryItems returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasFulfillableInventoryItems() bool {
	if o != nil && o.FulfillableInventoryItems != nil {
		return true
	}

	return false
}

// SetFulfillableInventoryItems gets a reference to the given []ProductsInventoryItemViewModel and assigns it to the FulfillableInventoryItems field.
func (o *ProductsProductViewModel) SetFulfillableInventoryItems(v []ProductsInventoryItemViewModel) {
	o.FulfillableInventoryItems = v
}

// GetFulfillableQuantityByFulfillmentCenter returns the FulfillableQuantityByFulfillmentCenter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductsProductViewModel) GetFulfillableQuantityByFulfillmentCenter() []ProductsFulfillmentCenterQuantityViewModel {
	if o == nil  {
		var ret []ProductsFulfillmentCenterQuantityViewModel
		return ret
	}
	return o.FulfillableQuantityByFulfillmentCenter
}

// GetFulfillableQuantityByFulfillmentCenterOk returns a tuple with the FulfillableQuantityByFulfillmentCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductsProductViewModel) GetFulfillableQuantityByFulfillmentCenterOk() (*[]ProductsFulfillmentCenterQuantityViewModel, bool) {
	if o == nil || o.FulfillableQuantityByFulfillmentCenter == nil {
		return nil, false
	}
	return &o.FulfillableQuantityByFulfillmentCenter, true
}

// HasFulfillableQuantityByFulfillmentCenter returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasFulfillableQuantityByFulfillmentCenter() bool {
	if o != nil && o.FulfillableQuantityByFulfillmentCenter != nil {
		return true
	}

	return false
}

// SetFulfillableQuantityByFulfillmentCenter gets a reference to the given []ProductsFulfillmentCenterQuantityViewModel and assigns it to the FulfillableQuantityByFulfillmentCenter field.
func (o *ProductsProductViewModel) SetFulfillableQuantityByFulfillmentCenter(v []ProductsFulfillmentCenterQuantityViewModel) {
	o.FulfillableQuantityByFulfillmentCenter = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductsProductViewModel) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsProductViewModel) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProductsProductViewModel) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductsProductViewModel) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductsProductViewModel) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ProductsProductViewModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ProductsProductViewModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ProductsProductViewModel) UnsetName() {
	o.Name.Unset()
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductsProductViewModel) GetReferenceId() string {
	if o == nil || o.ReferenceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReferenceId.Get()
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductsProductViewModel) GetReferenceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReferenceId.Get(), o.ReferenceId.IsSet()
}

// HasReferenceId returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasReferenceId() bool {
	if o != nil && o.ReferenceId.IsSet() {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given NullableString and assigns it to the ReferenceId field.
func (o *ProductsProductViewModel) SetReferenceId(v string) {
	o.ReferenceId.Set(&v)
}
// SetReferenceIdNil sets the value for ReferenceId to be an explicit nil
func (o *ProductsProductViewModel) SetReferenceIdNil() {
	o.ReferenceId.Set(nil)
}

// UnsetReferenceId ensures that no value is present for ReferenceId, not even an explicit nil
func (o *ProductsProductViewModel) UnsetReferenceId() {
	o.ReferenceId.Unset()
}

// GetSku returns the Sku field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductsProductViewModel) GetSku() string {
	if o == nil || o.Sku.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sku.Get()
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductsProductViewModel) GetSkuOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Sku.Get(), o.Sku.IsSet()
}

// HasSku returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasSku() bool {
	if o != nil && o.Sku.IsSet() {
		return true
	}

	return false
}

// SetSku gets a reference to the given NullableString and assigns it to the Sku field.
func (o *ProductsProductViewModel) SetSku(v string) {
	o.Sku.Set(&v)
}
// SetSkuNil sets the value for Sku to be an explicit nil
func (o *ProductsProductViewModel) SetSkuNil() {
	o.Sku.Set(nil)
}

// UnsetSku ensures that no value is present for Sku, not even an explicit nil
func (o *ProductsProductViewModel) UnsetSku() {
	o.Sku.Unset()
}

// GetTotalCommittedQuantity returns the TotalCommittedQuantity field value if set, zero value otherwise.
func (o *ProductsProductViewModel) GetTotalCommittedQuantity() int32 {
	if o == nil || o.TotalCommittedQuantity == nil {
		var ret int32
		return ret
	}
	return *o.TotalCommittedQuantity
}

// GetTotalCommittedQuantityOk returns a tuple with the TotalCommittedQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsProductViewModel) GetTotalCommittedQuantityOk() (*int32, bool) {
	if o == nil || o.TotalCommittedQuantity == nil {
		return nil, false
	}
	return o.TotalCommittedQuantity, true
}

// HasTotalCommittedQuantity returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasTotalCommittedQuantity() bool {
	if o != nil && o.TotalCommittedQuantity != nil {
		return true
	}

	return false
}

// SetTotalCommittedQuantity gets a reference to the given int32 and assigns it to the TotalCommittedQuantity field.
func (o *ProductsProductViewModel) SetTotalCommittedQuantity(v int32) {
	o.TotalCommittedQuantity = &v
}

// GetTotalFulfillableQuantity returns the TotalFulfillableQuantity field value if set, zero value otherwise.
func (o *ProductsProductViewModel) GetTotalFulfillableQuantity() int32 {
	if o == nil || o.TotalFulfillableQuantity == nil {
		var ret int32
		return ret
	}
	return *o.TotalFulfillableQuantity
}

// GetTotalFulfillableQuantityOk returns a tuple with the TotalFulfillableQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsProductViewModel) GetTotalFulfillableQuantityOk() (*int32, bool) {
	if o == nil || o.TotalFulfillableQuantity == nil {
		return nil, false
	}
	return o.TotalFulfillableQuantity, true
}

// HasTotalFulfillableQuantity returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasTotalFulfillableQuantity() bool {
	if o != nil && o.TotalFulfillableQuantity != nil {
		return true
	}

	return false
}

// SetTotalFulfillableQuantity gets a reference to the given int32 and assigns it to the TotalFulfillableQuantity field.
func (o *ProductsProductViewModel) SetTotalFulfillableQuantity(v int32) {
	o.TotalFulfillableQuantity = &v
}

// GetTotalOnhandQuantity returns the TotalOnhandQuantity field value if set, zero value otherwise.
func (o *ProductsProductViewModel) GetTotalOnhandQuantity() int32 {
	if o == nil || o.TotalOnhandQuantity == nil {
		var ret int32
		return ret
	}
	return *o.TotalOnhandQuantity
}

// GetTotalOnhandQuantityOk returns a tuple with the TotalOnhandQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsProductViewModel) GetTotalOnhandQuantityOk() (*int32, bool) {
	if o == nil || o.TotalOnhandQuantity == nil {
		return nil, false
	}
	return o.TotalOnhandQuantity, true
}

// HasTotalOnhandQuantity returns a boolean if a field has been set.
func (o *ProductsProductViewModel) HasTotalOnhandQuantity() bool {
	if o != nil && o.TotalOnhandQuantity != nil {
		return true
	}

	return false
}

// SetTotalOnhandQuantity gets a reference to the given int32 and assigns it to the TotalOnhandQuantity field.
func (o *ProductsProductViewModel) SetTotalOnhandQuantity(v int32) {
	o.TotalOnhandQuantity = &v
}

func (o ProductsProductViewModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Barcode.IsSet() {
		toSerialize["barcode"] = o.Barcode.Get()
	}
	if o.BundleRootInformation != nil {
		toSerialize["bundle_root_information"] = o.BundleRootInformation
	}
	if o.Channel != nil {
		toSerialize["channel"] = o.Channel
	}
	if o.CreatedDate != nil {
		toSerialize["created_date"] = o.CreatedDate
	}
	if o.FulfillableInventoryItems != nil {
		toSerialize["fulfillable_inventory_items"] = o.FulfillableInventoryItems
	}
	if o.FulfillableQuantityByFulfillmentCenter != nil {
		toSerialize["fulfillable_quantity_by_fulfillment_center"] = o.FulfillableQuantityByFulfillmentCenter
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ReferenceId.IsSet() {
		toSerialize["reference_id"] = o.ReferenceId.Get()
	}
	if o.Sku.IsSet() {
		toSerialize["sku"] = o.Sku.Get()
	}
	if o.TotalCommittedQuantity != nil {
		toSerialize["total_committed_quantity"] = o.TotalCommittedQuantity
	}
	if o.TotalFulfillableQuantity != nil {
		toSerialize["total_fulfillable_quantity"] = o.TotalFulfillableQuantity
	}
	if o.TotalOnhandQuantity != nil {
		toSerialize["total_onhand_quantity"] = o.TotalOnhandQuantity
	}
	return json.Marshal(toSerialize)
}

type NullableProductsProductViewModel struct {
	value *ProductsProductViewModel
	isSet bool
}

func (v NullableProductsProductViewModel) Get() *ProductsProductViewModel {
	return v.value
}

func (v *NullableProductsProductViewModel) Set(val *ProductsProductViewModel) {
	v.value = val
	v.isSet = true
}

func (v NullableProductsProductViewModel) IsSet() bool {
	return v.isSet
}

func (v *NullableProductsProductViewModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductsProductViewModel(val *ProductsProductViewModel) *NullableProductsProductViewModel {
	return &NullableProductsProductViewModel{value: val, isSet: true}
}

func (v NullableProductsProductViewModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductsProductViewModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


