/*
ShipBob Developer API

ShipBob Developer API Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// checks if the OrderEstimate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderEstimate{}

// OrderEstimate struct for OrderEstimate
type OrderEstimate struct {
	// Array of estimates for each shipping method
	Estimates []OrderEstimateEstimatesInner `json:"estimates,omitempty"`
}

// NewOrderEstimate instantiates a new OrderEstimate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderEstimate() *OrderEstimate {
	this := OrderEstimate{}
	return &this
}

// NewOrderEstimateWithDefaults instantiates a new OrderEstimate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderEstimateWithDefaults() *OrderEstimate {
	this := OrderEstimate{}
	return &this
}

// GetEstimates returns the Estimates field value if set, zero value otherwise.
func (o *OrderEstimate) GetEstimates() []OrderEstimateEstimatesInner {
	if o == nil || IsNil(o.Estimates) {
		var ret []OrderEstimateEstimatesInner
		return ret
	}
	return o.Estimates
}

// GetEstimatesOk returns a tuple with the Estimates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderEstimate) GetEstimatesOk() ([]OrderEstimateEstimatesInner, bool) {
	if o == nil || IsNil(o.Estimates) {
		return nil, false
	}
	return o.Estimates, true
}

// HasEstimates returns a boolean if a field has been set.
func (o *OrderEstimate) HasEstimates() bool {
	if o != nil && !IsNil(o.Estimates) {
		return true
	}

	return false
}

// SetEstimates gets a reference to the given []OrderEstimateEstimatesInner and assigns it to the Estimates field.
func (o *OrderEstimate) SetEstimates(v []OrderEstimateEstimatesInner) {
	o.Estimates = v
}

func (o OrderEstimate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderEstimate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Estimates) {
		toSerialize["estimates"] = o.Estimates
	}
	return toSerialize, nil
}

type NullableOrderEstimate struct {
	value *OrderEstimate
	isSet bool
}

func (v NullableOrderEstimate) Get() *OrderEstimate {
	return v.value
}

func (v *NullableOrderEstimate) Set(val *OrderEstimate) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderEstimate) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderEstimate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderEstimate(val *OrderEstimate) *NullableOrderEstimate {
	return &NullableOrderEstimate{value: val, isSet: true}
}

func (v NullableOrderEstimate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderEstimate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
