/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// ReceivingReceivingStatus the model 'ReceivingReceivingStatus'
type ReceivingReceivingStatus string

// List of Receiving.ReceivingStatus
const (
	AWAITING ReceivingReceivingStatus = "Awaiting"
	PROCESSING ReceivingReceivingStatus = "Processing"
	COMPLETED ReceivingReceivingStatus = "Completed"
	CANCELLED ReceivingReceivingStatus = "Cancelled"
	INCOMPLETE ReceivingReceivingStatus = "Incomplete"
	ARRIVED ReceivingReceivingStatus = "Arrived"
	PARTIALLY_ARRIVED ReceivingReceivingStatus = "PartiallyArrived"
)

func (v *ReceivingReceivingStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ReceivingReceivingStatus(value)
	for _, existing := range []ReceivingReceivingStatus{ "Awaiting", "Processing", "Completed", "Cancelled", "Incomplete", "Arrived", "PartiallyArrived",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ReceivingReceivingStatus", value)
}

// Ptr returns reference to Receiving.ReceivingStatus value
func (v ReceivingReceivingStatus) Ptr() *ReceivingReceivingStatus {
	return &v
}

type NullableReceivingReceivingStatus struct {
	value *ReceivingReceivingStatus
	isSet bool
}

func (v NullableReceivingReceivingStatus) Get() *ReceivingReceivingStatus {
	return v.value
}

func (v *NullableReceivingReceivingStatus) Set(val *ReceivingReceivingStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableReceivingReceivingStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableReceivingReceivingStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReceivingReceivingStatus(val *ReceivingReceivingStatus) *NullableReceivingReceivingStatus {
	return &NullableReceivingReceivingStatus{value: val, isSet: true}
}

func (v NullableReceivingReceivingStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReceivingReceivingStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

