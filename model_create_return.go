/*
ShipBob Developer API

ShipBob Developer API Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// checks if the CreateReturn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateReturn{}

// CreateReturn struct for CreateReturn
type CreateReturn struct {
	FulfillmentCenter ReturnFulfillmentCenter `json:"fulfillment_center"`
	// Array of inventory items being returned
	Inventory []ReturnInventory `json:"inventory"`
	// Shipment from which the items in the return originated
	OriginalShipmentId NullableInt32 `json:"original_shipment_id,omitempty"`
	// Client-defined external unique identifier for the return order
	ReferenceId NullableString `json:"reference_id"`
	// Tracking number for the return shipment
	TrackingNumber NullableString `json:"tracking_number,omitempty"`
}

// NewCreateReturn instantiates a new CreateReturn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateReturn(fulfillmentCenter ReturnFulfillmentCenter, inventory []ReturnInventory, referenceId NullableString) *CreateReturn {
	this := CreateReturn{}
	this.FulfillmentCenter = fulfillmentCenter
	this.Inventory = inventory
	this.ReferenceId = referenceId
	return &this
}

// NewCreateReturnWithDefaults instantiates a new CreateReturn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateReturnWithDefaults() *CreateReturn {
	this := CreateReturn{}
	return &this
}

// GetFulfillmentCenter returns the FulfillmentCenter field value
func (o *CreateReturn) GetFulfillmentCenter() ReturnFulfillmentCenter {
	if o == nil {
		var ret ReturnFulfillmentCenter
		return ret
	}

	return o.FulfillmentCenter
}

// GetFulfillmentCenterOk returns a tuple with the FulfillmentCenter field value
// and a boolean to check if the value has been set.
func (o *CreateReturn) GetFulfillmentCenterOk() (*ReturnFulfillmentCenter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FulfillmentCenter, true
}

// SetFulfillmentCenter sets field value
func (o *CreateReturn) SetFulfillmentCenter(v ReturnFulfillmentCenter) {
	o.FulfillmentCenter = v
}

// GetInventory returns the Inventory field value
// If the value is explicit nil, the zero value for []ReturnInventory will be returned
func (o *CreateReturn) GetInventory() []ReturnInventory {
	if o == nil {
		var ret []ReturnInventory
		return ret
	}

	return o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateReturn) GetInventoryOk() ([]ReturnInventory, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// SetInventory sets field value
func (o *CreateReturn) SetInventory(v []ReturnInventory) {
	o.Inventory = v
}

// GetOriginalShipmentId returns the OriginalShipmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateReturn) GetOriginalShipmentId() int32 {
	if o == nil || IsNil(o.OriginalShipmentId.Get()) {
		var ret int32
		return ret
	}
	return *o.OriginalShipmentId.Get()
}

// GetOriginalShipmentIdOk returns a tuple with the OriginalShipmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateReturn) GetOriginalShipmentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalShipmentId.Get(), o.OriginalShipmentId.IsSet()
}

// HasOriginalShipmentId returns a boolean if a field has been set.
func (o *CreateReturn) HasOriginalShipmentId() bool {
	if o != nil && o.OriginalShipmentId.IsSet() {
		return true
	}

	return false
}

// SetOriginalShipmentId gets a reference to the given NullableInt32 and assigns it to the OriginalShipmentId field.
func (o *CreateReturn) SetOriginalShipmentId(v int32) {
	o.OriginalShipmentId.Set(&v)
}
// SetOriginalShipmentIdNil sets the value for OriginalShipmentId to be an explicit nil
func (o *CreateReturn) SetOriginalShipmentIdNil() {
	o.OriginalShipmentId.Set(nil)
}

// UnsetOriginalShipmentId ensures that no value is present for OriginalShipmentId, not even an explicit nil
func (o *CreateReturn) UnsetOriginalShipmentId() {
	o.OriginalShipmentId.Unset()
}

// GetReferenceId returns the ReferenceId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateReturn) GetReferenceId() string {
	if o == nil || o.ReferenceId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ReferenceId.Get()
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateReturn) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferenceId.Get(), o.ReferenceId.IsSet()
}

// SetReferenceId sets field value
func (o *CreateReturn) SetReferenceId(v string) {
	o.ReferenceId.Set(&v)
}

// GetTrackingNumber returns the TrackingNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateReturn) GetTrackingNumber() string {
	if o == nil || IsNil(o.TrackingNumber.Get()) {
		var ret string
		return ret
	}
	return *o.TrackingNumber.Get()
}

// GetTrackingNumberOk returns a tuple with the TrackingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateReturn) GetTrackingNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackingNumber.Get(), o.TrackingNumber.IsSet()
}

// HasTrackingNumber returns a boolean if a field has been set.
func (o *CreateReturn) HasTrackingNumber() bool {
	if o != nil && o.TrackingNumber.IsSet() {
		return true
	}

	return false
}

// SetTrackingNumber gets a reference to the given NullableString and assigns it to the TrackingNumber field.
func (o *CreateReturn) SetTrackingNumber(v string) {
	o.TrackingNumber.Set(&v)
}
// SetTrackingNumberNil sets the value for TrackingNumber to be an explicit nil
func (o *CreateReturn) SetTrackingNumberNil() {
	o.TrackingNumber.Set(nil)
}

// UnsetTrackingNumber ensures that no value is present for TrackingNumber, not even an explicit nil
func (o *CreateReturn) UnsetTrackingNumber() {
	o.TrackingNumber.Unset()
}

func (o CreateReturn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateReturn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fulfillment_center"] = o.FulfillmentCenter
	if o.Inventory != nil {
		toSerialize["inventory"] = o.Inventory
	}
	if o.OriginalShipmentId.IsSet() {
		toSerialize["original_shipment_id"] = o.OriginalShipmentId.Get()
	}
	toSerialize["reference_id"] = o.ReferenceId.Get()
	if o.TrackingNumber.IsSet() {
		toSerialize["tracking_number"] = o.TrackingNumber.Get()
	}
	return toSerialize, nil
}

type NullableCreateReturn struct {
	value *CreateReturn
	isSet bool
}

func (v NullableCreateReturn) Get() *CreateReturn {
	return v.value
}

func (v *NullableCreateReturn) Set(val *CreateReturn) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateReturn) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateReturn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateReturn(val *CreateReturn) *NullableCreateReturn {
	return &NullableCreateReturn{value: val, isSet: true}
}

func (v NullableCreateReturn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateReturn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


