/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// EstimateFulfillmentRequest struct for EstimateFulfillmentRequest
type EstimateFulfillmentRequest struct {
	Address EstimationAddress `json:"address"`
	// Products to be included in the order. Each product must include one of reference_id or id
	Products []EstimateFulfillmentRequestProducts `json:"products"`
	// Array of strings specifying shipping methods for which to fetch estimates.\\r\\nIf this field is omitted we will return estimates for all shipping methods defined in ShipBob
	ShippingMethods *[]string `json:"shipping_methods,omitempty"`
}

// NewEstimateFulfillmentRequest instantiates a new EstimateFulfillmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEstimateFulfillmentRequest(address EstimationAddress, products []EstimateFulfillmentRequestProducts) *EstimateFulfillmentRequest {
	this := EstimateFulfillmentRequest{}
	this.Address = address
	this.Products = products
	return &this
}

// NewEstimateFulfillmentRequestWithDefaults instantiates a new EstimateFulfillmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEstimateFulfillmentRequestWithDefaults() *EstimateFulfillmentRequest {
	this := EstimateFulfillmentRequest{}
	return &this
}

// GetAddress returns the Address field value
func (o *EstimateFulfillmentRequest) GetAddress() EstimationAddress {
	if o == nil {
		var ret EstimationAddress
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *EstimateFulfillmentRequest) GetAddressOk() (*EstimationAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *EstimateFulfillmentRequest) SetAddress(v EstimationAddress) {
	o.Address = v
}

// GetProducts returns the Products field value
func (o *EstimateFulfillmentRequest) GetProducts() []EstimateFulfillmentRequestProducts {
	if o == nil {
		var ret []EstimateFulfillmentRequestProducts
		return ret
	}

	return o.Products
}

// GetProductsOk returns a tuple with the Products field value
// and a boolean to check if the value has been set.
func (o *EstimateFulfillmentRequest) GetProductsOk() (*[]EstimateFulfillmentRequestProducts, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Products, true
}

// SetProducts sets field value
func (o *EstimateFulfillmentRequest) SetProducts(v []EstimateFulfillmentRequestProducts) {
	o.Products = v
}

// GetShippingMethods returns the ShippingMethods field value if set, zero value otherwise.
func (o *EstimateFulfillmentRequest) GetShippingMethods() []string {
	if o == nil || o.ShippingMethods == nil {
		var ret []string
		return ret
	}
	return *o.ShippingMethods
}

// GetShippingMethodsOk returns a tuple with the ShippingMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateFulfillmentRequest) GetShippingMethodsOk() (*[]string, bool) {
	if o == nil || o.ShippingMethods == nil {
		return nil, false
	}
	return o.ShippingMethods, true
}

// HasShippingMethods returns a boolean if a field has been set.
func (o *EstimateFulfillmentRequest) HasShippingMethods() bool {
	if o != nil && o.ShippingMethods != nil {
		return true
	}

	return false
}

// SetShippingMethods gets a reference to the given []string and assigns it to the ShippingMethods field.
func (o *EstimateFulfillmentRequest) SetShippingMethods(v []string) {
	o.ShippingMethods = &v
}

func (o EstimateFulfillmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["products"] = o.Products
	}
	if o.ShippingMethods != nil {
		toSerialize["shipping_methods"] = o.ShippingMethods
	}
	return json.Marshal(toSerialize)
}

type NullableEstimateFulfillmentRequest struct {
	value *EstimateFulfillmentRequest
	isSet bool
}

func (v NullableEstimateFulfillmentRequest) Get() *EstimateFulfillmentRequest {
	return v.value
}

func (v *NullableEstimateFulfillmentRequest) Set(val *EstimateFulfillmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEstimateFulfillmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEstimateFulfillmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEstimateFulfillmentRequest(val *EstimateFulfillmentRequest) *NullableEstimateFulfillmentRequest {
	return &NullableEstimateFulfillmentRequest{value: val, isSet: true}
}

func (v NullableEstimateFulfillmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEstimateFulfillmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
