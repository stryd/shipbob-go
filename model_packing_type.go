/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// PackingType the model 'PackingType'
type PackingType string

// List of PackingType
const (
	EVERYTHING_IN_ONE_BOX PackingType = "EverythingInOneBox"
	ONE_SKU_PER_BOX       PackingType = "OneSkuPerBox"
	MULTIPLE_SKU_PER_BOX  PackingType = "MultipleSkuPerBox"
)

func (v *PackingType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PackingType(value)
	for _, existing := range []PackingType{"EverythingInOneBox", "OneSkuPerBox", "MultipleSkuPerBox"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PackingType", value)
}

// Ptr returns reference to PackingType value
func (v PackingType) Ptr() *PackingType {
	return &v
}

type NullablePackingType struct {
	value *PackingType
	isSet bool
}

func (v NullablePackingType) Get() *PackingType {
	return v.value
}

func (v *NullablePackingType) Set(val *PackingType) {
	v.value = val
	v.isSet = true
}

func (v NullablePackingType) IsSet() bool {
	return v.isSet
}

func (v *NullablePackingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackingType(val *PackingType) *NullablePackingType {
	return &NullablePackingType{value: val, isSet: true}
}

func (v NullablePackingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
