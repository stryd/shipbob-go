/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// OrdersAddProductToOrderByProductIdModel struct for OrdersAddProductToOrderByProductIdModel
type OrdersAddProductToOrderByProductIdModel struct {
	// Unique id of the product
	Id int32 `json:"id"`
	// The quantity of this product ordered
	Quantity int32 `json:"quantity"`
}

// NewOrdersAddProductToOrderByProductIdModel instantiates a new OrdersAddProductToOrderByProductIdModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrdersAddProductToOrderByProductIdModel(id int32, quantity int32, ) *OrdersAddProductToOrderByProductIdModel {
	this := OrdersAddProductToOrderByProductIdModel{}
	this.Id = id
	this.Quantity = quantity
	return &this
}

// NewOrdersAddProductToOrderByProductIdModelWithDefaults instantiates a new OrdersAddProductToOrderByProductIdModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrdersAddProductToOrderByProductIdModelWithDefaults() *OrdersAddProductToOrderByProductIdModel {
	this := OrdersAddProductToOrderByProductIdModel{}
	return &this
}

// GetId returns the Id field value
func (o *OrdersAddProductToOrderByProductIdModel) GetId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrdersAddProductToOrderByProductIdModel) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrdersAddProductToOrderByProductIdModel) SetId(v int32) {
	o.Id = v
}

// GetQuantity returns the Quantity field value
func (o *OrdersAddProductToOrderByProductIdModel) GetQuantity() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *OrdersAddProductToOrderByProductIdModel) GetQuantityOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *OrdersAddProductToOrderByProductIdModel) SetQuantity(v int32) {
	o.Quantity = v
}

func (o OrdersAddProductToOrderByProductIdModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["quantity"] = o.Quantity
	}
	return json.Marshal(toSerialize)
}

type NullableOrdersAddProductToOrderByProductIdModel struct {
	value *OrdersAddProductToOrderByProductIdModel
	isSet bool
}

func (v NullableOrdersAddProductToOrderByProductIdModel) Get() *OrdersAddProductToOrderByProductIdModel {
	return v.value
}

func (v *NullableOrdersAddProductToOrderByProductIdModel) Set(val *OrdersAddProductToOrderByProductIdModel) {
	v.value = val
	v.isSet = true
}

func (v NullableOrdersAddProductToOrderByProductIdModel) IsSet() bool {
	return v.isSet
}

func (v *NullableOrdersAddProductToOrderByProductIdModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrdersAddProductToOrderByProductIdModel(val *OrdersAddProductToOrderByProductIdModel) *NullableOrdersAddProductToOrderByProductIdModel {
	return &NullableOrdersAddProductToOrderByProductIdModel{value: val, isSet: true}
}

func (v NullableOrdersAddProductToOrderByProductIdModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrdersAddProductToOrderByProductIdModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


