/*
ShipBob Developer API

ShipBob Developer API Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// checks if the AddProductToOrderByReferenceId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddProductToOrderByReferenceId{}

// AddProductToOrderByReferenceId struct for AddProductToOrderByReferenceId
type AddProductToOrderByReferenceId struct {
	// Name of the product
	Name *string `json:"name,omitempty"`
	// The quantity of this product ordered
	Quantity int32 `json:"quantity"`
	// Unique reference id of the product
	ReferenceId string `json:"reference_id"`
}

// NewAddProductToOrderByReferenceId instantiates a new AddProductToOrderByReferenceId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddProductToOrderByReferenceId(quantity int32, referenceId string) *AddProductToOrderByReferenceId {
	this := AddProductToOrderByReferenceId{}
	this.Quantity = quantity
	this.ReferenceId = referenceId
	return &this
}

// NewAddProductToOrderByReferenceIdWithDefaults instantiates a new AddProductToOrderByReferenceId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddProductToOrderByReferenceIdWithDefaults() *AddProductToOrderByReferenceId {
	this := AddProductToOrderByReferenceId{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddProductToOrderByReferenceId) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProductToOrderByReferenceId) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AddProductToOrderByReferenceId) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddProductToOrderByReferenceId) SetName(v string) {
	o.Name = &v
}

// GetQuantity returns the Quantity field value
func (o *AddProductToOrderByReferenceId) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *AddProductToOrderByReferenceId) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *AddProductToOrderByReferenceId) SetQuantity(v int32) {
	o.Quantity = v
}

// GetReferenceId returns the ReferenceId field value
func (o *AddProductToOrderByReferenceId) GetReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
func (o *AddProductToOrderByReferenceId) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceId, true
}

// SetReferenceId sets field value
func (o *AddProductToOrderByReferenceId) SetReferenceId(v string) {
	o.ReferenceId = v
}

func (o AddProductToOrderByReferenceId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddProductToOrderByReferenceId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["quantity"] = o.Quantity
	toSerialize["reference_id"] = o.ReferenceId
	return toSerialize, nil
}

type NullableAddProductToOrderByReferenceId struct {
	value *AddProductToOrderByReferenceId
	isSet bool
}

func (v NullableAddProductToOrderByReferenceId) Get() *AddProductToOrderByReferenceId {
	return v.value
}

func (v *NullableAddProductToOrderByReferenceId) Set(val *AddProductToOrderByReferenceId) {
	v.value = val
	v.isSet = true
}

func (v NullableAddProductToOrderByReferenceId) IsSet() bool {
	return v.isSet
}

func (v *NullableAddProductToOrderByReferenceId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddProductToOrderByReferenceId(val *AddProductToOrderByReferenceId) *NullableAddProductToOrderByReferenceId {
	return &NullableAddProductToOrderByReferenceId{value: val, isSet: true}
}

func (v NullableAddProductToOrderByReferenceId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddProductToOrderByReferenceId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


