/*
ShipBob Developer API

Testing InventoryApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package shipbob

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/stryd/shipbob-go"
)

func Test_shipbob_InventoryApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test InventoryApiService GetInventories", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.InventoryApi.GetInventories(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test InventoryApiService GetInventory", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var inventoryId int32

		resp, httpRes, err := apiClient.InventoryApi.GetInventory(context.Background(), inventoryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test InventoryApiService GetProductInventories", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var productId int32

		resp, httpRes, err := apiClient.InventoryApi.GetProductInventories(context.Background(), productId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
