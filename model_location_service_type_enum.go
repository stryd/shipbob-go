/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// LocationServiceTypeEnum the model 'LocationServiceTypeEnum'
type LocationServiceTypeEnum string

// List of Location.ServiceTypeEnum
const (
	LocationServiceTypeEnumRECEIVING LocationServiceTypeEnum = "Receiving"
	LocationServiceTypeEnumRETURNS LocationServiceTypeEnum = "Returns"
)

func (v *LocationServiceTypeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := LocationServiceTypeEnum(value)
	for _, existing := range []LocationServiceTypeEnum{ "Receiving", "Returns",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid LocationServiceTypeEnum", value)
}

// Ptr returns reference to Location.ServiceTypeEnum value
func (v LocationServiceTypeEnum) Ptr() *LocationServiceTypeEnum {
	return &v
}

type NullableLocationServiceTypeEnum struct {
	value *LocationServiceTypeEnum
	isSet bool
}

func (v NullableLocationServiceTypeEnum) Get() *LocationServiceTypeEnum {
	return v.value
}

func (v *NullableLocationServiceTypeEnum) Set(val *LocationServiceTypeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationServiceTypeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationServiceTypeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationServiceTypeEnum(val *LocationServiceTypeEnum) *NullableLocationServiceTypeEnum {
	return &NullableLocationServiceTypeEnum{value: val, isSet: true}
}

func (v NullableLocationServiceTypeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationServiceTypeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

