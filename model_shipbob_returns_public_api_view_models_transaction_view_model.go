/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// ShipbobReturnsPublicApiViewModelsTransactionViewModel struct for ShipbobReturnsPublicApiViewModelsTransactionViewModel
type ShipbobReturnsPublicApiViewModelsTransactionViewModel struct {
	// Transaction amount in dollars
	Amount *float64 `json:"amount,omitempty"`
	TransactionType *ShipbobReturnsPublicCommonTransactionLogSource `json:"transaction_type,omitempty"`
}

// NewShipbobReturnsPublicApiViewModelsTransactionViewModel instantiates a new ShipbobReturnsPublicApiViewModelsTransactionViewModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipbobReturnsPublicApiViewModelsTransactionViewModel() *ShipbobReturnsPublicApiViewModelsTransactionViewModel {
	this := ShipbobReturnsPublicApiViewModelsTransactionViewModel{}
	return &this
}

// NewShipbobReturnsPublicApiViewModelsTransactionViewModelWithDefaults instantiates a new ShipbobReturnsPublicApiViewModelsTransactionViewModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipbobReturnsPublicApiViewModelsTransactionViewModelWithDefaults() *ShipbobReturnsPublicApiViewModelsTransactionViewModel {
	this := ShipbobReturnsPublicApiViewModelsTransactionViewModel{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ShipbobReturnsPublicApiViewModelsTransactionViewModel) GetAmount() float64 {
	if o == nil || o.Amount == nil {
		var ret float64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipbobReturnsPublicApiViewModelsTransactionViewModel) GetAmountOk() (*float64, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ShipbobReturnsPublicApiViewModelsTransactionViewModel) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float64 and assigns it to the Amount field.
func (o *ShipbobReturnsPublicApiViewModelsTransactionViewModel) SetAmount(v float64) {
	o.Amount = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *ShipbobReturnsPublicApiViewModelsTransactionViewModel) GetTransactionType() ShipbobReturnsPublicCommonTransactionLogSource {
	if o == nil || o.TransactionType == nil {
		var ret ShipbobReturnsPublicCommonTransactionLogSource
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipbobReturnsPublicApiViewModelsTransactionViewModel) GetTransactionTypeOk() (*ShipbobReturnsPublicCommonTransactionLogSource, bool) {
	if o == nil || o.TransactionType == nil {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *ShipbobReturnsPublicApiViewModelsTransactionViewModel) HasTransactionType() bool {
	if o != nil && o.TransactionType != nil {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given ShipbobReturnsPublicCommonTransactionLogSource and assigns it to the TransactionType field.
func (o *ShipbobReturnsPublicApiViewModelsTransactionViewModel) SetTransactionType(v ShipbobReturnsPublicCommonTransactionLogSource) {
	o.TransactionType = &v
}

func (o ShipbobReturnsPublicApiViewModelsTransactionViewModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.TransactionType != nil {
		toSerialize["transaction_type"] = o.TransactionType
	}
	return json.Marshal(toSerialize)
}

type NullableShipbobReturnsPublicApiViewModelsTransactionViewModel struct {
	value *ShipbobReturnsPublicApiViewModelsTransactionViewModel
	isSet bool
}

func (v NullableShipbobReturnsPublicApiViewModelsTransactionViewModel) Get() *ShipbobReturnsPublicApiViewModelsTransactionViewModel {
	return v.value
}

func (v *NullableShipbobReturnsPublicApiViewModelsTransactionViewModel) Set(val *ShipbobReturnsPublicApiViewModelsTransactionViewModel) {
	v.value = val
	v.isSet = true
}

func (v NullableShipbobReturnsPublicApiViewModelsTransactionViewModel) IsSet() bool {
	return v.isSet
}

func (v *NullableShipbobReturnsPublicApiViewModelsTransactionViewModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipbobReturnsPublicApiViewModelsTransactionViewModel(val *ShipbobReturnsPublicApiViewModelsTransactionViewModel) *NullableShipbobReturnsPublicApiViewModelsTransactionViewModel {
	return &NullableShipbobReturnsPublicApiViewModelsTransactionViewModel{value: val, isSet: true}
}

func (v NullableShipbobReturnsPublicApiViewModelsTransactionViewModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipbobReturnsPublicApiViewModelsTransactionViewModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


