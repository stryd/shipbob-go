/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"time"
)

// CreateOrder struct for CreateOrder
type CreateOrder struct {
	// User friendly orderId or store order number that will be shown on the Orders Page. If not provided, referenceId will be used
	OrderNumber *string               `json:"order_number,omitempty"`
	Products    []CreateOrderProducts `json:"products"`
	// Date this order was purchase by the end user
	PurchaseDate   NullableTime  `json:"purchase_date,omitempty"`
	Recipient      RecipientInfo `json:"recipient"`
	ReferenceId    string        `json:"reference_id"`
	ShippingMethod string        `json:"shipping_method"`
	Tags           *[]Tag        `json:"tags,omitempty"`
	// Defaults to Direct to Consumer (DTC) if not provided. Note: B2B is not supported at this time
	Type *string `json:"type,omitempty"`
}

// NewCreateOrder instantiates a new CreateOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrder(products []CreateOrderProducts, recipient RecipientInfo, referenceId string, shippingMethod string) *CreateOrder {
	this := CreateOrder{}
	this.Products = products
	this.Recipient = recipient
	this.ReferenceId = referenceId
	this.ShippingMethod = shippingMethod
	return &this
}

// NewCreateOrderWithDefaults instantiates a new CreateOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrderWithDefaults() *CreateOrder {
	this := CreateOrder{}
	return &this
}

// GetOrderNumber returns the OrderNumber field value if set, zero value otherwise.
func (o *CreateOrder) GetOrderNumber() string {
	if o == nil || o.OrderNumber == nil {
		var ret string
		return ret
	}
	return *o.OrderNumber
}

// GetOrderNumberOk returns a tuple with the OrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrder) GetOrderNumberOk() (*string, bool) {
	if o == nil || o.OrderNumber == nil {
		return nil, false
	}
	return o.OrderNumber, true
}

// HasOrderNumber returns a boolean if a field has been set.
func (o *CreateOrder) HasOrderNumber() bool {
	if o != nil && o.OrderNumber != nil {
		return true
	}

	return false
}

// SetOrderNumber gets a reference to the given string and assigns it to the OrderNumber field.
func (o *CreateOrder) SetOrderNumber(v string) {
	o.OrderNumber = &v
}

// GetProducts returns the Products field value
func (o *CreateOrder) GetProducts() []CreateOrderProducts {
	if o == nil {
		var ret []CreateOrderProducts
		return ret
	}

	return o.Products
}

// GetProductsOk returns a tuple with the Products field value
// and a boolean to check if the value has been set.
func (o *CreateOrder) GetProductsOk() (*[]CreateOrderProducts, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Products, true
}

// SetProducts sets field value
func (o *CreateOrder) SetProducts(v []CreateOrderProducts) {
	o.Products = v
}

// GetPurchaseDate returns the PurchaseDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrder) GetPurchaseDate() time.Time {
	if o == nil || o.PurchaseDate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.PurchaseDate.Get()
}

// GetPurchaseDateOk returns a tuple with the PurchaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrder) GetPurchaseDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PurchaseDate.Get(), o.PurchaseDate.IsSet()
}

// HasPurchaseDate returns a boolean if a field has been set.
func (o *CreateOrder) HasPurchaseDate() bool {
	if o != nil && o.PurchaseDate.IsSet() {
		return true
	}

	return false
}

// SetPurchaseDate gets a reference to the given NullableTime and assigns it to the PurchaseDate field.
func (o *CreateOrder) SetPurchaseDate(v time.Time) {
	o.PurchaseDate.Set(&v)
}

// SetPurchaseDateNil sets the value for PurchaseDate to be an explicit nil
func (o *CreateOrder) SetPurchaseDateNil() {
	o.PurchaseDate.Set(nil)
}

// UnsetPurchaseDate ensures that no value is present for PurchaseDate, not even an explicit nil
func (o *CreateOrder) UnsetPurchaseDate() {
	o.PurchaseDate.Unset()
}

// GetRecipient returns the Recipient field value
func (o *CreateOrder) GetRecipient() RecipientInfo {
	if o == nil {
		var ret RecipientInfo
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *CreateOrder) GetRecipientOk() (*RecipientInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *CreateOrder) SetRecipient(v RecipientInfo) {
	o.Recipient = v
}

// GetReferenceId returns the ReferenceId field value
func (o *CreateOrder) GetReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
func (o *CreateOrder) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceId, true
}

// SetReferenceId sets field value
func (o *CreateOrder) SetReferenceId(v string) {
	o.ReferenceId = v
}

// GetShippingMethod returns the ShippingMethod field value
func (o *CreateOrder) GetShippingMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShippingMethod
}

// GetShippingMethodOk returns a tuple with the ShippingMethod field value
// and a boolean to check if the value has been set.
func (o *CreateOrder) GetShippingMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippingMethod, true
}

// SetShippingMethod sets field value
func (o *CreateOrder) SetShippingMethod(v string) {
	o.ShippingMethod = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateOrder) GetTags() []Tag {
	if o == nil || o.Tags == nil {
		var ret []Tag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrder) GetTagsOk() (*[]Tag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateOrder) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *CreateOrder) SetTags(v []Tag) {
	o.Tags = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateOrder) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrder) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateOrder) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CreateOrder) SetType(v string) {
	o.Type = &v
}

func (o CreateOrder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderNumber != nil {
		toSerialize["order_number"] = o.OrderNumber
	}
	if true {
		toSerialize["products"] = o.Products
	}
	if o.PurchaseDate.IsSet() {
		toSerialize["purchase_date"] = o.PurchaseDate.Get()
	}
	if true {
		toSerialize["recipient"] = o.Recipient
	}
	if true {
		toSerialize["reference_id"] = o.ReferenceId
	}
	if true {
		toSerialize["shipping_method"] = o.ShippingMethod
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOrder struct {
	value *CreateOrder
	isSet bool
}

func (v NullableCreateOrder) Get() *CreateOrder {
	return v.value
}

func (v *NullableCreateOrder) Set(val *CreateOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrder(val *CreateOrder) *NullableCreateOrder {
	return &NullableCreateOrder{value: val, isSet: true}
}

func (v NullableCreateOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
