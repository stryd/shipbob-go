/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// ReturnsReturnType the model 'ReturnsReturnType'
type ReturnsReturnType string

// List of Returns.ReturnType
const (
	ReturnsReturnTypeREGULAR ReturnsReturnType = "Regular"
	ReturnsReturnTypeRETURN_TO_SENDER ReturnsReturnType = "ReturnToSender"
)

func (v *ReturnsReturnType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ReturnsReturnType(value)
	for _, existing := range []ReturnsReturnType{ "Regular", "ReturnToSender",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ReturnsReturnType", value)
}

// Ptr returns reference to Returns.ReturnType value
func (v ReturnsReturnType) Ptr() *ReturnsReturnType {
	return &v
}

type NullableReturnsReturnType struct {
	value *ReturnsReturnType
	isSet bool
}

func (v NullableReturnsReturnType) Get() *ReturnsReturnType {
	return v.value
}

func (v *NullableReturnsReturnType) Set(val *ReturnsReturnType) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnsReturnType) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnsReturnType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnsReturnType(val *ReturnsReturnType) *NullableReturnsReturnType {
	return &NullableReturnsReturnType{value: val, isSet: true}
}

func (v NullableReturnsReturnType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnsReturnType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

