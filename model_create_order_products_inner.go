/*
ShipBob Developer API

ShipBob Developer API Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// checks if the CreateOrderProductsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrderProductsInner{}

// CreateOrderProductsInner struct for CreateOrderProductsInner
type CreateOrderProductsInner struct {
	// Unique id of the product
	Id *int32 `json:"id,omitempty"`
	// The quantity of this product ordered
	Quantity int32 `json:"quantity"`
	// Name of the product
	Name *string `json:"name,omitempty"`
	// Unique reference id of the product
	ReferenceId *string `json:"reference_id,omitempty"`
}

// NewCreateOrderProductsInner instantiates a new CreateOrderProductsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrderProductsInner(quantity int32) *CreateOrderProductsInner {
	this := CreateOrderProductsInner{}
	this.Quantity = quantity
	return &this
}

// NewCreateOrderProductsInnerWithDefaults instantiates a new CreateOrderProductsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrderProductsInnerWithDefaults() *CreateOrderProductsInner {
	this := CreateOrderProductsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateOrderProductsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderProductsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateOrderProductsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CreateOrderProductsInner) SetId(v int32) {
	o.Id = &v
}

// GetQuantity returns the Quantity field value
func (o *CreateOrderProductsInner) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *CreateOrderProductsInner) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *CreateOrderProductsInner) SetQuantity(v int32) {
	o.Quantity = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateOrderProductsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderProductsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateOrderProductsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateOrderProductsInner) SetName(v string) {
	o.Name = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *CreateOrderProductsInner) GetReferenceId() string {
	if o == nil || IsNil(o.ReferenceId) {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderProductsInner) GetReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceId) {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *CreateOrderProductsInner) HasReferenceId() bool {
	if o != nil && !IsNil(o.ReferenceId) {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *CreateOrderProductsInner) SetReferenceId(v string) {
	o.ReferenceId = &v
}

func (o CreateOrderProductsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrderProductsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["quantity"] = o.Quantity
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ReferenceId) {
		toSerialize["reference_id"] = o.ReferenceId
	}
	return toSerialize, nil
}

type NullableCreateOrderProductsInner struct {
	value *CreateOrderProductsInner
	isSet bool
}

func (v NullableCreateOrderProductsInner) Get() *CreateOrderProductsInner {
	return v.value
}

func (v *NullableCreateOrderProductsInner) Set(val *CreateOrderProductsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrderProductsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrderProductsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrderProductsInner(val *CreateOrderProductsInner) *NullableCreateOrderProductsInner {
	return &NullableCreateOrderProductsInner{value: val, isSet: true}
}

func (v NullableCreateOrderProductsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrderProductsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
