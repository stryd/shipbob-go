/*
ShipBob Developer API

ShipBob Developer API Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// GetLocations200ResponseInnerOneOf - struct for GetLocations200ResponseInnerOneOf
type GetLocations200ResponseInnerOneOf struct {
	InternalLocationV2 *InternalLocationV2
}

// InternalLocationV2AsGetLocations200ResponseInnerOneOf is a convenience function that returns InternalLocationV2 wrapped in GetLocations200ResponseInnerOneOf
func InternalLocationV2AsGetLocations200ResponseInnerOneOf(v *InternalLocationV2) GetLocations200ResponseInnerOneOf {
	return GetLocations200ResponseInnerOneOf{
		InternalLocationV2: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetLocations200ResponseInnerOneOf) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into InternalLocationV2
	err = newStrictDecoder(data).Decode(&dst.InternalLocationV2)
	if err == nil {
		jsonInternalLocationV2, _ := json.Marshal(dst.InternalLocationV2)
		if string(jsonInternalLocationV2) == "{}" { // empty struct
			dst.InternalLocationV2 = nil
		} else {
			match++
		}
	} else {
		dst.InternalLocationV2 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.InternalLocationV2 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetLocations200ResponseInnerOneOf)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetLocations200ResponseInnerOneOf)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetLocations200ResponseInnerOneOf) MarshalJSON() ([]byte, error) {
	if src.InternalLocationV2 != nil {
		return json.Marshal(&src.InternalLocationV2)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetLocations200ResponseInnerOneOf) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.InternalLocationV2 != nil {
		return obj.InternalLocationV2
	}

	// all schemas are nil
	return nil
}

type NullableGetLocations200ResponseInnerOneOf struct {
	value *GetLocations200ResponseInnerOneOf
	isSet bool
}

func (v NullableGetLocations200ResponseInnerOneOf) Get() *GetLocations200ResponseInnerOneOf {
	return v.value
}

func (v *NullableGetLocations200ResponseInnerOneOf) Set(val *GetLocations200ResponseInnerOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLocations200ResponseInnerOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLocations200ResponseInnerOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLocations200ResponseInnerOneOf(val *GetLocations200ResponseInnerOneOf) *NullableGetLocations200ResponseInnerOneOf {
	return &NullableGetLocations200ResponseInnerOneOf{value: val, isSet: true}
}

func (v NullableGetLocations200ResponseInnerOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLocations200ResponseInnerOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
