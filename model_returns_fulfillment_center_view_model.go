/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// ReturnsFulfillmentCenterViewModel Information about a fulfillment center
type ReturnsFulfillmentCenterViewModel struct {
	// Unique identifier of the fulfillment center
	Id int32 `json:"id"`
	// Name of the fulfillment center
	Name NullableString `json:"name,omitempty"`
}

// NewReturnsFulfillmentCenterViewModel instantiates a new ReturnsFulfillmentCenterViewModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnsFulfillmentCenterViewModel(id int32, ) *ReturnsFulfillmentCenterViewModel {
	this := ReturnsFulfillmentCenterViewModel{}
	this.Id = id
	return &this
}

// NewReturnsFulfillmentCenterViewModelWithDefaults instantiates a new ReturnsFulfillmentCenterViewModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnsFulfillmentCenterViewModelWithDefaults() *ReturnsFulfillmentCenterViewModel {
	this := ReturnsFulfillmentCenterViewModel{}
	return &this
}

// GetId returns the Id field value
func (o *ReturnsFulfillmentCenterViewModel) GetId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ReturnsFulfillmentCenterViewModel) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ReturnsFulfillmentCenterViewModel) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnsFulfillmentCenterViewModel) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnsFulfillmentCenterViewModel) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ReturnsFulfillmentCenterViewModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ReturnsFulfillmentCenterViewModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ReturnsFulfillmentCenterViewModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ReturnsFulfillmentCenterViewModel) UnsetName() {
	o.Name.Unset()
}

func (o ReturnsFulfillmentCenterViewModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableReturnsFulfillmentCenterViewModel struct {
	value *ReturnsFulfillmentCenterViewModel
	isSet bool
}

func (v NullableReturnsFulfillmentCenterViewModel) Get() *ReturnsFulfillmentCenterViewModel {
	return v.value
}

func (v *NullableReturnsFulfillmentCenterViewModel) Set(val *ReturnsFulfillmentCenterViewModel) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnsFulfillmentCenterViewModel) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnsFulfillmentCenterViewModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnsFulfillmentCenterViewModel(val *ReturnsFulfillmentCenterViewModel) *NullableReturnsFulfillmentCenterViewModel {
	return &NullableReturnsFulfillmentCenterViewModel{value: val, isSet: true}
}

func (v NullableReturnsFulfillmentCenterViewModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnsFulfillmentCenterViewModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


