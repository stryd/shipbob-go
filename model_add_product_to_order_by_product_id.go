/*
ShipBob Developer API

ShipBob Developer API Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// checks if the AddProductToOrderByProductId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddProductToOrderByProductId{}

// AddProductToOrderByProductId struct for AddProductToOrderByProductId
type AddProductToOrderByProductId struct {
	// Numeric assignment per item. Used as a reference number for multiple purposes such as split orders, split containers, etc.
	ExternalLineId NullableInt32 `json:"external_line_id,omitempty"`
	// Unique id of the product
	Id int32 `json:"id"`
	// The quantity of this product ordered
	Quantity int32 `json:"quantity"`
	// Defined standard for measure for an item (each, inner pack, case, pallet).  Values: EA, INP, CS and PL
	QuantityUnitOfMeasureCode *string `json:"quantity_unit_of_measure_code,omitempty"`
}

// NewAddProductToOrderByProductId instantiates a new AddProductToOrderByProductId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddProductToOrderByProductId(id int32, quantity int32) *AddProductToOrderByProductId {
	this := AddProductToOrderByProductId{}
	this.Id = id
	this.Quantity = quantity
	return &this
}

// NewAddProductToOrderByProductIdWithDefaults instantiates a new AddProductToOrderByProductId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddProductToOrderByProductIdWithDefaults() *AddProductToOrderByProductId {
	this := AddProductToOrderByProductId{}
	return &this
}

// GetExternalLineId returns the ExternalLineId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddProductToOrderByProductId) GetExternalLineId() int32 {
	if o == nil || IsNil(o.ExternalLineId.Get()) {
		var ret int32
		return ret
	}
	return *o.ExternalLineId.Get()
}

// GetExternalLineIdOk returns a tuple with the ExternalLineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddProductToOrderByProductId) GetExternalLineIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalLineId.Get(), o.ExternalLineId.IsSet()
}

// HasExternalLineId returns a boolean if a field has been set.
func (o *AddProductToOrderByProductId) HasExternalLineId() bool {
	if o != nil && o.ExternalLineId.IsSet() {
		return true
	}

	return false
}

// SetExternalLineId gets a reference to the given NullableInt32 and assigns it to the ExternalLineId field.
func (o *AddProductToOrderByProductId) SetExternalLineId(v int32) {
	o.ExternalLineId.Set(&v)
}

// SetExternalLineIdNil sets the value for ExternalLineId to be an explicit nil
func (o *AddProductToOrderByProductId) SetExternalLineIdNil() {
	o.ExternalLineId.Set(nil)
}

// UnsetExternalLineId ensures that no value is present for ExternalLineId, not even an explicit nil
func (o *AddProductToOrderByProductId) UnsetExternalLineId() {
	o.ExternalLineId.Unset()
}

// GetId returns the Id field value
func (o *AddProductToOrderByProductId) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AddProductToOrderByProductId) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AddProductToOrderByProductId) SetId(v int32) {
	o.Id = v
}

// GetQuantity returns the Quantity field value
func (o *AddProductToOrderByProductId) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *AddProductToOrderByProductId) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *AddProductToOrderByProductId) SetQuantity(v int32) {
	o.Quantity = v
}

// GetQuantityUnitOfMeasureCode returns the QuantityUnitOfMeasureCode field value if set, zero value otherwise.
func (o *AddProductToOrderByProductId) GetQuantityUnitOfMeasureCode() string {
	if o == nil || IsNil(o.QuantityUnitOfMeasureCode) {
		var ret string
		return ret
	}
	return *o.QuantityUnitOfMeasureCode
}

// GetQuantityUnitOfMeasureCodeOk returns a tuple with the QuantityUnitOfMeasureCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProductToOrderByProductId) GetQuantityUnitOfMeasureCodeOk() (*string, bool) {
	if o == nil || IsNil(o.QuantityUnitOfMeasureCode) {
		return nil, false
	}
	return o.QuantityUnitOfMeasureCode, true
}

// HasQuantityUnitOfMeasureCode returns a boolean if a field has been set.
func (o *AddProductToOrderByProductId) HasQuantityUnitOfMeasureCode() bool {
	if o != nil && !IsNil(o.QuantityUnitOfMeasureCode) {
		return true
	}

	return false
}

// SetQuantityUnitOfMeasureCode gets a reference to the given string and assigns it to the QuantityUnitOfMeasureCode field.
func (o *AddProductToOrderByProductId) SetQuantityUnitOfMeasureCode(v string) {
	o.QuantityUnitOfMeasureCode = &v
}

func (o AddProductToOrderByProductId) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddProductToOrderByProductId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExternalLineId.IsSet() {
		toSerialize["external_line_id"] = o.ExternalLineId.Get()
	}
	toSerialize["id"] = o.Id
	toSerialize["quantity"] = o.Quantity
	if !IsNil(o.QuantityUnitOfMeasureCode) {
		toSerialize["quantity_unit_of_measure_code"] = o.QuantityUnitOfMeasureCode
	}
	return toSerialize, nil
}

type NullableAddProductToOrderByProductId struct {
	value *AddProductToOrderByProductId
	isSet bool
}

func (v NullableAddProductToOrderByProductId) Get() *AddProductToOrderByProductId {
	return v.value
}

func (v *NullableAddProductToOrderByProductId) Set(val *AddProductToOrderByProductId) {
	v.value = val
	v.isSet = true
}

func (v NullableAddProductToOrderByProductId) IsSet() bool {
	return v.isSet
}

func (v *NullableAddProductToOrderByProductId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddProductToOrderByProductId(val *AddProductToOrderByProductId) *NullableAddProductToOrderByProductId {
	return &NullableAddProductToOrderByProductId{value: val, isSet: true}
}

func (v NullableAddProductToOrderByProductId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddProductToOrderByProductId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
