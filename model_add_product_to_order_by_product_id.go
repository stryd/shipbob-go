/*
ShipBob Developer API

ShipBob Developer API Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// checks if the AddProductToOrderByProductId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddProductToOrderByProductId{}

// AddProductToOrderByProductId struct for AddProductToOrderByProductId
type AddProductToOrderByProductId struct {
	// Unique id of the product
	Id int32 `json:"id"`
	// The quantity of this product ordered
	Quantity int32 `json:"quantity"`
}

// NewAddProductToOrderByProductId instantiates a new AddProductToOrderByProductId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddProductToOrderByProductId(id int32, quantity int32) *AddProductToOrderByProductId {
	this := AddProductToOrderByProductId{}
	this.Id = id
	this.Quantity = quantity
	return &this
}

// NewAddProductToOrderByProductIdWithDefaults instantiates a new AddProductToOrderByProductId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddProductToOrderByProductIdWithDefaults() *AddProductToOrderByProductId {
	this := AddProductToOrderByProductId{}
	return &this
}

// GetId returns the Id field value
func (o *AddProductToOrderByProductId) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AddProductToOrderByProductId) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AddProductToOrderByProductId) SetId(v int32) {
	o.Id = v
}

// GetQuantity returns the Quantity field value
func (o *AddProductToOrderByProductId) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *AddProductToOrderByProductId) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *AddProductToOrderByProductId) SetQuantity(v int32) {
	o.Quantity = v
}

func (o AddProductToOrderByProductId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddProductToOrderByProductId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["quantity"] = o.Quantity
	return toSerialize, nil
}

type NullableAddProductToOrderByProductId struct {
	value *AddProductToOrderByProductId
	isSet bool
}

func (v NullableAddProductToOrderByProductId) Get() *AddProductToOrderByProductId {
	return v.value
}

func (v *NullableAddProductToOrderByProductId) Set(val *AddProductToOrderByProductId) {
	v.value = val
	v.isSet = true
}

func (v NullableAddProductToOrderByProductId) IsSet() bool {
	return v.isSet
}

func (v *NullableAddProductToOrderByProductId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddProductToOrderByProductId(val *AddProductToOrderByProductId) *NullableAddProductToOrderByProductId {
	return &NullableAddProductToOrderByProductId{value: val, isSet: true}
}

func (v NullableAddProductToOrderByProductId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddProductToOrderByProductId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


