/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// ShipBobOrdersPresentationModelsAddProductToOrderModel - struct for ShipBobOrdersPresentationModelsAddProductToOrderModel
type ShipBobOrdersPresentationModelsAddProductToOrderModel struct {
	ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel *ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel
	ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel *ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel
}

// ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModelAsShipBobOrdersPresentationModelsAddProductToOrderModel is a convenience function that returns ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel wrapped in ShipBobOrdersPresentationModelsAddProductToOrderModel
func ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModelAsShipBobOrdersPresentationModelsAddProductToOrderModel(v *ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel) ShipBobOrdersPresentationModelsAddProductToOrderModel {
	return ShipBobOrdersPresentationModelsAddProductToOrderModel{ ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel: v}
}

// ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModelAsShipBobOrdersPresentationModelsAddProductToOrderModel is a convenience function that returns ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel wrapped in ShipBobOrdersPresentationModelsAddProductToOrderModel
func ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModelAsShipBobOrdersPresentationModelsAddProductToOrderModel(v *ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel) ShipBobOrdersPresentationModelsAddProductToOrderModel {
	return ShipBobOrdersPresentationModelsAddProductToOrderModel{ ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel: v}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ShipBobOrdersPresentationModelsAddProductToOrderModel) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel
	err = json.Unmarshal(data, &dst.ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel)
	if err == nil {
		jsonShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel, _ := json.Marshal(dst.ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel)
		if string(jsonShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel) == "{}" { // empty struct
			dst.ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel = nil
		} else {
			match++
		}
	} else {
		dst.ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel = nil
	}

	// try to unmarshal data into ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel
	err = json.Unmarshal(data, &dst.ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel)
	if err == nil {
		jsonShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel, _ := json.Marshal(dst.ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel)
		if string(jsonShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel) == "{}" { // empty struct
			dst.ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel = nil
		} else {
			match++
		}
	} else {
		dst.ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel = nil
		dst.ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(ShipBobOrdersPresentationModelsAddProductToOrderModel)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(ShipBobOrdersPresentationModelsAddProductToOrderModel)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ShipBobOrdersPresentationModelsAddProductToOrderModel) MarshalJSON() ([]byte, error) {
	if src.ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel != nil {
		return json.Marshal(&src.ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel)
	}

	if src.ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel != nil {
		return json.Marshal(&src.ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ShipBobOrdersPresentationModelsAddProductToOrderModel) GetActualInstance() (interface{}) {
	if obj.ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel != nil {
		return obj.ShipBobOrdersPresentationModelsAddProductToOrderByProductIdModel
	}

	if obj.ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel != nil {
		return obj.ShipBobOrdersPresentationModelsAddProductToOrderByReferenceIdModel
	}

	// all schemas are nil
	return nil
}

type NullableShipBobOrdersPresentationModelsAddProductToOrderModel struct {
	value *ShipBobOrdersPresentationModelsAddProductToOrderModel
	isSet bool
}

func (v NullableShipBobOrdersPresentationModelsAddProductToOrderModel) Get() *ShipBobOrdersPresentationModelsAddProductToOrderModel {
	return v.value
}

func (v *NullableShipBobOrdersPresentationModelsAddProductToOrderModel) Set(val *ShipBobOrdersPresentationModelsAddProductToOrderModel) {
	v.value = val
	v.isSet = true
}

func (v NullableShipBobOrdersPresentationModelsAddProductToOrderModel) IsSet() bool {
	return v.isSet
}

func (v *NullableShipBobOrdersPresentationModelsAddProductToOrderModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipBobOrdersPresentationModelsAddProductToOrderModel(val *ShipBobOrdersPresentationModelsAddProductToOrderModel) *NullableShipBobOrdersPresentationModelsAddProductToOrderModel {
	return &NullableShipBobOrdersPresentationModelsAddProductToOrderModel{value: val, isSet: true}
}

func (v NullableShipBobOrdersPresentationModelsAddProductToOrderModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipBobOrdersPresentationModelsAddProductToOrderModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


