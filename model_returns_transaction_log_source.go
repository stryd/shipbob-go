/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// ReturnsTransactionLogSource the model 'ReturnsTransactionLogSource'
type ReturnsTransactionLogSource string

// List of Returns.TransactionLogSource
const (
	RETURN_LABEL_INVOICE ReturnsTransactionLogSource = "ReturnLabelInvoice"
	RETURN_PROCESSING_FEE ReturnsTransactionLogSource = "ReturnProcessingFee"
	RETURN_TO_SENDER_FEE ReturnsTransactionLogSource = "ReturnToSenderFee"
)

func (v *ReturnsTransactionLogSource) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ReturnsTransactionLogSource(value)
	for _, existing := range []ReturnsTransactionLogSource{ "ReturnLabelInvoice", "ReturnProcessingFee", "ReturnToSenderFee",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ReturnsTransactionLogSource", value)
}

// Ptr returns reference to Returns.TransactionLogSource value
func (v ReturnsTransactionLogSource) Ptr() *ReturnsTransactionLogSource {
	return &v
}

type NullableReturnsTransactionLogSource struct {
	value *ReturnsTransactionLogSource
	isSet bool
}

func (v NullableReturnsTransactionLogSource) Get() *ReturnsTransactionLogSource {
	return v.value
}

func (v *NullableReturnsTransactionLogSource) Set(val *ReturnsTransactionLogSource) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnsTransactionLogSource) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnsTransactionLogSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnsTransactionLogSource(val *ReturnsTransactionLogSource) *NullableReturnsTransactionLogSource {
	return &NullableReturnsTransactionLogSource{value: val, isSet: true}
}

func (v NullableReturnsTransactionLogSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnsTransactionLogSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

