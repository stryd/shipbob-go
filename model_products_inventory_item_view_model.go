/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// ProductsInventoryItemViewModel The inventory that store products can resolve to when packing a shipment
type ProductsInventoryItemViewModel struct {
	// Unique id of the inventory item
	Id *int32 `json:"id,omitempty"`
	// Name of the inventory item
	Name NullableString `json:"name,omitempty"`
	// Quantity of the inventory item included in a store product
	Quantity *int32 `json:"quantity,omitempty"`
}

// NewProductsInventoryItemViewModel instantiates a new ProductsInventoryItemViewModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductsInventoryItemViewModel() *ProductsInventoryItemViewModel {
	this := ProductsInventoryItemViewModel{}
	return &this
}

// NewProductsInventoryItemViewModelWithDefaults instantiates a new ProductsInventoryItemViewModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductsInventoryItemViewModelWithDefaults() *ProductsInventoryItemViewModel {
	this := ProductsInventoryItemViewModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductsInventoryItemViewModel) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsInventoryItemViewModel) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductsInventoryItemViewModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProductsInventoryItemViewModel) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductsInventoryItemViewModel) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductsInventoryItemViewModel) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ProductsInventoryItemViewModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ProductsInventoryItemViewModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ProductsInventoryItemViewModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ProductsInventoryItemViewModel) UnsetName() {
	o.Name.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ProductsInventoryItemViewModel) GetQuantity() int32 {
	if o == nil || o.Quantity == nil {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductsInventoryItemViewModel) GetQuantityOk() (*int32, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ProductsInventoryItemViewModel) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ProductsInventoryItemViewModel) SetQuantity(v int32) {
	o.Quantity = &v
}

func (o ProductsInventoryItemViewModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	return json.Marshal(toSerialize)
}

type NullableProductsInventoryItemViewModel struct {
	value *ProductsInventoryItemViewModel
	isSet bool
}

func (v NullableProductsInventoryItemViewModel) Get() *ProductsInventoryItemViewModel {
	return v.value
}

func (v *NullableProductsInventoryItemViewModel) Set(val *ProductsInventoryItemViewModel) {
	v.value = val
	v.isSet = true
}

func (v NullableProductsInventoryItemViewModel) IsSet() bool {
	return v.isSet
}

func (v *NullableProductsInventoryItemViewModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductsInventoryItemViewModel(val *ProductsInventoryItemViewModel) *NullableProductsInventoryItemViewModel {
	return &NullableProductsInventoryItemViewModel{value: val, isSet: true}
}

func (v NullableProductsInventoryItemViewModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductsInventoryItemViewModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


