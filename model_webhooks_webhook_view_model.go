/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"time"
)

// WebhooksWebhookViewModel struct for WebhooksWebhookViewModel
type WebhooksWebhookViewModel struct {
	// Timestamp the webhook subscription was created
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// ID of the webhook subscription
	Id *int32 `json:"id,omitempty"`
	// URL subscription events will be posted to
	SubscriptionUrl NullableString `json:"subscription_url,omitempty"`
	Topic *WebhooksTopics `json:"topic,omitempty"`
}

// NewWebhooksWebhookViewModel instantiates a new WebhooksWebhookViewModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhooksWebhookViewModel() *WebhooksWebhookViewModel {
	this := WebhooksWebhookViewModel{}
	return &this
}

// NewWebhooksWebhookViewModelWithDefaults instantiates a new WebhooksWebhookViewModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhooksWebhookViewModelWithDefaults() *WebhooksWebhookViewModel {
	this := WebhooksWebhookViewModel{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *WebhooksWebhookViewModel) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksWebhookViewModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *WebhooksWebhookViewModel) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *WebhooksWebhookViewModel) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebhooksWebhookViewModel) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksWebhookViewModel) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebhooksWebhookViewModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *WebhooksWebhookViewModel) SetId(v int32) {
	o.Id = &v
}

// GetSubscriptionUrl returns the SubscriptionUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhooksWebhookViewModel) GetSubscriptionUrl() string {
	if o == nil || o.SubscriptionUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionUrl.Get()
}

// GetSubscriptionUrlOk returns a tuple with the SubscriptionUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhooksWebhookViewModel) GetSubscriptionUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubscriptionUrl.Get(), o.SubscriptionUrl.IsSet()
}

// HasSubscriptionUrl returns a boolean if a field has been set.
func (o *WebhooksWebhookViewModel) HasSubscriptionUrl() bool {
	if o != nil && o.SubscriptionUrl.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionUrl gets a reference to the given NullableString and assigns it to the SubscriptionUrl field.
func (o *WebhooksWebhookViewModel) SetSubscriptionUrl(v string) {
	o.SubscriptionUrl.Set(&v)
}
// SetSubscriptionUrlNil sets the value for SubscriptionUrl to be an explicit nil
func (o *WebhooksWebhookViewModel) SetSubscriptionUrlNil() {
	o.SubscriptionUrl.Set(nil)
}

// UnsetSubscriptionUrl ensures that no value is present for SubscriptionUrl, not even an explicit nil
func (o *WebhooksWebhookViewModel) UnsetSubscriptionUrl() {
	o.SubscriptionUrl.Unset()
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *WebhooksWebhookViewModel) GetTopic() WebhooksTopics {
	if o == nil || o.Topic == nil {
		var ret WebhooksTopics
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksWebhookViewModel) GetTopicOk() (*WebhooksTopics, bool) {
	if o == nil || o.Topic == nil {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *WebhooksWebhookViewModel) HasTopic() bool {
	if o != nil && o.Topic != nil {
		return true
	}

	return false
}

// SetTopic gets a reference to the given WebhooksTopics and assigns it to the Topic field.
func (o *WebhooksWebhookViewModel) SetTopic(v WebhooksTopics) {
	o.Topic = &v
}

func (o WebhooksWebhookViewModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.SubscriptionUrl.IsSet() {
		toSerialize["subscription_url"] = o.SubscriptionUrl.Get()
	}
	if o.Topic != nil {
		toSerialize["topic"] = o.Topic
	}
	return json.Marshal(toSerialize)
}

type NullableWebhooksWebhookViewModel struct {
	value *WebhooksWebhookViewModel
	isSet bool
}

func (v NullableWebhooksWebhookViewModel) Get() *WebhooksWebhookViewModel {
	return v.value
}

func (v *NullableWebhooksWebhookViewModel) Set(val *WebhooksWebhookViewModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhooksWebhookViewModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhooksWebhookViewModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhooksWebhookViewModel(val *WebhooksWebhookViewModel) *NullableWebhooksWebhookViewModel {
	return &NullableWebhooksWebhookViewModel{value: val, isSet: true}
}

func (v NullableWebhooksWebhookViewModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhooksWebhookViewModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


