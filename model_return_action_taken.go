/*
ShipBob Developer API

ShipBob Developer API Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// checks if the ReturnActionTaken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReturnActionTaken{}

// ReturnActionTaken struct for ReturnActionTaken
type ReturnActionTaken struct {
	Action *ReturnAction `json:"action,omitempty"`
	// Reason the given action was taken
	ActionReason NullableString `json:"action_reason,omitempty"`
	// Quantity of inventory processed with the taken action
	QuantityProcessed *int32 `json:"quantity_processed,omitempty"`
}

// NewReturnActionTaken instantiates a new ReturnActionTaken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnActionTaken() *ReturnActionTaken {
	this := ReturnActionTaken{}
	return &this
}

// NewReturnActionTakenWithDefaults instantiates a new ReturnActionTaken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnActionTakenWithDefaults() *ReturnActionTaken {
	this := ReturnActionTaken{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ReturnActionTaken) GetAction() ReturnAction {
	if o == nil || IsNil(o.Action) {
		var ret ReturnAction
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnActionTaken) GetActionOk() (*ReturnAction, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ReturnActionTaken) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given ReturnAction and assigns it to the Action field.
func (o *ReturnActionTaken) SetAction(v ReturnAction) {
	o.Action = &v
}

// GetActionReason returns the ActionReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnActionTaken) GetActionReason() string {
	if o == nil || IsNil(o.ActionReason.Get()) {
		var ret string
		return ret
	}
	return *o.ActionReason.Get()
}

// GetActionReasonOk returns a tuple with the ActionReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnActionTaken) GetActionReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActionReason.Get(), o.ActionReason.IsSet()
}

// HasActionReason returns a boolean if a field has been set.
func (o *ReturnActionTaken) HasActionReason() bool {
	if o != nil && o.ActionReason.IsSet() {
		return true
	}

	return false
}

// SetActionReason gets a reference to the given NullableString and assigns it to the ActionReason field.
func (o *ReturnActionTaken) SetActionReason(v string) {
	o.ActionReason.Set(&v)
}
// SetActionReasonNil sets the value for ActionReason to be an explicit nil
func (o *ReturnActionTaken) SetActionReasonNil() {
	o.ActionReason.Set(nil)
}

// UnsetActionReason ensures that no value is present for ActionReason, not even an explicit nil
func (o *ReturnActionTaken) UnsetActionReason() {
	o.ActionReason.Unset()
}

// GetQuantityProcessed returns the QuantityProcessed field value if set, zero value otherwise.
func (o *ReturnActionTaken) GetQuantityProcessed() int32 {
	if o == nil || IsNil(o.QuantityProcessed) {
		var ret int32
		return ret
	}
	return *o.QuantityProcessed
}

// GetQuantityProcessedOk returns a tuple with the QuantityProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnActionTaken) GetQuantityProcessedOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityProcessed) {
		return nil, false
	}
	return o.QuantityProcessed, true
}

// HasQuantityProcessed returns a boolean if a field has been set.
func (o *ReturnActionTaken) HasQuantityProcessed() bool {
	if o != nil && !IsNil(o.QuantityProcessed) {
		return true
	}

	return false
}

// SetQuantityProcessed gets a reference to the given int32 and assigns it to the QuantityProcessed field.
func (o *ReturnActionTaken) SetQuantityProcessed(v int32) {
	o.QuantityProcessed = &v
}

func (o ReturnActionTaken) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReturnActionTaken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if o.ActionReason.IsSet() {
		toSerialize["action_reason"] = o.ActionReason.Get()
	}
	if !IsNil(o.QuantityProcessed) {
		toSerialize["quantity_processed"] = o.QuantityProcessed
	}
	return toSerialize, nil
}

type NullableReturnActionTaken struct {
	value *ReturnActionTaken
	isSet bool
}

func (v NullableReturnActionTaken) Get() *ReturnActionTaken {
	return v.value
}

func (v *NullableReturnActionTaken) Set(val *ReturnActionTaken) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnActionTaken) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnActionTaken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnActionTaken(val *ReturnActionTaken) *NullableReturnActionTaken {
	return &NullableReturnActionTaken{value: val, isSet: true}
}

func (v NullableReturnActionTaken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnActionTaken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


