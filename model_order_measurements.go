/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// OrderMeasurements Measurements of a shipment
type OrderMeasurements struct {
	// Total depth in inches
	DepthIn *int32 `json:"depth_in,omitempty"`
	// Total length in inches
	LengthIn *int32 `json:"length_in,omitempty"`
	// Total weight in ounces
	TotalWeightOz *int32 `json:"total_weight_oz,omitempty"`
	// Total width in inches
	WidthIn *int32 `json:"width_in,omitempty"`
}

// NewOrderMeasurements instantiates a new OrderMeasurements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderMeasurements() *OrderMeasurements {
	this := OrderMeasurements{}
	return &this
}

// NewOrderMeasurementsWithDefaults instantiates a new OrderMeasurements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderMeasurementsWithDefaults() *OrderMeasurements {
	this := OrderMeasurements{}
	return &this
}

// GetDepthIn returns the DepthIn field value if set, zero value otherwise.
func (o *OrderMeasurements) GetDepthIn() int32 {
	if o == nil || o.DepthIn == nil {
		var ret int32
		return ret
	}
	return *o.DepthIn
}

// GetDepthInOk returns a tuple with the DepthIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderMeasurements) GetDepthInOk() (*int32, bool) {
	if o == nil || o.DepthIn == nil {
		return nil, false
	}
	return o.DepthIn, true
}

// HasDepthIn returns a boolean if a field has been set.
func (o *OrderMeasurements) HasDepthIn() bool {
	if o != nil && o.DepthIn != nil {
		return true
	}

	return false
}

// SetDepthIn gets a reference to the given int32 and assigns it to the DepthIn field.
func (o *OrderMeasurements) SetDepthIn(v int32) {
	o.DepthIn = &v
}

// GetLengthIn returns the LengthIn field value if set, zero value otherwise.
func (o *OrderMeasurements) GetLengthIn() int32 {
	if o == nil || o.LengthIn == nil {
		var ret int32
		return ret
	}
	return *o.LengthIn
}

// GetLengthInOk returns a tuple with the LengthIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderMeasurements) GetLengthInOk() (*int32, bool) {
	if o == nil || o.LengthIn == nil {
		return nil, false
	}
	return o.LengthIn, true
}

// HasLengthIn returns a boolean if a field has been set.
func (o *OrderMeasurements) HasLengthIn() bool {
	if o != nil && o.LengthIn != nil {
		return true
	}

	return false
}

// SetLengthIn gets a reference to the given int32 and assigns it to the LengthIn field.
func (o *OrderMeasurements) SetLengthIn(v int32) {
	o.LengthIn = &v
}

// GetTotalWeightOz returns the TotalWeightOz field value if set, zero value otherwise.
func (o *OrderMeasurements) GetTotalWeightOz() int32 {
	if o == nil || o.TotalWeightOz == nil {
		var ret int32
		return ret
	}
	return *o.TotalWeightOz
}

// GetTotalWeightOzOk returns a tuple with the TotalWeightOz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderMeasurements) GetTotalWeightOzOk() (*int32, bool) {
	if o == nil || o.TotalWeightOz == nil {
		return nil, false
	}
	return o.TotalWeightOz, true
}

// HasTotalWeightOz returns a boolean if a field has been set.
func (o *OrderMeasurements) HasTotalWeightOz() bool {
	if o != nil && o.TotalWeightOz != nil {
		return true
	}

	return false
}

// SetTotalWeightOz gets a reference to the given int32 and assigns it to the TotalWeightOz field.
func (o *OrderMeasurements) SetTotalWeightOz(v int32) {
	o.TotalWeightOz = &v
}

// GetWidthIn returns the WidthIn field value if set, zero value otherwise.
func (o *OrderMeasurements) GetWidthIn() int32 {
	if o == nil || o.WidthIn == nil {
		var ret int32
		return ret
	}
	return *o.WidthIn
}

// GetWidthInOk returns a tuple with the WidthIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderMeasurements) GetWidthInOk() (*int32, bool) {
	if o == nil || o.WidthIn == nil {
		return nil, false
	}
	return o.WidthIn, true
}

// HasWidthIn returns a boolean if a field has been set.
func (o *OrderMeasurements) HasWidthIn() bool {
	if o != nil && o.WidthIn != nil {
		return true
	}

	return false
}

// SetWidthIn gets a reference to the given int32 and assigns it to the WidthIn field.
func (o *OrderMeasurements) SetWidthIn(v int32) {
	o.WidthIn = &v
}

func (o OrderMeasurements) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DepthIn != nil {
		toSerialize["depth_in"] = o.DepthIn
	}
	if o.LengthIn != nil {
		toSerialize["length_in"] = o.LengthIn
	}
	if o.TotalWeightOz != nil {
		toSerialize["total_weight_oz"] = o.TotalWeightOz
	}
	if o.WidthIn != nil {
		toSerialize["width_in"] = o.WidthIn
	}
	return json.Marshal(toSerialize)
}

type NullableOrderMeasurements struct {
	value *OrderMeasurements
	isSet bool
}

func (v NullableOrderMeasurements) Get() *OrderMeasurements {
	return v.value
}

func (v *NullableOrderMeasurements) Set(val *OrderMeasurements) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderMeasurements) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderMeasurements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderMeasurements(val *OrderMeasurements) *NullableOrderMeasurements {
	return &NullableOrderMeasurements{value: val, isSet: true}
}

func (v NullableOrderMeasurements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderMeasurements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
