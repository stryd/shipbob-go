/*
ShipBob Developer API

ShipBob Developer API Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// checks if the CancelShipments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelShipments{}

// CancelShipments Model for cancel multiple shipments at once
type CancelShipments struct {
	// Shipment IDs to cancel
	ShipmentIds []int32 `json:"shipment_ids,omitempty"`
}

// NewCancelShipments instantiates a new CancelShipments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelShipments() *CancelShipments {
	this := CancelShipments{}
	return &this
}

// NewCancelShipmentsWithDefaults instantiates a new CancelShipments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelShipmentsWithDefaults() *CancelShipments {
	this := CancelShipments{}
	return &this
}

// GetShipmentIds returns the ShipmentIds field value if set, zero value otherwise.
func (o *CancelShipments) GetShipmentIds() []int32 {
	if o == nil || IsNil(o.ShipmentIds) {
		var ret []int32
		return ret
	}
	return o.ShipmentIds
}

// GetShipmentIdsOk returns a tuple with the ShipmentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelShipments) GetShipmentIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ShipmentIds) {
		return nil, false
	}
	return o.ShipmentIds, true
}

// HasShipmentIds returns a boolean if a field has been set.
func (o *CancelShipments) HasShipmentIds() bool {
	if o != nil && !IsNil(o.ShipmentIds) {
		return true
	}

	return false
}

// SetShipmentIds gets a reference to the given []int32 and assigns it to the ShipmentIds field.
func (o *CancelShipments) SetShipmentIds(v []int32) {
	o.ShipmentIds = v
}

func (o CancelShipments) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelShipments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShipmentIds) {
		toSerialize["shipment_ids"] = o.ShipmentIds
	}
	return toSerialize, nil
}

type NullableCancelShipments struct {
	value *CancelShipments
	isSet bool
}

func (v NullableCancelShipments) Get() *CancelShipments {
	return v.value
}

func (v *NullableCancelShipments) Set(val *CancelShipments) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelShipments) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelShipments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelShipments(val *CancelShipments) *NullableCancelShipments {
	return &NullableCancelShipments{value: val, isSet: true}
}

func (v NullableCancelShipments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelShipments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


