openapi: 3.0.1
info:
  description: ShipBob Developer API Documentation
  title: ShipBob Developer API
  version: "1.0"
servers:
- url: https://api.shipbob.com/1.0/
tags:
- description: " >  Note: The orderId in the API response will not match the Id displayed\
    \ in the ShipBob Merchant Portal when you navigate to the Orders page. ShipBob\
    \ is currently undergoing a schema migration and the Id displayed in the ShipBob\
    \ Merchant Portal is the shipmentId not the orderId. In the future, the portal\
    \ will display both orderId(s) and shipmentId(s). \\n\\n Use the Orders Resource\
    \ to create and retrieve orders in ShipBob. \\n\\n An order a digital record of\
    \ a complete purchase that comes from an upstream source (i.e. Shopify) and is\
    \ intended for ShipBob to fulfill. The order object includes products purchased,\
    \ shipping address details, shipping method selected etc. Orders are created in\
    \ ShipBob via a channel. \\n\\n When ShipBob fulfills the order, one or more shipments\
    \ are created for that order. A shipment is a record of the physical package(s)\
    \ sent out via a carrier. If an order is shipped in multiple packages then 2 or\
    \ more shipments can be created for that order. \\n\\n ### Tips for creating orders\
    \ in ShipBob via the POST Order endpoint: \\n\\n * Populate the referenceId with\
    \ a unique and immutable order identifier from your upstream system. This field\
    \ was created to allow you to tieback records in ShipBob with your upstream system.\
    \ \\n\\n * Ensure that the <em> shipping method </em> passed in the API request\
    \ matches exactly what the user has listed as the <em> shipping method </em> on\
    \ the <em>  Ship Option Mapping </em> setup page in the ShipBob Merchant Portal.\
    \ If they donâ\x80\x99t match, ShipBob will assume that the user wants to leverage\
    \ ShipBobâ\x80\x99s default shipping method. \\n\\n * You can leverage either\
    \ productId (the ShipBob productId) or the product referenceId (your system's\
    \  unique Identifier for products) when creating an order. \\n\\n Use the Shipments\
    \ endpoints to retrieve fulfillment information for shipments or orders. \\n\\\
    n A shipment is an object that is the result of a fulfillment of an order. An\
    \ order can have one or more shipments. Say Shopify order #122323 contains 3 different\
    \ products, shipped in two separate packages, there would be 2 shipments for that\
    \ order. \\n\\n  Serial numbers are unique identifiers for an individual item\
    \ (e.g. your specific iPhone X that you bought at the Apple Store). No inventory\
    \ item can possess duplicate serial numbers. Merchants can request â\x80\x9cserial\
    \ scanâ\x80\x9d, which means ShipBob will capture the serial number(s) upon sending\
    \ a shipment so the merchant knows which customer received which individual item(s)."
  name: Orders
- description: "Use the Products Resource to retrieve and create product records in\
    \ ShipBob. \\n\\n A product is a virtual record created in ShipBobâ\x80\x99s system\
    \ via a channel. Say a merchant has two Shopify stores (each store would have\
    \ its own channel), Kevinâ\x80\x99s Shopify Store #133 and Kevinâ\x80\x99s Shopify\
    \ store #134. If the same SKU was sold on both stores, two products would be created\
    \ for that SKU, one product would be created to represent the SKU sold on Store\
    \ #133 and one to represent it on Store on #134, with productIds 3884009 and 3884008\
    \ respectively. \\n\\n While a product is a virtual record, the inventory item\
    \ is a representation of a physical good. So in the above example, as product\
    \ 3884009 and product 3884008 represent the same SKU sold on different channels,\
    \ the same inventory item will be mapped to both products. Every product will\
    \ have one or more inventory items mapped to it. Bundle products, a set of products\
    \ that are sold to consumers as one combined package, think gift or multi packs,\
    \ may have 2 or more inventory items mapped to them. \\n\\n ### Tips for creating\
    \ products in ShipBob via the POST Product endpoints: \\n\\n * ShipBob needs products\
    \ to be created at the lowest level. So if a product has 3 variants, small, medium\
    \ and large, a separate product needs to be created in ShipBob for all three.\\\
    n\\n * Populate the referenceId with a unique and immutable product identifier\
    \ from your upstream system. This field was created to allow you to tie back records\
    \ in ShipBob with your upstream system. \\n\\n * Use specific and/or unique names\
    \ to describe each product so they can be easily identified by users in the ShipBob\
    \ Merchant Portal. In particular, when creating variants, please give them distinguishable\
    \ names i.e. for a Blue shirt that comes in two sizes, small and medium, strong\
    \ product names would be Blue shirt size:small and Blue shirt size:medium. \\\
    n\\n > **NOTE:** The productId returned in the API response will not match the\
    \ id displayed in the ShipBob Merchant Portal when you navigate to Inventory >\
    \ Products. ShipBob is currently undergoing a schema migration and the Id displayed\
    \ in the ShipBob Merchant Portal is the inventoryId not the productId. In the\
    \ future, the portal will display both productId(s) and inventoryId(s)"
  name: Products
- description: " Use the Inventory Resource to retrieve ShipBob  inventory items and\
    \ quantities. \\n\\n An inventory item is a representation of a physical good,\
    \ that may or may not have physical stock in ShipBobâ\x80\x99s fulfillment centers.\
    \ Every product will have one or more inventory items mapped to it. A bundle product\
    \ (a set of products that are sold as one combined package - e.g.  gift or multi\
    \ packs) is an example of a product that has  2 or more inventory items mapped\
    \ to it. \\n\\n Lot items are physical items that have expiration dates or batch\
    \ numbers that should be fulfilled in a FIFO (first in, first out) manner. Most\
    \ food items are lot items. Quantities by lot # and/or expiration date are also\
    \ listed in the Inventory object."
  name: Inventory
- description: "Use the Channel Resource to list â\x80\x9cchannelsâ\x80\x9d which\
    \ you have access to. You will use this channelId for subsequent API calls made\
    \ to ShipBob endpoints. \\n\\n A channel is a specific installation of an application\
    \ built by a vendor on top of our API â\x80\x93 e.g. Kevinâ\x80\x99s Shopify Store\
    \ #133432.  All write and most read endpoints require a channel to be passed in\
    \ the header to complete the request. The channel is used to Identify where the\
    \ data originally came from.  \\n\\n Applications that are granted multi-channel\
    \ permissions will be able to read data from all channels that belong to a user.\
    \ However, multi-channel applications will only be able to write on behalf of\
    \ their own channel."
  name: Channels
- description: "**While the Returns API is live, ShipBob's end to end Returns process\
    \ will not go live until the beginning of March. As a result, any returns arriving\
    \ at ShipBob's fulfillment centers prior to March 12st, 2020 will NOT be processed**.\
    \ \\n\\n Use the Returns resource to retrieve, create, edit and cancel return\
    \ records in ShipBob. \\n\\n A return is a request for ShipBob to perform an action\
    \ on inventory that is coming back into our fulfillment centers. Typically, the\
    \ return is a result of an order being requested to be refunded or exchanged.\
    \ ShipBob does not handle refunds or exchanges - we simply process the inventory\
    \ according to the merchant specifications. \\n\\n Returns can only be **modified**\
    \ or **cancelled** when they are in the Awaiting Arrival status. Returns that\
    \ are being Processed or have been Completed cannot be modified or cancelled.\
    \ \\n\\n ### Tips for creating return orders: \\n\\n * Populate the referenceId\
    \ with a unique and immutable return identifier from your upstream system. This\
    \ field was created to allow you to tie back records in ShipBob with your upstream\
    \ system. \\n\\n *Include each inventoryId exactly once in the inventory object.\
    \ If an inventoryId is included more than once, the call will return an error\
    \ code \\n\\n * Provide a tracking # when submitting a return, while it is not\
    \ a required field, it is the the most surefire way for ShipBob staff to properly\
    \ and quickly identify the return package when it reaches our fulfillment center.\
    \ \\n\\n * Only include inventory items to the return record that will be returned\
    \ in the same box i.e. if InventoryId 12232 and InventoryId 12039 will be returned\
    \ in two seperate boxes, two return orders should be created. \\n\\n * ShipBob\
    \ does not process returns for digital items or bundle inventory items. Return\
    \ calls that include digital inventory  items (e.g. ebooks) or bundle inventory\
    \ items (i.e. multipacks, combination of multiple inventory items)  will return\
    \ an error code. \\n\\n * If you choose to provide a requested action (it is an\
    \ optional field), only provide one requested action per inventory item. So if\
    \  you have more than 1 quantity of a given item being returned within the same\
    \ box, all quantities of the item have to have the same action associated with\
    \ them. If you donâ\x80\x99t provide a requested action, it will default to the\
    \ action the User set for that inventory item in the ShipBob Merchant portal."
  name: Returns
- description: "Use the Receiving Resource to retrieve, create and cancel Warehouse\
    \ Receiving Orders (WROs). \\n\\n A WRO is a request form that tells ShipBob's\
    \ fulfillment centers what inventory should be received and stocked. Some other\
    \ solutions call this an â\x80\x9cASNâ\x80\x9d or Advanced Ship Notice. WROs may\
    \ include multiple inventory items with specific quantities. More details on creating\
    \ a WRO can be found [here](https://support.shipbob.com/s/article/New-Send-Inventory-to-ShipBob-WRO).\
    \ \\n\\n A WRO can only be **canceled** if it is in the Awaiting status. WROs\
    \ in Awaiting status are considered to still be in transit to ShipBob FCs. WROs\
    \ that have Partially Arrived, have been Processed or are Completed, cannot be\
    \ canceled."
  name: Receiving
- description: Use the Webhooks Resource to create, view or delete subscriptions for
    a user.
  name: Webhooks
- description: Use this API to interact with the physical locations across ShipBob's
    fulfillment network. \n\n An active ShipBob location is operational for fulfillment
    processes, including receiving inventory and processing returns. It's important
    to note that some locations, access is granted to all merchants by default, while
    some locations require special request for merchants to be granted access. \n\n
    For each location, determine if it can be leveraged for the user by viewing the
    access_granted & receiving_enabled fields.
  name: Locations
paths:
  /channel:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channels.ChannelViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - oauth2:
        - HasChannelIdPermissions
      summary: Get user-authorized channel info
      tags:
      - Channels
  /fulfillmentCenter:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Receiving.FulfillmentCenterViewModel'
                type: array
          description: Success
        "401":
          description: Authorization missing or invalid
        "403":
          description: The provided credentials are not authorized to access this
            resource
      security:
      - oauth2:
        - receiving_read
      summary: Get Fulfillment Centers
      tags:
      - Receiving
  /inventory:
    get:
      parameters:
      - description: Page of inventory items to get
        explode: true
        in: query
        name: Page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Amount of inventory items per page to request
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Whether the inventory should be active or not
        explode: true
        in: query
        name: IsActive
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Whether the inventory is digital or not
        explode: true
        in: query
        name: IsDigital
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Comma separated inventory ids to filter by
        explode: true
        in: query
        name: IDs
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Sort will default to ascending order for each field. \r\nTo sort
          in descending order please pass a "-" in front of the field name. \r\nFor
          example, Sort=-onHand,name will sort by onHand descending
        explode: true
        in: query
        name: Sort
        required: false
        schema:
          type: string
        style: form
      - description: Search is available for 2 fields, Inventory ID and Name -\r\n1.
          Expected behavior for search by Inventory ID is exact match\r\n2. Expected
          behavior for search by Inventory Name is partial match, i.e. does not have
          to be start of word, \r\nbut must be consecutive characters. This is not
          case sensitive.
        explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Inventory.InventoryViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - oauth2:
        - inventory_read
      summary: List inventory items
      tags:
      - Inventory
  /inventory/{inventoryId}:
    get:
      parameters:
      - description: The inventory id to get
        explode: false
        in: path
        name: inventoryId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory.InventoryViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - oauth2:
        - inventory_read
      summary: Get an inventory item
      tags:
      - Inventory
  /location:
    get:
      parameters:
      - description: Whether the inactive locations should be included or not
        explode: true
        in: query
        name: IncludeInactive
        required: false
        schema:
          description: Whether the inactive locations should be included or not
          nullable: true
          type: boolean
        style: form
      - description: Return all the receiving enabled locations
        explode: true
        in: query
        name: ReceivingEnabled
        required: false
        schema:
          description: Return all the receiving enabled locations
          nullable: true
          type: boolean
        style: form
      - description: Return all the access granted locations
        explode: true
        in: query
        name: AccessGranted
        required: false
        schema:
          description: Return all the access granted locations
          nullable: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Location.LocationViewModel'
                type: array
          description: Success
        "401":
          description: Authorization missing or invalid
        "403":
          description: The provided credentials are not authorized to access this
            resource
      security:
      - oauth2:
        - locations_read
      summary: Get locations
      tags:
      - Locations
  /order:
    get:
      description: All parameters are AND filters
      parameters:
      - description: Page of orders to get
        explode: true
        in: query
        name: Page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Amount of orders per page to request
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: order ids to filter by
        explode: true
        in: query
        name: IDs
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Reference ids to filter by
        explode: true
        in: query
        name: ReferenceIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Start date to filter orders inserted later than
        explode: true
        in: query
        name: StartDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: End date to filter orders inserted earlier than
        explode: true
        in: query
        name: EndDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Order to sort results in
        explode: true
        in: query
        name: SortOrder
        required: false
        schema:
          enum:
          - Newest
          - Oldest
          type: string
        style: form
      - description: Has any portion of this order been assigned a tracking number
        explode: true
        in: query
        name: HasTracking
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Start date to filter orders updated later than
        explode: true
        in: query
        name: LastUpdateStartDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: End date to filter orders updated later than
        explode: true
        in: query
        name: LastUpdateEndDate
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Orders.OrderViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
      security:
      - oauth2:
        - orders_read
      summary: Get Orders
      tags:
      - Orders
    post:
      parameters:
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Orders.CreateOrderModel'
          application/json:
            schema:
              $ref: '#/components/schemas/Orders.CreateOrderModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Orders.CreateOrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Orders.CreateOrderModel'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders.OrderViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Client Error
      security:
      - oauth2:
        - orders_write
      summary: Create Order
      tags:
      - Orders
  /order/estimate:
    post:
      description: This endpoint will provide, where possible, an estimate of pricing
        and fulfillment center assignment of a potential standard (direct to consumer)
        order. \r\nKeep in mind that there are ways for the merchant to change FC
        assignment or product configuration after order creation that could invalidate
        this estimate. \r\nEstimates cannot be returned for items that are unknown,
        out of stock, or too large for fulfillment using standard box sizes. \r\nAdditional
        services such as high-pick fees, shipping insurance, auto-splitting or auto-adding
        items to orders, and signature required are not included in this estimate.
      parameters:
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Orders.EstimateFulfillmentRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/Orders.EstimateFulfillmentRequestModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Orders.EstimateFulfillmentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Orders.EstimateFulfillmentRequestModel'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders.EstimateViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Client Error
      security:
      - oauth2:
        - orders_read
      summary: Estimate Fulfillment Cost For Order
      tags:
      - Orders
  /order/{orderId}:
    get:
      parameters:
      - explode: false
        in: path
        name: orderId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders.OrderViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
      security:
      - oauth2:
        - orders_read
      summary: Get Order
      tags:
      - Orders
  /order/{orderId}/cancel:
    post:
      parameters:
      - description: The order ID to cancel
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel ID for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders.CanceledOrderViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Client Error
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Server Error
      security:
      - oauth2:
        - orders_write
      summary: Cancel single Order by Order ID
      tags:
      - Orders
  /order/{orderId}/shipment:
    get:
      parameters:
      - description: The order id to get shipments for
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Orders.ShipmentViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
      security:
      - oauth2:
        - fulfillments_read
      summary: Get all Shipments for Order
      tags:
      - Orders
  /order/{orderId}/shipment/{shipmentId}:
    get:
      parameters:
      - description: The order id to get the shipment for
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The shipment id to get
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders.ShipmentViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
      security:
      - oauth2:
        - fulfillments_read
      summary: Get one Shipment by Order Id and Shipment Id
      tags:
      - Orders
  /order/{orderId}/shipment/{shipmentId}/cancel:
    post:
      parameters:
      - description: The shipment id to get
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      - explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders.ShipmentViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Client Error
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Server Error
      security:
      - oauth2:
        - fulfillments_cancel
      summary: Cancel one Shipment by Order Id and Shipment Id
      tags:
      - Orders
  /order/{orderId}/shipment/{shipmentId}/logs:
    get:
      parameters:
      - description: The order id to get the shipment for
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The shipment id to get
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Orders.ShipmentLogViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
      security:
      - oauth2:
        - fulfillments_read
      summary: Get logs for one Shipment by Order Id and Shipment Id
      tags:
      - Orders
  /order/{orderId}/shipment/{shipmentId}/timeline:
    get:
      parameters:
      - description: The order id to get the shipment for
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The shipment id to get
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Orders.ShipmentLogViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
      security:
      - oauth2:
        - fulfillments_read
      summary: Get one Shipment's status timeline by Order Id and Shipment Id
      tags:
      - Orders
  /product:
    get:
      parameters:
      - description: Page of products to get
        explode: true
        in: query
        name: Page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Amount of products per page to request
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Comma separated list of product ids to filter by
        explode: true
        in: query
        name: IDs
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Comma separated list of reference ids to filter by
        explode: true
        in: query
        name: ReferenceIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Search is available for 2 fields of the inventory record related
          to the product: Inventory ID and Name -\r\n1. Expected behavior for search
          by Inventory ID is exact match\r\n2. Expected behavior for search by Inventory
          Name is partial match, i.e. does not have to be start of word, \r\nbut must
          be consecutive characters. This is not case sensitive.'
        explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - description: 'Status filter for products:\r\n- Any: Include both active and
          inactive\r\n- Active: Filter products that are Active\r\n- Inactive: Filter
          products that are Inactive'
        explode: true
        in: query
        name: ActiveStatus
        required: false
        schema:
          $ref: '#/components/schemas/Products.ProductActiveStatus'
        style: form
      - description: 'Bundle filter for products:\r\n- Any: Don''t filter and consider
          products that are bundles or not bundles\r\n- Bundle: Filter by products
          that are bundles\r\n- NotBundle: Filter by products that are not bundles'
        explode: true
        in: query
        name: BundleStatus
        required: false
        schema:
          $ref: '#/components/schemas/Products.ProductBundleStatus'
        style: form
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Products.ProductViewModel'
                type: array
          description: Success
          headers:
            Next-Page:
              description: The href of the next page of results, if there is a next
                page
              explode: false
              schema:
                description: The href of the next page of results, if there is a next
                  page
                type: string
              style: simple
            Page-Number:
              description: Number of the current page
              explode: false
              schema:
                description: Number of the current page
                type: int
              style: simple
            Page-Size:
              description: Number of results per page
              explode: false
              schema:
                description: Number of results per page
                type: int
              style: simple
            Total-Count:
              description: Total number of results
              explode: false
              schema:
                description: Total number of results
                type: int
              style: simple
            Total-Pages:
              description: Total number of pages of results
              explode: false
              schema:
                description: Total number of pages of results
                type: int
              style: simple
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
      security:
      - oauth2:
        - ProductsRead
      summary: Get multiple products
      tags:
      - Products
    post:
      parameters:
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Products.CreateProductModel'
          application/json:
            schema:
              $ref: '#/components/schemas/Products.CreateProductModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Products.CreateProductModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Products.CreateProductModel'
        description: The product to add
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Products.ProductViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Client Error
      security:
      - oauth2:
        - ProductsWrite
      summary: Add a single product to the store
      tags:
      - Products
  /product/batch:
    post:
      parameters:
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Products.CreateProductModel'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Products.CreateProductModel'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Products.CreateProductModel'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Products.CreateProductModel'
              type: array
        description: List of products to add
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Products.ProductViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Client Error
      security:
      - oauth2:
        - ProductsWrite
      summary: Add multiple products to the store
      tags:
      - Products
  /product/{productId}:
    get:
      parameters:
      - description: Unique identifier of the product
        explode: false
        in: path
        name: productId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products.ProductViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
      security:
      - oauth2:
        - ProductsRead
      summary: Get a single product
      tags:
      - Products
    put:
      parameters:
      - description: Unique identifier of the product to modify
        explode: false
        in: path
        name: productId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Products.UpdateProductModel'
          application/json:
            schema:
              $ref: '#/components/schemas/Products.UpdateProductModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Products.UpdateProductModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Products.UpdateProductModel'
        description: Updated fields to the product
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Products.ProductViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Client Error
      security:
      - oauth2:
        - ProductsWrite
      summary: Modify a single product
      tags:
      - Products
  /product/{productId}/inventory:
    get:
      parameters:
      - description: The product id to get inventory for
        explode: false
        in: path
        name: productId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Inventory.InventoryViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - oauth2:
        - inventory_read
      summary: Get a list of inventory items by product id
      tags:
      - Inventory
  /receiving:
    post:
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Receiving.CreateReceivingOrderModel'
          application/json:
            schema:
              $ref: '#/components/schemas/Receiving.CreateReceivingOrderModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Receiving.CreateReceivingOrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Receiving.CreateReceivingOrderModel'
        description: The receiving order to create
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receiving.ReceivingOrderViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: Authorization missing or invalid
        "403":
          description: The provided credentials are not authorized to access this
            resource
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Not Found
      security:
      - oauth2:
        - receiving_write
      summary: Create Warehouse Receiving Order
      tags:
      - Receiving
  /receiving/{id}:
    get:
      parameters:
      - description: Id of the receiving order
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receiving.ReceivingOrderViewModel'
          description: Success
        "401":
          description: Authorization missing or invalid
        "403":
          description: The provided credentials are not authorized to access this
            resource
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Not Found
      security:
      - oauth2:
        - receiving_read
      summary: Get Warehouse Receiving Order
      tags:
      - Receiving
  /receiving/{id}/cancel:
    post:
      parameters:
      - description: Id of the receiving order to cancel
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
        "401":
          description: Authorization missing or invalid
        "403":
          description: The provided credentials are not authorized to access this
            resource
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Client Error
      security:
      - oauth2:
        - receiving_write
      summary: Cancel Warehouse Receiving Order
      tags:
      - Receiving
  /receiving/{id}/labels:
    get:
      parameters:
      - description: Id of the receiving order
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
            application/pdf:
              schema:
                format: byte
                type: string
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
            application/pdf:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Bad Request
        "401":
          description: Authorization missing or invalid
        "403":
          description: The provided credentials are not authorized to access this
            resource
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
            application/pdf:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Not Found
      security:
      - oauth2:
        - receiving_read
      summary: Get Warehouse Receiving Order Box Labels
      tags:
      - Receiving
  /return:
    get:
      parameters:
      - description: Page of return orders to get
        explode: true
        in: query
        name: Page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Amount of return orders per page to request
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Order to sort results by
        explode: true
        in: query
        name: SortOrder
        required: false
        schema:
          $ref: '#/components/schemas/Returns.SortOrder'
        style: form
      - description: Start date to filter orders inserted later than
        explode: true
        in: query
        name: StartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: End date to filter orders inserted earlier than
        explode: true
        in: query
        name: EndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Comma separated list of return orders ids to filter by
        explode: true
        in: query
        name: IDs
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Comma separated list of reference ids to filter by
        explode: true
        in: query
        name: ReferenceIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Comma separated list of statuses to filter by
        explode: true
        in: query
        name: Status
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Returns.ReturnStatus'
          type: array
        style: form
      - description: Comma separated list of destination fulfillment center IDs to
          filter by
        explode: true
        in: query
        name: FulfillmentCenterIds
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Comma separated list of tracking numbers to filter by
        explode: true
        in: query
        name: TrackingNumbers
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Comma separated list of original shipment IDs to filter by
        explode: true
        in: query
        name: OriginalShipmentIds
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: Comma separated list of inventory IDs contained in return to
          filter by
        explode: true
        in: query
        name: InventoryIds
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Returns.ReturnOrderViewModel'
                type: array
          description: Success
          headers:
            Page-Number:
              description: Number of the current page
              explode: false
              schema:
                description: Number of the current page
                type: int
              style: simple
            Page-Size:
              description: Number of results per page
              explode: false
              schema:
                description: Number of results per page
                type: int
              style: simple
            Total-Count:
              description: Total number of results
              explode: false
              schema:
                description: Total number of results
                type: int
              style: simple
            Total-Pages:
              description: Total number of pages of results
              explode: false
              schema:
                description: Total number of pages of results
                type: int
              style: simple
        "401":
          description: Authorization missing or invalid
        "403":
          description: The provided credentials are not authorized to access this
            resource
      security:
      - oauth2:
        - returns_read
      summary: Get Return Orders
      tags:
      - Returns
    post:
      parameters:
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Returns.CreateReturnViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/Returns.CreateReturnViewModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Returns.CreateReturnViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Returns.CreateReturnViewModel'
        description: Model defining the return
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Returns.ReturnOrderViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Bad Request
        "401":
          description: Authorization missing or invalid
        "403":
          description: The provided credentials are not authorized to access this
            resource
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Client Error
      security:
      - oauth2:
        - returns_write
      summary: Create Return Order
      tags:
      - Returns
  /return/{id}:
    get:
      parameters:
      - description: Id of the return order
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Returns.ReturnOrderViewModel'
          description: Success
        "401":
          description: Authorization missing or invalid
        "403":
          description: The provided credentials are not authorized to access this
            resource
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Not Found
      security:
      - oauth2:
        - returns_read
      summary: Get Return Order
      tags:
      - Returns
    put:
      parameters:
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Id of the return order
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Returns.CreateReturnViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/Returns.CreateReturnViewModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Returns.CreateReturnViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Returns.CreateReturnViewModel'
        description: Model defining the return
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Returns.ReturnOrderViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Bad Request
        "401":
          description: Authorization missing or invalid
        "403":
          description: The provided credentials are not authorized to access this
            resource
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Client Error
      security:
      - oauth2:
        - returns_write
      summary: Modify Return Order
      tags:
      - Returns
  /return/{id}/cancel:
    post:
      parameters:
      - description: Id of the return order
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Returns.ReturnOrderViewModel'
          description: Success
        "401":
          description: Authorization missing or invalid
        "403":
          description: The provided credentials are not authorized to access this
            resource
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Client Error
      security:
      - oauth2:
        - returns_write
      summary: Cancel Return Order
      tags:
      - Returns
  /return/{id}/statushistory:
    get:
      parameters:
      - description: Id of the return order
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Returns.ReturnOrderStatusHistoryViewModel'
          description: Success
        "401":
          description: Authorization missing or invalid
        "403":
          description: The provided credentials are not authorized to access this
            resource
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Not Found
      security:
      - oauth2:
        - returns_read
      summary: Get One Return's status history
      tags:
      - Returns
  /shipment/cancelbulk:
    post:
      parameters:
      - description: Channel ID for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: true
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Orders.CancelShipmentsModel'
          application/json:
            schema:
              $ref: '#/components/schemas/Orders.CancelShipmentsModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Orders.CancelShipmentsModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Orders.CancelShipmentsModel'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders.CanceledShipmentsViewModel'
          description: Success
        "401":
          description: No access right at this time
        "403":
          description: No access
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Client Error
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Server Error
      security:
      - oauth2:
        - fulfillments_write
      summary: Cancel multiple Shipments by Shipment Id
      tags:
      - Orders
  /shipment/{shipmentId}:
    get:
      parameters:
      - description: The shipment id to get
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders.ShipmentViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
      security:
      - oauth2:
        - fulfillments_read
      summary: Get one Shipment by Shipment Id
      tags:
      - Orders
  /shipment/{shipmentId}/cancel:
    post:
      parameters:
      - description: The shipment id to get
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders.ShipmentViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Client Error
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Server Error
      security:
      - oauth2:
        - fulfillments_cancel
      summary: Cancel one Shipment by Shipment Id
      tags:
      - Orders
  /shipment/{shipmentId}/logs:
    get:
      parameters:
      - description: The shipment id to get
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Orders.ShipmentLogViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
      security:
      - oauth2:
        - fulfillments_read
      summary: Get logs for one Shipment by Shipment Id
      tags:
      - Orders
  /shipment/{shipmentId}/timeline:
    get:
      parameters:
      - description: The shipment id to get
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Channel Id for Operation
        explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Orders.ShipmentLogViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          description: Not Found
      security:
      - oauth2:
        - fulfillments_read
      summary: Get one Shipment's status timeline by Shipment Id
      tags:
      - Orders
  /shippingmethod:
    get:
      description: Get all merchants shipping methods
      parameters:
      - description: Page of orders to get
        explode: true
        in: query
        name: Page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Amount of records per page to request
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Orders.ShipMethodDetailViewModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Client Error
      security:
      - oauth2:
        - orders_read
      summary: Get shipping methods
      tags:
      - Orders
  /webhook:
    get:
      description: All parameters are AND filters
      parameters:
      - description: Topic of the webhooks requested
        explode: true
        in: query
        name: Topic
        required: false
        schema:
          $ref: '#/components/schemas/Webhooks.Topics'
        style: form
      - description: Page of Webhooks to get
        explode: true
        in: query
        name: Page
        required: false
        schema:
          description: Page of Webhooks to get
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: Amount of Webhooks per page to request
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          description: Amount of Webhooks per page to request
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Webhooks.WebhookViewModel'
                type: array
          description: Success
          headers:
            Next-Page:
              description: The href of the next page of results, if there is a next
                page
              explode: false
              schema:
                description: The href of the next page of results, if there is a next
                  page
                type: string
              style: simple
            Page-Number:
              description: Number of the current page
              explode: false
              schema:
                description: Number of the current page
                type: int
              style: simple
            Page-Size:
              description: Number of results per page
              explode: false
              schema:
                description: Number of results per page
                type: int
              style: simple
            Total-Count:
              description: Total number of results
              explode: false
              schema:
                description: Total number of results
                type: int
              style: simple
            Total-Pages:
              description: Total number of pages of results
              explode: false
              schema:
                description: Total number of pages of results
                type: int
              style: simple
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
      security:
      - oauth2: []
      summary: Get Webhooks
      tags:
      - Webhooks
    post:
      parameters:
      - explode: false
        in: header
        name: shipbob_channel_id
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: simple
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Webhooks.CreateWebhookSubscriptionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/Webhooks.CreateWebhookSubscriptionModel'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Webhooks.CreateWebhookSubscriptionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Webhooks.CreateWebhookSubscriptionModel'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks.WebhookViewModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Bad Request
        "401":
          description: No access right at this time
        "403":
          description: No access
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
          description: Client Error
      security:
      - oauth2: []
      summary: Create a new webhook subscription
      tags:
      - Webhooks
  /webhook/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "204":
          description: Success
        "401":
          description: No access right at this time
        "403":
          description: No access
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
          description: Not Found
      security:
      - oauth2: []
      summary: Delete an existing webhook subscription
      tags:
      - Webhooks
components:
  schemas:
    Location.AddressViewModel:
      additionalProperties: false
      description: The service-specific address of the location. Each object contains
        address type, address1, address2, city, state, country, zip code, phone number,
        and email
      example:
        country: country
        address2: address2
        city: city
        address1: address1
        name: name
        phone_number: phone_number
        state: state
        email: email
        zip_code: zip_code
      properties:
        address1:
          description: First part of the address of the location for this service
          nullable: true
          type: string
        address2:
          description: Second part of the address of the location for this service
          nullable: true
          type: string
        city:
          description: City of the location
          nullable: true
          type: string
        country:
          description: Country of the location
          nullable: true
          type: string
        email:
          description: Email of the location for this service
          nullable: true
          type: string
        name:
          description: Name to use in the address of the location for this service
          nullable: true
          type: string
        phone_number:
          description: Phone Number of the location for this service
          nullable: true
          type: string
        state:
          description: State of the location
          nullable: true
          type: string
        zip_code:
          description: Zip code of the location
          nullable: true
          type: string
      type: object
    Location.LocationViewModel:
      additionalProperties: false
      example:
        is_receiving_enabled: true
        is_shipping_enabled: true
        access_granted: true
        is_active: true
        timezone: timezone
        name: name
        attributes:
        - attributes
        - attributes
        id: 0
        services:
        - address:
            country: country
            address2: address2
            city: city
            address1: address1
            name: name
            phone_number: phone_number
            state: state
            email: email
            zip_code: zip_code
          enabled: true
        - address:
            country: country
            address2: address2
            city: city
            address1: address1
            name: name
            phone_number: phone_number
            state: state
            email: email
            zip_code: zip_code
          enabled: true
        abbreviation: abbreviation
        region:
          name: name
          id: 6
      properties:
        abbreviation:
          description: Abbreviation of the location. Combination of nearest Airport
            Code and the sequence number.
          nullable: true
          type: string
        access_granted:
          description: Indicates whether or not the user is authorized to interact
            at all with the location
          type: boolean
        attributes:
          description: Available attributes for the location
          items:
            type: string
          nullable: true
          type: array
        id:
          description: "Id of the location in ShipBobâ\x80\x99s database"
          format: int32
          type: integer
        is_active:
          description: Indicates if the location is operationally active or inactive
          type: boolean
        is_receiving_enabled:
          description: Indicates if the receiving is enabled for FC
          type: boolean
        is_shipping_enabled:
          description: Indicates if the shipping is enabled for FC
          type: boolean
        name:
          description: Name of the location. Follows the naming convention City (State
            Code)\r\nfor domestic FCs and City (Country Code) for international FCs
          nullable: true
          type: string
        region:
          $ref: '#/components/schemas/Location.RegionViewModel'
        services:
          description: Services provided by the location
          items:
            $ref: '#/components/schemas/Location.ServiceViewModel'
          nullable: true
          type: array
        timezone:
          description: Time zone of the location
          nullable: true
          type: string
      type: object
    Location.RegionViewModel:
      additionalProperties: false
      example:
        name: name
        id: 6
      properties:
        id:
          description: Unique Id for the location region
          format: int32
          type: integer
        name:
          description: Name of the region the location is in.
          nullable: true
          type: string
      type: object
    Location.ServiceViewModel:
      additionalProperties: false
      example:
        address:
          country: country
          address2: address2
          city: city
          address1: address1
          name: name
          phone_number: phone_number
          state: state
          email: email
          zip_code: zip_code
        enabled: true
      properties:
        address:
          $ref: '#/components/schemas/Location.AddressViewModel'
        enabled:
          description: Indicates if the user is authorized to access this service
            at the location
          type: boolean
        service_type:
          $ref: '#/components/schemas/Location.ServiceTypeEnum'
      type: object
    Location.ServiceTypeEnum:
      enum:
      - Receiving
      - Returns
      type: string
    ProblemDetails:
      additionalProperties: false
      discriminator:
        propertyName: $type
      properties:
        ttype:
          type: string
        detail:
          nullable: true
          type: string
        extensions:
          additionalProperties:
            additionalProperties: false
            type: object
          nullable: true
          readOnly: true
          type: object
        instance:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        title:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      required:
      - $type
      type: object
    ValidationProblemDetails:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/ProblemDetails'
      - $ref: '#/components/schemas/ValidationProblemDetails_allOf'
      properties:
        detail:
          nullable: true
          type: string
        errors:
          additionalProperties:
            items:
              type: string
            type: array
          nullable: true
          readOnly: true
          type: object
        extensions:
          additionalProperties:
            additionalProperties: false
            type: object
          nullable: true
          readOnly: true
          type: object
        instance:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        title:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    Channels.ChannelViewModel:
      additionalProperties: false
      example:
        application_name: Api
        name: name
        id: 0
        scopes:
        - scopes
        - scopes
      properties:
        application_name:
          description: Name of the application that owns the channel
          example: Api
          nullable: true
          type: string
        id:
          description: Unique id of the channel
          format: int32
          type: integer
        name:
          description: Name of the channel
          nullable: true
          type: string
        scopes:
          description: Array of permissions granted for the channel
          items:
            type: string
          nullable: true
          type: array
      type: object
    Orders.AddProductToOrderByProductIdModel:
      additionalProperties: false
      properties:
        id:
          description: Unique id of the product
          format: int32
          type: integer
        quantity:
          description: The quantity of this product ordered
          format: int32
          type: integer
      required:
      - id
      - quantity
      type: object
    Orders.AddProductToOrderByReferenceIdModel:
      additionalProperties: false
      properties:
        name:
          description: Name of the product
          example: TShirtBlueM
          type: string
        quantity:
          description: The quantity of this product ordered
          format: int32
          type: integer
        reference_id:
          description: Unique reference id of the product
          example: TShirtBlueM
          type: string
      required:
      - quantity
      - reference_id
      type: object
    Orders.AddProductToOrderModel:
      oneOf:
      - $ref: '#/components/schemas/Orders.AddProductToOrderByProductIdModel'
      - $ref: '#/components/schemas/Orders.AddProductToOrderByReferenceIdModel'
    Orders.CancelShipmentsModel:
      additionalProperties: false
      description: Model for cancel multiple shipments at once
      properties:
        shipment_ids:
          description: Shipment IDs to cancel
          items:
            format: int32
            type: integer
          type: array
      type: object
    Orders.CreateOrderModel:
      additionalProperties: false
      properties:
        order_number:
          description: User friendly orderId or store order number that will be shown
            on the Orders Page. If not provided, referenceId will be used
          maxLength: 400
          type: string
        products:
          items:
            $ref: '#/components/schemas/Orders.AddProductToOrderModel'
          minLength: 1
          type: array
        purchase_date:
          description: Date this order was purchase by the end user
          format: date-time
          nullable: true
          type: string
        recipient:
          $ref: '#/components/schemas/Orders.RecipientInfoViewModel'
        reference_id:
          maxLength: 300
          type: string
        shipping_method:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Orders.TagViewModel'
          type: array
        type:
          description: 'Defaults to Direct to Consumer (DTC) if not provided. Note:
            B2B is not supported at this time'
          enum:
          - DTC
          - DropShip
          - B2B
          type: string
      required:
      - products
      - recipient
      - reference_id
      - shipping_method
      type: object
    Orders.EstimateFulfillmentRequestModel:
      additionalProperties: false
      properties:
        address:
          $ref: '#/components/schemas/Orders.EstimationAddressViewModel'
        products:
          description: Products to be included in the order. Each product must include
            one of reference_id or id
          items:
            $ref: '#/components/schemas/Orders.EstimateProductInfoModel'
          type: array
        shipping_methods:
          description: Array of strings specifying shipping methods for which to fetch
            estimates.\r\n\r\nIf this field is omitted we will return estimates for
            all shipping methods defined in ShipBob
          items:
            type: string
          type: array
      required:
      - address
      - products
      type: object
    Orders.EstimateProductInfoModel:
      additionalProperties: false
      properties:
        id:
          description: Unique id of the product (Must be provided if reference_id
            is unknown)
          format: int32
          nullable: true
          type: integer
        quantity:
          description: The quantity of this product ordered
          format: int32
          maximum: 199
          minimum: 1
          type: integer
        reference_id:
          description: Unique reference id of the product (Must be provided if ID
            is unknown)
          example: TShirtBlueM
          type: string
      required:
      - quantity
      type: object
    Orders.AddressViewModel:
      additionalProperties: false
      example:
        country: US
        address2: Suite 100
        city: Gotham City
        address1: 100 Nowhere Blvd
        company_name: Wayne Enterprises
        state: NJ
        zip_code: "07093"
      properties:
        address1:
          description: First line of the address
          example: 100 Nowhere Blvd
          type: string
        address2:
          description: Second line of the address
          example: Suite 100
          type: string
        city:
          description: The city
          example: Gotham City
          type: string
        company_name:
          description: Name of the company receiving the shipment
          example: Wayne Enterprises
          type: string
        country:
          description: The country (Must be ISO Alpha-2 for estimates)
          example: US
          type: string
        state:
          description: The state or province
          example: NJ
          type: string
        zip_code:
          description: The zip code or postal code
          example: "07093"
          type: string
      required:
      - address1
      - city
      - country
      type: object
    Orders.CanceledOrderViewModel:
      additionalProperties: false
      example:
        canceled_shipment_results:
        - reason: reason
          action: Cancel
          is_success: true
          shipment_id: 0
        - reason: reason
          action: Cancel
          is_success: true
          shipment_id: 0
        order_id: 6
        order:
          reference_id: reference_id
          order_number: order_number
          channel:
            name: ShipBobs-Shopify-Store
            id: 0
          type: DTC
          shipments:
          - reference_id: reference_id
            require_signature: true
            estimated_fulfillment_date_status: AwaitingInventoryAllocation
            estimated_fulfillment_date: 2000-01-23T04:56:07.000+00:00
            invoice_amount: 7.061401241503109
            tracking:
              carrier: USPS
              carrier_service: Priority
              tracking_number: 860C8CDC8F0B4FC7AB69AC86C20539EC
              tracking_url: https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC
            actual_fulfillment_date: 2000-01-23T04:56:07.000+00:00
            products:
            - reference_id: TShirtBlueM
              name: Medium Blue T-Shirt
              id: 1
              sku: TShirtBlueM
              inventory_items:
              - lot: "22222"
                quantity_committed: 7
                quantity: 6
                is_dangerous_goods: true
                name: Medium Blue T-Shirt
                id: 1
                expiration_date: 2000-01-23T04:56:07.000+00:00
                serial_numbers:
                - serial_numbers
                - serial_numbers
              - lot: "22222"
                quantity_committed: 7
                quantity: 6
                is_dangerous_goods: true
                name: Medium Blue T-Shirt
                id: 1
                expiration_date: 2000-01-23T04:56:07.000+00:00
                serial_numbers:
                - serial_numbers
                - serial_numbers
            - reference_id: TShirtBlueM
              name: Medium Blue T-Shirt
              id: 1
              sku: TShirtBlueM
              inventory_items:
              - lot: "22222"
                quantity_committed: 7
                quantity: 6
                is_dangerous_goods: true
                name: Medium Blue T-Shirt
                id: 1
                expiration_date: 2000-01-23T04:56:07.000+00:00
                serial_numbers:
                - serial_numbers
                - serial_numbers
              - lot: "22222"
                quantity_committed: 7
                quantity: 6
                is_dangerous_goods: true
                name: Medium Blue T-Shirt
                id: 1
                expiration_date: 2000-01-23T04:56:07.000+00:00
                serial_numbers:
                - serial_numbers
                - serial_numbers
            package_material_type: Box
            insurance_value: 2.3021358869347655
            last_update_at: 2000-01-23T04:56:07.000+00:00
            recipient:
              address:
                country: US
                address2: Suite 100
                city: Gotham City
                address1: 100 Nowhere Blvd
                company_name: Wayne Enterprises
                state: NJ
                zip_code: "07093"
              name: John Doe
              phone_number: 555-555-5555
              email: john@example.com
            ship_option: Standard
            location:
              name: Cicero (IL)
              id: 9
            created_date: 2000-01-23T04:56:07.000+00:00
            id: 5
            order_id: 1
            status_details:
            - inventory_id: 5
              exception_fulfillment_center_id: 1
              name: name
              description: description
              id: 4
            - inventory_id: 5
              exception_fulfillment_center_id: 1
              name: name
              description: description
              id: 4
            measurements:
              length_in: 2
              depth_in: 3
              width_in: 7
              total_weight_oz: 4
            status: None
          - reference_id: reference_id
            require_signature: true
            estimated_fulfillment_date_status: AwaitingInventoryAllocation
            estimated_fulfillment_date: 2000-01-23T04:56:07.000+00:00
            invoice_amount: 7.061401241503109
            tracking:
              carrier: USPS
              carrier_service: Priority
              tracking_number: 860C8CDC8F0B4FC7AB69AC86C20539EC
              tracking_url: https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC
            actual_fulfillment_date: 2000-01-23T04:56:07.000+00:00
            products:
            - reference_id: TShirtBlueM
              name: Medium Blue T-Shirt
              id: 1
              sku: TShirtBlueM
              inventory_items:
              - lot: "22222"
                quantity_committed: 7
                quantity: 6
                is_dangerous_goods: true
                name: Medium Blue T-Shirt
                id: 1
                expiration_date: 2000-01-23T04:56:07.000+00:00
                serial_numbers:
                - serial_numbers
                - serial_numbers
              - lot: "22222"
                quantity_committed: 7
                quantity: 6
                is_dangerous_goods: true
                name: Medium Blue T-Shirt
                id: 1
                expiration_date: 2000-01-23T04:56:07.000+00:00
                serial_numbers:
                - serial_numbers
                - serial_numbers
            - reference_id: TShirtBlueM
              name: Medium Blue T-Shirt
              id: 1
              sku: TShirtBlueM
              inventory_items:
              - lot: "22222"
                quantity_committed: 7
                quantity: 6
                is_dangerous_goods: true
                name: Medium Blue T-Shirt
                id: 1
                expiration_date: 2000-01-23T04:56:07.000+00:00
                serial_numbers:
                - serial_numbers
                - serial_numbers
              - lot: "22222"
                quantity_committed: 7
                quantity: 6
                is_dangerous_goods: true
                name: Medium Blue T-Shirt
                id: 1
                expiration_date: 2000-01-23T04:56:07.000+00:00
                serial_numbers:
                - serial_numbers
                - serial_numbers
            package_material_type: Box
            insurance_value: 2.3021358869347655
            last_update_at: 2000-01-23T04:56:07.000+00:00
            recipient:
              address:
                country: US
                address2: Suite 100
                city: Gotham City
                address1: 100 Nowhere Blvd
                company_name: Wayne Enterprises
                state: NJ
                zip_code: "07093"
              name: John Doe
              phone_number: 555-555-5555
              email: john@example.com
            ship_option: Standard
            location:
              name: Cicero (IL)
              id: 9
            created_date: 2000-01-23T04:56:07.000+00:00
            id: 5
            order_id: 1
            status_details:
            - inventory_id: 5
              exception_fulfillment_center_id: 1
              name: name
              description: description
              id: 4
            - inventory_id: 5
              exception_fulfillment_center_id: 1
              name: name
              description: description
              id: 4
            measurements:
              length_in: 2
              depth_in: 3
              width_in: 7
              total_weight_oz: 4
            status: None
          products:
          - quantity: 5
            reference_id: TShirtBlueM
            id: 1
            sku: TShirtBlueM
          - quantity: 5
            reference_id: TShirtBlueM
            id: 1
            sku: TShirtBlueM
          tags:
          - name: Handling instructions
            value: Fragile
          - name: Handling instructions
            value: Fragile
          shipping_method: Free 2-day Shipping
          recipient:
            address:
              country: US
              address2: Suite 100
              city: Gotham City
              address1: 100 Nowhere Blvd
              company_name: Wayne Enterprises
              state: NJ
              zip_code: "07093"
            name: John Doe
            phone_number: 555-555-5555
            email: john@example.com
          created_date: 2000-01-23T04:56:07.000+00:00
          id: 6
          purchase_date: 2000-01-23T04:56:07.000+00:00
          status: Processing
        status: Success
      properties:
        canceled_shipment_results:
          description: Results of camceling the shipments associated with the order
          items:
            $ref: '#/components/schemas/Orders.CanceledShipmentViewModel'
          type: array
        order:
          $ref: '#/components/schemas/Orders.OrderViewModel'
        order_id:
          description: The ID of the canceled order
          format: int32
          type: integer
        status:
          description: The overall result of canceling the shipments associated with
            the order
          enum:
          - Success
          - Failure
          - PartialSuccess
          type: string
      type: object
    Orders.CanceledShipmentViewModel:
      additionalProperties: false
      example:
        reason: reason
        action: Cancel
        is_success: true
        shipment_id: 0
      properties:
        action:
          enum:
          - Cancel
          type: string
        is_success:
          description: If the cancel action was successfull
          type: boolean
        reason:
          description: The reason the cancellation result
          type: string
        shipment_id:
          description: The ID of the shipment
          format: int64
          type: integer
      type: object
    Orders.CanceledShipmentsViewModel:
      additionalProperties: false
      example:
        results:
        - reason: reason
          action: Cancel
          is_success: true
          shipment_id: 0
        - reason: reason
          action: Cancel
          is_success: true
          shipment_id: 0
      properties:
        results:
          description: The results of all cancellation actions
          items:
            $ref: '#/components/schemas/Orders.CanceledShipmentViewModel'
          type: array
      type: object
    Orders.ChannelInfoViewModel:
      additionalProperties: false
      description: Created by channel metadata
      example:
        name: ShipBobs-Shopify-Store
        id: 0
      properties:
        id:
          description: Unique id of the channel
          format: int32
          type: integer
        name:
          description: Name of the channel
          example: ShipBobs-Shopify-Store
          type: string
      type: object
    Orders.EstimateDetailViewModel:
      additionalProperties: false
      example:
        estimated_price: 0.8008281904610115
        fulfillment_center:
          name: Cicero (IL)
          id: 9
        shipping_method: shipping_method
      properties:
        estimated_price:
          description: Estimated price in dollars for the provided shipping method
          format: double
          type: number
        fulfillment_center:
          $ref: '#/components/schemas/Orders.FulfillmentCenterViewModel'
        shipping_method:
          description: Provided shipping method. Maps to ship option in ShipBob.
          type: string
      type: object
    Orders.EstimateViewModel:
      additionalProperties: false
      example:
        estimates:
        - estimated_price: 0.8008281904610115
          fulfillment_center:
            name: Cicero (IL)
            id: 9
          shipping_method: shipping_method
        - estimated_price: 0.8008281904610115
          fulfillment_center:
            name: Cicero (IL)
            id: 9
          shipping_method: shipping_method
      properties:
        estimates:
          description: Array of estimates for each shipping method
          items:
            $ref: '#/components/schemas/Orders.EstimateDetailViewModel'
          type: array
      type: object
    Orders.EstimationAddressViewModel:
      additionalProperties: false
      properties:
        address1:
          description: First line of the address
          example: 100 Nowhere Blvd
          type: string
        address2:
          description: Second line of the address
          example: Suite 100
          type: string
        city:
          description: The city
          example: Gotham City
          type: string
        company_name:
          description: Name of the company receiving the shipment
          example: Wayne Enterprises
          type: string
        country:
          description: The country (Must be ISO Alpha-2 for estimates)
          example: US
          type: string
        state:
          description: The state or province
          example: NJ
          type: string
        zip_code:
          description: The zip code or postal code
          example: "07093"
          type: string
      required:
      - country
      type: object
    Orders.FulfillmentCenterViewModel:
      additionalProperties: false
      description: Information about a fulfillment center that a shipment can belong
        to
      example:
        name: Cicero (IL)
        id: 9
      properties:
        id:
          description: Id of the fulfillment center
          format: int32
          type: integer
        name:
          description: Name of the fulfillment center
          example: Cicero (IL)
          type: string
      type: object
    Orders.InventoryViewModel:
      additionalProperties: false
      description: Information about inventory belonging to a store product
      example:
        lot: "22222"
        quantity_committed: 7
        quantity: 6
        is_dangerous_goods: true
        name: Medium Blue T-Shirt
        id: 1
        expiration_date: 2000-01-23T04:56:07.000+00:00
        serial_numbers:
        - serial_numbers
        - serial_numbers
      properties:
        expiration_date:
          description: Expiration date of the inventory
          format: date-time
          nullable: true
          type: string
        id:
          description: Unique id of the inventory
          format: int32
          type: integer
        is_dangerous_goods:
          description: Is inventory Dangerous Good
          example: true
          type: boolean
        lot:
          description: Lot number of the inventory
          example: "22222"
          type: string
        name:
          description: Name of the inventory item
          example: Medium Blue T-Shirt
          type: string
        quantity:
          description: Quantity of the inventory item to be included in the fulfillment
          format: int32
          type: integer
        quantity_committed:
          description: The quantity of the inventory item allocated from the assigned
            fulfillment center and committed to the order. If quantity committed is
            less than order quantity, then the inventory item is out of stock at the
            assigned fulfillment center.
          format: int32
          type: integer
        serial_numbers:
          description: Serial number of the inventory
          items:
            type: string
          type: array
      type: object
    Orders.MeasurementsViewModel:
      additionalProperties: false
      description: Measurements of a shipment
      example:
        length_in: 2
        depth_in: 3
        width_in: 7
        total_weight_oz: 4
      properties:
        depth_in:
          description: Total depth in inches
          format: int32
          type: integer
        length_in:
          description: Total length in inches
          format: int32
          type: integer
        total_weight_oz:
          description: Total weight in ounces
          format: int32
          type: integer
        width_in:
          description: Total width in inches
          format: int32
          type: integer
      type: object
    Orders.OrderViewModel:
      additionalProperties: false
      example:
        reference_id: reference_id
        order_number: order_number
        channel:
          name: ShipBobs-Shopify-Store
          id: 0
        type: DTC
        shipments:
        - reference_id: reference_id
          require_signature: true
          estimated_fulfillment_date_status: AwaitingInventoryAllocation
          estimated_fulfillment_date: 2000-01-23T04:56:07.000+00:00
          invoice_amount: 7.061401241503109
          tracking:
            carrier: USPS
            carrier_service: Priority
            tracking_number: 860C8CDC8F0B4FC7AB69AC86C20539EC
            tracking_url: https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC
          actual_fulfillment_date: 2000-01-23T04:56:07.000+00:00
          products:
          - reference_id: TShirtBlueM
            name: Medium Blue T-Shirt
            id: 1
            sku: TShirtBlueM
            inventory_items:
            - lot: "22222"
              quantity_committed: 7
              quantity: 6
              is_dangerous_goods: true
              name: Medium Blue T-Shirt
              id: 1
              expiration_date: 2000-01-23T04:56:07.000+00:00
              serial_numbers:
              - serial_numbers
              - serial_numbers
            - lot: "22222"
              quantity_committed: 7
              quantity: 6
              is_dangerous_goods: true
              name: Medium Blue T-Shirt
              id: 1
              expiration_date: 2000-01-23T04:56:07.000+00:00
              serial_numbers:
              - serial_numbers
              - serial_numbers
          - reference_id: TShirtBlueM
            name: Medium Blue T-Shirt
            id: 1
            sku: TShirtBlueM
            inventory_items:
            - lot: "22222"
              quantity_committed: 7
              quantity: 6
              is_dangerous_goods: true
              name: Medium Blue T-Shirt
              id: 1
              expiration_date: 2000-01-23T04:56:07.000+00:00
              serial_numbers:
              - serial_numbers
              - serial_numbers
            - lot: "22222"
              quantity_committed: 7
              quantity: 6
              is_dangerous_goods: true
              name: Medium Blue T-Shirt
              id: 1
              expiration_date: 2000-01-23T04:56:07.000+00:00
              serial_numbers:
              - serial_numbers
              - serial_numbers
          package_material_type: Box
          insurance_value: 2.3021358869347655
          last_update_at: 2000-01-23T04:56:07.000+00:00
          recipient:
            address:
              country: US
              address2: Suite 100
              city: Gotham City
              address1: 100 Nowhere Blvd
              company_name: Wayne Enterprises
              state: NJ
              zip_code: "07093"
            name: John Doe
            phone_number: 555-555-5555
            email: john@example.com
          ship_option: Standard
          location:
            name: Cicero (IL)
            id: 9
          created_date: 2000-01-23T04:56:07.000+00:00
          id: 5
          order_id: 1
          status_details:
          - inventory_id: 5
            exception_fulfillment_center_id: 1
            name: name
            description: description
            id: 4
          - inventory_id: 5
            exception_fulfillment_center_id: 1
            name: name
            description: description
            id: 4
          measurements:
            length_in: 2
            depth_in: 3
            width_in: 7
            total_weight_oz: 4
          status: None
        - reference_id: reference_id
          require_signature: true
          estimated_fulfillment_date_status: AwaitingInventoryAllocation
          estimated_fulfillment_date: 2000-01-23T04:56:07.000+00:00
          invoice_amount: 7.061401241503109
          tracking:
            carrier: USPS
            carrier_service: Priority
            tracking_number: 860C8CDC8F0B4FC7AB69AC86C20539EC
            tracking_url: https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC
          actual_fulfillment_date: 2000-01-23T04:56:07.000+00:00
          products:
          - reference_id: TShirtBlueM
            name: Medium Blue T-Shirt
            id: 1
            sku: TShirtBlueM
            inventory_items:
            - lot: "22222"
              quantity_committed: 7
              quantity: 6
              is_dangerous_goods: true
              name: Medium Blue T-Shirt
              id: 1
              expiration_date: 2000-01-23T04:56:07.000+00:00
              serial_numbers:
              - serial_numbers
              - serial_numbers
            - lot: "22222"
              quantity_committed: 7
              quantity: 6
              is_dangerous_goods: true
              name: Medium Blue T-Shirt
              id: 1
              expiration_date: 2000-01-23T04:56:07.000+00:00
              serial_numbers:
              - serial_numbers
              - serial_numbers
          - reference_id: TShirtBlueM
            name: Medium Blue T-Shirt
            id: 1
            sku: TShirtBlueM
            inventory_items:
            - lot: "22222"
              quantity_committed: 7
              quantity: 6
              is_dangerous_goods: true
              name: Medium Blue T-Shirt
              id: 1
              expiration_date: 2000-01-23T04:56:07.000+00:00
              serial_numbers:
              - serial_numbers
              - serial_numbers
            - lot: "22222"
              quantity_committed: 7
              quantity: 6
              is_dangerous_goods: true
              name: Medium Blue T-Shirt
              id: 1
              expiration_date: 2000-01-23T04:56:07.000+00:00
              serial_numbers:
              - serial_numbers
              - serial_numbers
          package_material_type: Box
          insurance_value: 2.3021358869347655
          last_update_at: 2000-01-23T04:56:07.000+00:00
          recipient:
            address:
              country: US
              address2: Suite 100
              city: Gotham City
              address1: 100 Nowhere Blvd
              company_name: Wayne Enterprises
              state: NJ
              zip_code: "07093"
            name: John Doe
            phone_number: 555-555-5555
            email: john@example.com
          ship_option: Standard
          location:
            name: Cicero (IL)
            id: 9
          created_date: 2000-01-23T04:56:07.000+00:00
          id: 5
          order_id: 1
          status_details:
          - inventory_id: 5
            exception_fulfillment_center_id: 1
            name: name
            description: description
            id: 4
          - inventory_id: 5
            exception_fulfillment_center_id: 1
            name: name
            description: description
            id: 4
          measurements:
            length_in: 2
            depth_in: 3
            width_in: 7
            total_weight_oz: 4
          status: None
        products:
        - quantity: 5
          reference_id: TShirtBlueM
          id: 1
          sku: TShirtBlueM
        - quantity: 5
          reference_id: TShirtBlueM
          id: 1
          sku: TShirtBlueM
        tags:
        - name: Handling instructions
          value: Fragile
        - name: Handling instructions
          value: Fragile
        shipping_method: Free 2-day Shipping
        recipient:
          address:
            country: US
            address2: Suite 100
            city: Gotham City
            address1: 100 Nowhere Blvd
            company_name: Wayne Enterprises
            state: NJ
            zip_code: "07093"
          name: John Doe
          phone_number: 555-555-5555
          email: john@example.com
        created_date: 2000-01-23T04:56:07.000+00:00
        id: 6
        purchase_date: 2000-01-23T04:56:07.000+00:00
        status: Processing
      properties:
        channel:
          $ref: '#/components/schemas/Orders.ChannelInfoViewModel'
        created_date:
          description: Date this order was created
          format: date-time
          type: string
        id:
          description: Unique id of the order
          format: int32
          type: integer
        order_number:
          description: User friendly orderId or store order number that will be shown
            on the Orders Page. If not provided, referenceId will be used
          type: string
        products:
          description: List of products included in the order
          items:
            $ref: '#/components/schemas/Orders.ProductInfoViewModel'
          type: array
        purchase_date:
          description: Date this order was purchase by the end user
          format: date-time
          nullable: true
          type: string
        recipient:
          $ref: '#/components/schemas/Orders.RecipientInfoViewModel'
        reference_id:
          description: Client-defined external unique id of the order
          type: string
        shipments:
          description: Shipments affiliated with the order
          items:
            $ref: '#/components/schemas/Orders.ShipmentViewModel'
          type: array
        shipping_method:
          description: Client-defined shipping method
          example: Free 2-day Shipping
          type: string
        status:
          description: The order status
          enum:
          - Processing
          - Exception
          - PartiallyFulfilled
          - Fulfilled
          - Cancelled
          - ImportReview
          type: string
        tags:
          description: Client-defined order tags
          items:
            $ref: '#/components/schemas/Orders.TagViewModel'
          type: array
        type:
          description: Shipment type of the order
          enum:
          - DTC
          - DropShip
          - B2B
          example: DTC
          type: string
      type: object
    Orders.ProductInfoViewModel:
      additionalProperties: false
      example:
        quantity: 5
        reference_id: TShirtBlueM
        id: 1
        sku: TShirtBlueM
      properties:
        id:
          description: Unique id of the product
          format: int32
          nullable: true
          type: integer
        quantity:
          description: The quantity of this product ordered
          format: int32
          type: integer
        reference_id:
          description: Unique reference id of the product
          example: TShirtBlueM
          type: string
        sku:
          description: Stock keeping unit for the product
          example: TShirtBlueM
          type: string
      type: object
    Orders.RecipientInfoViewModel:
      additionalProperties: false
      description: Information about the recipient of an order
      example:
        address:
          country: US
          address2: Suite 100
          city: Gotham City
          address1: 100 Nowhere Blvd
          company_name: Wayne Enterprises
          state: NJ
          zip_code: "07093"
        name: John Doe
        phone_number: 555-555-5555
        email: john@example.com
      properties:
        address:
          $ref: '#/components/schemas/Orders.AddressViewModel'
        email:
          description: Email address of the recipient
          example: john@example.com
          type: string
        name:
          description: Name of the recipient
          example: John Doe
          type: string
        phone_number:
          description: Phone number of the recipient
          example: 555-555-5555
          maxLength: 50
          type: string
      required:
      - address
      - name
      type: object
    Orders.RecipientViewModel:
      additionalProperties: false
      description: Information about the recipient of a shipment
      example:
        address:
          country: US
          address2: Suite 100
          city: Gotham City
          address1: 100 Nowhere Blvd
          company_name: Wayne Enterprises
          state: NJ
          zip_code: "07093"
        name: John Doe
        phone_number: 555-555-5555
        email: john@example.com
      properties:
        address:
          $ref: '#/components/schemas/Orders.AddressViewModel'
        email:
          description: Email address of the recipient
          example: john@example.com
          type: string
        name:
          description: Name of the recipient
          example: John Doe
          type: string
        phone_number:
          description: Phone number of the recipient
          example: 555-555-5555
          type: string
      type: object
    Orders.ServiceLevelDetailViewModel:
      additionalProperties: false
      example:
        name: name
        id: 6
      properties:
        id:
          description: Unique id for the service level
          format: int32
          type: integer
        name:
          description: The name or title of the service level
          type: string
      type: object
    Orders.ShipMethodDetailViewModel:
      additionalProperties: false
      example:
        default: true
        service_level:
          name: name
          id: 6
        name: name
        active: true
        id: 0
      properties:
        active:
          description: Indicates if the shipping method is active
          type: boolean
        default:
          description: Indicates the shipping method is a ShipBob default shipping
            method.
          type: boolean
        id:
          description: Unique id for shipping method.
          format: int32
          type: integer
        name:
          description: "Name of the ship method as selected by the merchant and saved\
            \ in ShipBobâ\x80\x99s database (i.e. â\x80\x9cgroundâ\x80\x9d). Corresponds\
            \ to the shipping_method field in the Orders API."
          type: string
        service_level:
          $ref: '#/components/schemas/Orders.ServiceLevelDetailViewModel'
      type: object
    Orders.ShipmentLogViewModel:
      additionalProperties: false
      example:
        log_type_text: log_type_text
        log_type_name: log_type_name
        metadata:
          key: metadata
        log_type_id: 0
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        log_type_id:
          description: Log type id of the shipment
          format: int32
          type: integer
        log_type_name:
          description: Name of the log type
          type: string
        log_type_text:
          description: Summary of log type meaning
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Specifics data for the event
          type: object
        timestamp:
          description: Timestamp of event
          format: date-time
          type: string
      type: object
    Orders.ShipmentProductViewModel:
      additionalProperties: false
      description: Information about a store product belonging to a shipment
      example:
        reference_id: TShirtBlueM
        name: Medium Blue T-Shirt
        id: 1
        sku: TShirtBlueM
        inventory_items:
        - lot: "22222"
          quantity_committed: 7
          quantity: 6
          is_dangerous_goods: true
          name: Medium Blue T-Shirt
          id: 1
          expiration_date: 2000-01-23T04:56:07.000+00:00
          serial_numbers:
          - serial_numbers
          - serial_numbers
        - lot: "22222"
          quantity_committed: 7
          quantity: 6
          is_dangerous_goods: true
          name: Medium Blue T-Shirt
          id: 1
          expiration_date: 2000-01-23T04:56:07.000+00:00
          serial_numbers:
          - serial_numbers
          - serial_numbers
      properties:
        id:
          description: Unique id of the product
          format: int32
          type: integer
        inventory_items:
          description: Information about fulfillable inventory items belonging to
            this product
          items:
            $ref: '#/components/schemas/Orders.InventoryViewModel'
          type: array
        name:
          description: Name of the product
          example: Medium Blue T-Shirt
          type: string
        reference_id:
          description: Unique reference id of the product
          example: TShirtBlueM
          type: string
        sku:
          description: Stock keeping unit for the product
          example: TShirtBlueM
          type: string
      type: object
    Orders.ShipmentViewModel:
      additionalProperties: false
      description: Information about a shipment
      example:
        reference_id: reference_id
        require_signature: true
        estimated_fulfillment_date_status: AwaitingInventoryAllocation
        estimated_fulfillment_date: 2000-01-23T04:56:07.000+00:00
        invoice_amount: 7.061401241503109
        tracking:
          carrier: USPS
          carrier_service: Priority
          tracking_number: 860C8CDC8F0B4FC7AB69AC86C20539EC
          tracking_url: https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC
        actual_fulfillment_date: 2000-01-23T04:56:07.000+00:00
        products:
        - reference_id: TShirtBlueM
          name: Medium Blue T-Shirt
          id: 1
          sku: TShirtBlueM
          inventory_items:
          - lot: "22222"
            quantity_committed: 7
            quantity: 6
            is_dangerous_goods: true
            name: Medium Blue T-Shirt
            id: 1
            expiration_date: 2000-01-23T04:56:07.000+00:00
            serial_numbers:
            - serial_numbers
            - serial_numbers
          - lot: "22222"
            quantity_committed: 7
            quantity: 6
            is_dangerous_goods: true
            name: Medium Blue T-Shirt
            id: 1
            expiration_date: 2000-01-23T04:56:07.000+00:00
            serial_numbers:
            - serial_numbers
            - serial_numbers
        - reference_id: TShirtBlueM
          name: Medium Blue T-Shirt
          id: 1
          sku: TShirtBlueM
          inventory_items:
          - lot: "22222"
            quantity_committed: 7
            quantity: 6
            is_dangerous_goods: true
            name: Medium Blue T-Shirt
            id: 1
            expiration_date: 2000-01-23T04:56:07.000+00:00
            serial_numbers:
            - serial_numbers
            - serial_numbers
          - lot: "22222"
            quantity_committed: 7
            quantity: 6
            is_dangerous_goods: true
            name: Medium Blue T-Shirt
            id: 1
            expiration_date: 2000-01-23T04:56:07.000+00:00
            serial_numbers:
            - serial_numbers
            - serial_numbers
        package_material_type: Box
        insurance_value: 2.3021358869347655
        last_update_at: 2000-01-23T04:56:07.000+00:00
        recipient:
          address:
            country: US
            address2: Suite 100
            city: Gotham City
            address1: 100 Nowhere Blvd
            company_name: Wayne Enterprises
            state: NJ
            zip_code: "07093"
          name: John Doe
          phone_number: 555-555-5555
          email: john@example.com
        ship_option: Standard
        location:
          name: Cicero (IL)
          id: 9
        created_date: 2000-01-23T04:56:07.000+00:00
        id: 5
        order_id: 1
        status_details:
        - inventory_id: 5
          exception_fulfillment_center_id: 1
          name: name
          description: description
          id: 4
        - inventory_id: 5
          exception_fulfillment_center_id: 1
          name: name
          description: description
          id: 4
        measurements:
          length_in: 2
          depth_in: 3
          width_in: 7
          total_weight_oz: 4
        status: None
      properties:
        actual_fulfillment_date:
          description: "The datetime of ShipBobâ\x80\x99s completion of the fulfillment\
            \ operation as promised. \\r\\nCurrently, this means the shipment has\
            \ been picked, packed, and label has been printed."
          format: date-time
          nullable: true
          type: string
        created_date:
          description: Date this shipment was created
          format: date-time
          type: string
        estimated_fulfillment_date:
          description: "The datetime of ShipBobâ\x80\x99s commitment for completing\
            \ \\r\\nthe shipment and handing to the carrier for delivery."
          format: date-time
          nullable: true
          type: string
        estimated_fulfillment_date_status:
          description: "Status of ShipBobâ\x80\x99s completion of the fulfillment\
            \ operation."
          enum:
          - AwaitingInventoryAllocation
          - AwaitingReset
          - Unavailable
          - PendingOnTime
          - FulfilledOnTime
          - PendingLate
          - FulfilledLate
          type: string
        id:
          description: Unique id of the shipment
          format: int32
          type: integer
        insurance_value:
          description: Monetary amount that this shipment was insured for
          format: double
          nullable: true
          type: number
        invoice_amount:
          description: Monetary amount that was invoiced for this shipment
          format: double
          nullable: true
          type: number
        last_update_at:
          description: Date this shipment was last updated
          format: date-time
          nullable: true
          type: string
        location:
          $ref: '#/components/schemas/Orders.FulfillmentCenterViewModel'
        measurements:
          $ref: '#/components/schemas/Orders.MeasurementsViewModel'
        order_id:
          description: Id of the order this shipment belongs to
          format: int32
          type: integer
        package_material_type:
          description: Container type for the shipment
          enum:
          - Unknown
          - Box
          - BubbleMailer
          - PolyMailer
          - FragileBox
          - PosterTube
          - Custom
          - Bookfold
          - OwnContainer
          - Undefined
          example: Box
          type: string
        products:
          description: Information about the products contained in this shipment
          items:
            $ref: '#/components/schemas/Orders.ShipmentProductViewModel'
          type: array
        recipient:
          $ref: '#/components/schemas/Orders.RecipientViewModel'
        reference_id:
          description: Client-defined external unique id of the order this shipment
            belongs to
          type: string
        require_signature:
          description: If a shipment requires signature
          type: boolean
        ship_option:
          description: Name of the shipping option used for this shipment
          example: Standard
          type: string
        status:
          description: The shipment status
          enum:
          - None
          - Processing
          - Pending
          - Completed
          - Exception
          - OnHold
          - Cancelled
          - CleanSweeped
          - LabeledCreated
          - ImportReview
          type: string
        status_details:
          description: Additional details about the shipment status
          items:
            $ref: '#/components/schemas/Orders.StatusDetailViewModel'
          type: array
        tracking:
          $ref: '#/components/schemas/Orders.TrackingViewModel'
      type: object
    Orders.StatusDetailViewModel:
      additionalProperties: false
      example:
        inventory_id: 5
        exception_fulfillment_center_id: 1
        name: name
        description: description
        id: 4
      properties:
        description:
          description: Describes what the status detail means
          type: string
        exception_fulfillment_center_id:
          format: int32
          nullable: true
          type: integer
        id:
          description: The id of the status detail
          format: int32
          type: integer
        inventory_id:
          description: Inventory Id the detail applies to (if applicable)
          format: int32
          nullable: true
          type: integer
        name:
          description: Short name of the status detail
          type: string
      type: object
    Orders.TagViewModel:
      additionalProperties: false
      example:
        name: Handling instructions
        value: Fragile
      properties:
        name:
          description: The key of the tag
          example: Handling instructions
          maxLength: 50
          type: string
        value:
          description: The value of the tag
          example: Fragile
          maxLength: 500
          type: string
      required:
      - name
      - value
      type: object
    Orders.TrackingViewModel:
      additionalProperties: false
      description: Tracking information for a shipment
      example:
        carrier: USPS
        carrier_service: Priority
        tracking_number: 860C8CDC8F0B4FC7AB69AC86C20539EC
        tracking_url: https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC
      properties:
        carrier:
          description: Carrier of the shipment
          example: USPS
          type: string
        carrier_service:
          description: The carrier's service which was used for this shipment
          example: Priority
          type: string
        tracking_number:
          description: Tracking number of the shipment
          example: 860C8CDC8F0B4FC7AB69AC86C20539EC
          type: string
        tracking_url:
          description: URL to the website where a shipment can be tracked
          example: https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC
          type: string
      type: object
    Webhooks.CreateWebhookSubscriptionModel:
      additionalProperties: false
      properties:
        subscription_url:
          description: URL we will call when an event matching the subscription topic
            is raised. Must have ssl enabled (https) and accept POST requests with
            content type of application/json
          example: https://mywebsite.com/shipbob/handler
          format: uri
          type: string
        topic:
          $ref: '#/components/schemas/Webhooks.Topics'
      required:
      - subscription_url
      - topic
      type: object
    Webhooks.WebhookViewModel:
      additionalProperties: false
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        subscription_url: https://openapi-generator.tech
        id: 12345
      properties:
        created_at:
          description: Timestamp the webhook subscription was created
          format: date-time
          type: string
        id:
          description: ID of the webhook subscription
          example: 12345
          format: int32
          type: integer
        subscription_url:
          description: URL subscription events will be posted to
          format: uri
          nullable: true
          type: string
        topic:
          $ref: '#/components/schemas/Webhooks.Topics'
      type: object
    Webhooks.Topics:
      enum:
      - order_shipped
      - shipment_delivered
      - shipment_exception
      - shipment_onhold
      type: string
    Inventory.DimensionViewModel:
      additionalProperties: false
      description: Information about an inventory item's dimensions
      example:
        depth: 0.8008281904610115
        length: 6.027456183070403
        width: 5.962133916683182
        weight: 1.4658129805029452
      properties:
        depth:
          description: Depth in inches of this inventory item
          format: double
          type: number
        length:
          description: Length in inches of this inventory item
          format: double
          type: number
        weight:
          description: Weight in ounces of this inventory item
          format: double
          type: number
        width:
          description: Width in inches of this inventory item
          format: double
          type: number
      type: object
    Inventory.FulfillmentCenterQuantityViewModel:
      additionalProperties: false
      description: Break down of fulfillable quantity by fulfillment center
      example:
        onhand_quantity: 2
        fulfillable_quantity: 7
        name: Cicero
        committed_quantity: 2
        internal_transfer_quantity: 3
        id: 9
        awaiting_quantity: 5
      properties:
        awaiting_quantity:
          description: Amount of quantity awaiting arrival of a receiving order at
            this fulfillment center
          format: int32
          type: integer
        committed_quantity:
          description: Amount of committed quantity at this fulfillment center
          format: int32
          type: integer
        fulfillable_quantity:
          description: Amount of fulfillable quantity at this fulfillment center
          format: int32
          type: integer
        id:
          description: Unique id of the fulfillment center
          format: int32
          type: integer
        internal_transfer_quantity:
          description: The quantity of items that are in the process of internal transit
            \r\nbetween ShipBob fulfillment centers, with a destination of this fulfillment
            center.\r\nThese items are not pickable or fulfillable until they have
            been received and moved \r\nto the "On Hand" quantity of the destination
            FC.
          format: int32
          type: integer
        name:
          description: Name of the fulfillment center
          example: Cicero
          type: string
        onhand_quantity:
          description: Amount of onhand quantity at this fulfillment center
          format: int32
          type: integer
      type: object
    Inventory.InventoryViewModel:
      additionalProperties: false
      description: Information about an inventory item
      example:
        total_exception_quantity: 5
        total_fulfillable_quantity: 9
        total_internal_transfer_quantity: 9
        fulfillable_quantity_by_fulfillment_center:
        - onhand_quantity: 2
          fulfillable_quantity: 7
          name: Cicero
          committed_quantity: 2
          internal_transfer_quantity: 3
          id: 9
          awaiting_quantity: 5
        - onhand_quantity: 2
          fulfillable_quantity: 7
          name: Cicero
          committed_quantity: 2
          internal_transfer_quantity: 3
          id: 9
          awaiting_quantity: 5
        total_committed_quantity: 4
        is_active: true
        is_case_pick: true
        is_digital: true
        fulfillable_quantity_by_lot:
        - onhand_quantity: 1
          fulfillable_quantity_by_fulfillment_center:
          - onhand_quantity: 2
            fulfillable_quantity: 7
            name: Cicero
            committed_quantity: 2
            internal_transfer_quantity: 3
            id: 9
            awaiting_quantity: 5
          - onhand_quantity: 2
            fulfillable_quantity: 7
            name: Cicero
            committed_quantity: 2
            internal_transfer_quantity: 3
            id: 9
            awaiting_quantity: 5
          fulfillable_quantity: 1
          committed_quantity: 7
          internal_transfer_quantity: 1
          expiration_date: 2000-01-23T04:56:07.000+00:00
          awaiting_quantity: 4
          lot_number: "1234"
        - onhand_quantity: 1
          fulfillable_quantity_by_fulfillment_center:
          - onhand_quantity: 2
            fulfillable_quantity: 7
            name: Cicero
            committed_quantity: 2
            internal_transfer_quantity: 3
            id: 9
            awaiting_quantity: 5
          - onhand_quantity: 2
            fulfillable_quantity: 7
            name: Cicero
            committed_quantity: 2
            internal_transfer_quantity: 3
            id: 9
            awaiting_quantity: 5
          fulfillable_quantity: 1
          committed_quantity: 7
          internal_transfer_quantity: 1
          expiration_date: 2000-01-23T04:56:07.000+00:00
          awaiting_quantity: 4
          lot_number: "1234"
        is_lot: true
        name: Medium Blue T-Shirt
        packaging_attribute: None
        total_awaiting_quantity: 7
        id: 6
        total_onhand_quantity: 6
        total_backordered_quantity: 1
        dimensions:
          depth: 0.8008281904610115
          length: 6.027456183070403
          width: 5.962133916683182
          weight: 1.4658129805029452
      properties:
        dimensions:
          $ref: '#/components/schemas/Inventory.DimensionViewModel'
        fulfillable_quantity_by_fulfillment_center:
          description: Fulfillable quantity of this inventory item broken down by
            fulfillment center location
          items:
            $ref: '#/components/schemas/Inventory.FulfillmentCenterQuantityViewModel'
          type: array
        fulfillable_quantity_by_lot:
          description: Fulfillable quantity of this inventory item broken down by
            lot
          items:
            $ref: '#/components/schemas/Inventory.LotQuantityViewModel'
          type: array
        id:
          description: Unique id of the inventory item
          format: int32
          type: integer
        is_active:
          description: Whether the inventory is active or not
          type: boolean
        is_case_pick:
          description: True if the inventory item is marked as case pick
          type: boolean
        is_digital:
          description: True if the inventory item is marked as a digital item
          type: boolean
        is_lot:
          description: True if this inventory item is organized into lots
          type: boolean
        name:
          description: Name of the inventory item
          example: Medium Blue T-Shirt
          type: string
        packaging_attribute:
          description: Attribute influencing the packaging requirements of this inventory
            item
          enum:
          - None
          - Fragile
          - Foldable
          - Stackable
          - Book
          - CustomPackaging
          - CustomDunnage
          - MarketingInsert
          - Poster
          type: string
        total_awaiting_quantity:
          description: Total quantity in unreceived receiving orders for this inventory
            item
          format: int32
          type: integer
        total_backordered_quantity:
          description: The amount of the item you need to send to ShipBob to fulfill
            all exception orders containing \r\nthe item. This is the exception_quantity
            less the fulfillable_quantity of the item.
          format: int32
          type: integer
        total_committed_quantity:
          description: Total committed quantity of this inventory item
          format: int32
          type: integer
        total_exception_quantity:
          description: The total quantity of all items that are contained within orders
            that\r\nare in exception/out of stock status. Out of stock orders have
            not been\r\nprocessed and therefore do not have lot or fulfillment centers
            assigned.
          format: int32
          type: integer
        total_fulfillable_quantity:
          description: Total fulfillable quantity of this inventory item
          format: int32
          type: integer
        total_internal_transfer_quantity:
          description: The total quantity of all items that are in the process of
            internal transit \r\nbetween ShipBob fulfillment centers. These items
            are not pickable or fulfillable\r\nuntil they have been received and moved
            to the "On Hand" quantity of the destination FC.\r\nInternal transit quantities
            for each FC represent the incoming transfer stock\r\nfor that specific
            location.
          format: int32
          type: integer
        total_onhand_quantity:
          description: Total onhand quantity of this inventory item
          format: int32
          type: integer
      type: object
    Inventory.LotQuantityViewModel:
      additionalProperties: false
      description: Break down of fulfillable quantity by lot
      example:
        onhand_quantity: 1
        fulfillable_quantity_by_fulfillment_center:
        - onhand_quantity: 2
          fulfillable_quantity: 7
          name: Cicero
          committed_quantity: 2
          internal_transfer_quantity: 3
          id: 9
          awaiting_quantity: 5
        - onhand_quantity: 2
          fulfillable_quantity: 7
          name: Cicero
          committed_quantity: 2
          internal_transfer_quantity: 3
          id: 9
          awaiting_quantity: 5
        fulfillable_quantity: 1
        committed_quantity: 7
        internal_transfer_quantity: 1
        expiration_date: 2000-01-23T04:56:07.000+00:00
        awaiting_quantity: 4
        lot_number: "1234"
      properties:
        awaiting_quantity:
          description: Quantity of inventory items belonging to this lot awaiting
            arrival of a receiving order
          format: int32
          type: integer
        committed_quantity:
          description: Committed quantity of inventory items belonging to this lot
          format: int32
          type: integer
        expiration_date:
          description: Expiration date for this lot
          format: date-time
          nullable: true
          type: string
        fulfillable_quantity:
          description: Fulfillable quantity of inventory items belonging to this lot
          format: int32
          type: integer
        fulfillable_quantity_by_fulfillment_center:
          description: Fulfillable quantity of inventory items belonging to this lot
            broken down by fulfillment center location
          items:
            $ref: '#/components/schemas/Inventory.FulfillmentCenterQuantityViewModel'
          type: array
        internal_transfer_quantity:
          description: The quantity of all items belonging to this lot that are in
            the process of internal transit \r\nbetween ShipBob fulfillment centers.
            These items are not pickable or fulfillable\r\nuntil they have been received
            and moved to the "On Hand" quantity of the destination FC.\r\nInternal
            transit quantities for each FC represent the incoming transfer stock\r\nfor
            that specific location.
          format: int32
          type: integer
        lot_number:
          description: Identification number of this lot
          example: "1234"
          type: string
        onhand_quantity:
          description: OnHand quantity of inventory items belonging to this lot
          format: int32
          type: integer
      type: object
    Products.CreateProductModel:
      additionalProperties: false
      description: The product to create
      example:
        reference_id: TShirtBlueM
        name: Medium Blue T-Shirt
        sku: TShirtBlueM
        barcode: "123456789012"
      properties:
        barcode:
          description: Barcode for the product
          example: "123456789012"
          nullable: true
          type: string
        name:
          description: The name of the product
          example: Medium Blue T-Shirt
          nullable: true
          type: string
        reference_id:
          description: Unique reference identifier for the product. Any linked or
            generated inventory will also be uniquely identified by this value
          example: TShirtBlueM
          nullable: true
          type: string
        sku:
          description: Stock keeping unit for the product
          example: TShirtBlueM
          nullable: true
          type: string
      required:
      - name
      - reference_id
      type: object
    Products.UpdateProductModel:
      additionalProperties: false
      description: Updates to an existing product product
      properties:
        barcode:
          description: Barcode for the product
          example: "123456789012"
          nullable: true
          type: string
        name:
          description: The name of the product
          example: Medium Blue T-Shirt
          nullable: true
          type: string
        sku:
          description: The stock keeping unit of the product
          example: TShirtBlueM
          nullable: true
          type: string
      required:
      - name
      type: object
    Products.BundleRootInformationViewModel:
      additionalProperties: false
      example:
        name: name
        id: 0
      properties:
        id:
          description: Id of the bundle root product
          format: int32
          type: integer
        name:
          description: Name of the bundle root product
          nullable: true
          type: string
      type: object
    Products.ChannelViewModel:
      additionalProperties: false
      description: Information about a store channel
      example:
        name: House of Slippers
        id: 6
      properties:
        id:
          description: Unique id of the store channel
          format: int32
          type: integer
        name:
          description: Name of the store channel
          example: House of Slippers
          nullable: true
          type: string
      type: object
    Products.FulfillmentCenterQuantityViewModel:
      additionalProperties: false
      description: Break down of quantities by fulfillment center
      example:
        onhand_quantity: 9
        fulfillable_quantity: 2
        name: Cicero
        committed_quantity: 5
        id: 7
      properties:
        committed_quantity:
          description: Amount of committed quantity at this fulfillment center
          format: int32
          type: integer
        fulfillable_quantity:
          description: Amount of fulfillable quantity at this fulfillment center
          format: int32
          type: integer
        id:
          description: Unique id of the fulfillment center
          format: int32
          type: integer
        name:
          description: Name of the fulfillment center
          example: Cicero
          nullable: true
          type: string
        onhand_quantity:
          description: Amount of onhand quantity at this fulfillment center
          format: int32
          type: integer
      type: object
    Products.InventoryItemViewModel:
      additionalProperties: false
      description: The inventory that store products can resolve to when packing a
        shipment
      example:
        quantity: 5
        name: Medium Blue T-Shirt
        id: 1
      properties:
        id:
          description: Unique id of the inventory item
          format: int32
          type: integer
        name:
          description: Name of the inventory item
          example: Medium Blue T-Shirt
          nullable: true
          type: string
        quantity:
          description: Quantity of the inventory item included in a store product
          format: int32
          type: integer
      type: object
    Products.ProductViewModel:
      additionalProperties: false
      example:
        total_fulfillable_quantity: 4
        fulfillable_quantity_by_fulfillment_center:
        - onhand_quantity: 9
          fulfillable_quantity: 2
          name: Cicero
          committed_quantity: 5
          id: 7
        - onhand_quantity: 9
          fulfillable_quantity: 2
          name: Cicero
          committed_quantity: 5
          id: 7
        total_committed_quantity: 2
        reference_id: TShirtBlueM
        bundle_root_information:
          name: name
          id: 0
        channel:
          name: House of Slippers
          id: 6
        fulfillable_inventory_items:
        - quantity: 5
          name: Medium Blue T-Shirt
          id: 1
        - quantity: 5
          name: Medium Blue T-Shirt
          id: 1
        name: Medium Blue T-Shirt
        created_date: 2000-01-23T04:56:07.000+00:00
        id: 3
        sku: TShirtBlueM
        total_onhand_quantity: 7
        barcode: "123456789012"
      properties:
        barcode:
          description: Barcode for the product
          example: "123456789012"
          nullable: true
          type: string
        bundle_root_information:
          $ref: '#/components/schemas/Products.BundleRootInformationViewModel'
        channel:
          $ref: '#/components/schemas/Products.ChannelViewModel'
        created_date:
          description: Date the product was created
          format: date-time
          type: string
        fulfillable_inventory_items:
          description: The inventory that this product will resolve to when packing
            a shipment
          items:
            $ref: '#/components/schemas/Products.InventoryItemViewModel'
          nullable: true
          type: array
        fulfillable_quantity_by_fulfillment_center:
          description: Fulfillable quantity of this product broken down by fulfillment
            center location
          items:
            $ref: '#/components/schemas/Products.FulfillmentCenterQuantityViewModel'
          nullable: true
          type: array
        id:
          description: Unique identifier of the product
          format: int32
          type: integer
        name:
          description: The name of the product
          example: Medium Blue T-Shirt
          nullable: true
          type: string
        reference_id:
          description: Unique reference identifier of the product
          example: TShirtBlueM
          nullable: true
          type: string
        sku:
          description: Stock keeping unit for the product
          example: TShirtBlueM
          nullable: true
          type: string
        total_committed_quantity:
          description: Total committed quantity of this product
          format: int32
          type: integer
        total_fulfillable_quantity:
          description: Total fulfillable quantity of this product
          format: int32
          type: integer
        total_onhand_quantity:
          description: Total on hand quantity of this product
          format: int32
          type: integer
      type: object
    Products.ProductActiveStatus:
      enum:
      - Any
      - Active
      - Inactive
      type: string
    Products.ProductBundleStatus:
      enum:
      - Any
      - Bundle
      - NotBundle
      type: string
    Receiving.AddBoxItemToBoxModel:
      additionalProperties: false
      description: Information about an inventory item contained inside a receiving
        order box
      properties:
        inventory_id:
          description: Unique inventory id of the items in the box
          format: int32
          type: integer
        lot_date:
          description: Lot expiration date for the items in the box
          format: date-time
          nullable: true
          type: string
        lot_number:
          description: Lot number of the items in the box
          example: "2222"
          nullable: true
          type: string
        quantity:
          description: Quantity of the items in the box
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      required:
      - inventory_id
      - quantity
      type: object
    Receiving.AddBoxToOrderModel:
      additionalProperties: false
      description: Information about a box shipment to be added to a receiving order
      properties:
        box_items:
          description: Items contained in this box
          items:
            $ref: '#/components/schemas/Receiving.AddBoxItemToBoxModel'
          nullable: true
          type: array
        tracking_number:
          description: Tracking number for the box shipment
          example: 860C8CDC8F0B4FC7AB69AC86C20539EC
          nullable: true
          type: string
      required:
      - box_items
      - tracking_number
      type: object
    Receiving.AssignOrderToFulfillmentCenterModel:
      additionalProperties: false
      description: Model containing information that assigns a receiving order to
        a fulfillment center
      properties:
        id:
          description: ID of the fulfillment center to assign this receiving order
            to
          format: int32
          type: integer
      required:
      - id
      type: object
    Receiving.BoxItemViewModel:
      additionalProperties: false
      description: Information about an item contained inside a box as part of a receiving
        order
      example:
        lot_date: 2000-01-23T04:56:07.000+00:00
        quantity: 6
        inventory_id: 0
        received_quantity: 1
        lot_number: lot_number
      properties:
        inventory_id:
          description: Unique identifier of the inventory item
          format: int32
          type: integer
        lot_date:
          description: Expiration date of the item's lot
          format: date-time
          nullable: true
          type: string
        lot_number:
          description: Lot number the item belongs to
          nullable: true
          type: string
        quantity:
          description: Quantity of the item included
          format: int32
          type: integer
        received_quantity:
          description: Quantity of the item that was received after processing the
            receiving order
          format: int32
          type: integer
      type: object
    Receiving.BoxViewModel:
      additionalProperties: false
      description: Information about a box shipment included in a receiving order
      example:
        counting_started_date: 2000-01-23T04:56:07.000+00:00
        box_number: 5
        received_date: 2000-01-23T04:56:07.000+00:00
        box_items:
        - lot_date: 2000-01-23T04:56:07.000+00:00
          quantity: 6
          inventory_id: 0
          received_quantity: 1
          lot_number: lot_number
        - lot_date: 2000-01-23T04:56:07.000+00:00
          quantity: 6
          inventory_id: 0
          received_quantity: 1
          lot_number: lot_number
        tracking_number: 860C8CDC8F0B4FC7AB69AC86C20539EC
        arrived_date: 2000-01-23T04:56:07.000+00:00
      properties:
        arrived_date:
          description: Date the box arrived
          format: date-time
          nullable: true
          type: string
        box_items:
          description: Information about the items included in the box
          items:
            $ref: '#/components/schemas/Receiving.BoxItemViewModel'
          nullable: true
          type: array
        box_number:
          description: The number of the box in the receiving order
          format: int32
          type: integer
        box_status:
          $ref: '#/components/schemas/Receiving.BoxStatus'
        counting_started_date:
          description: Date counting of the box's inventory items started
          format: date-time
          nullable: true
          type: string
        received_date:
          description: Date the box was received
          format: date-time
          nullable: true
          type: string
        tracking_number:
          description: Tracking number of the box shipment
          example: 860C8CDC8F0B4FC7AB69AC86C20539EC
          nullable: true
          type: string
      type: object
    Receiving.CreateReceivingOrderModel:
      additionalProperties: false
      description: Information to create a new receiving order
      properties:
        box_packaging_type:
          $ref: '#/components/schemas/Receiving.PackingType'
        boxes:
          description: Box shipments to be added to this receiving order
          items:
            $ref: '#/components/schemas/Receiving.AddBoxToOrderModel'
          nullable: true
          type: array
        expected_arrival_date:
          description: Expected arrival date of all the box shipments in this receiving
            order
          format: date-time
          type: string
        fulfillment_center:
          $ref: '#/components/schemas/Receiving.AssignOrderToFulfillmentCenterModel'
        package_type:
          $ref: '#/components/schemas/Receiving.PackageType'
      required:
      - box_packaging_type
      - boxes
      - expected_arrival_date
      - fulfillment_center
      - package_type
      type: object
    Receiving.FulfillmentCenterViewModel:
      additionalProperties: false
      description: Information about a fulfillment center
      example:
        country: USA
        address2: Suite 100
        city: Cicero
        address1: 5900 W Ogden Ave
        timezone: Central Standard Time
        name: Cicero (IL)
        phone_number: 555-555-5555
        id: 0
        state: IL
        email: example@example.com
        zip_code: "60804"
      properties:
        address1:
          description: Address line one of the fulfillment center
          example: 5900 W Ogden Ave
          nullable: true
          type: string
        address2:
          description: Address line two of the fulfillment center
          example: Suite 100
          nullable: true
          type: string
        city:
          description: City the fulfillment center is located in
          example: Cicero
          nullable: true
          type: string
        country:
          description: Country the fulfillment center is located in
          example: USA
          nullable: true
          type: string
        email:
          description: Email contact for the fulfillment center
          example: example@example.com
          nullable: true
          type: string
        id:
          description: Unique identifier of the fulfillment center
          format: int32
          type: integer
        name:
          description: Name of the fulfillment center
          example: Cicero (IL)
          nullable: true
          type: string
        phone_number:
          description: Phone number contact for the fulfillment center
          example: 555-555-5555
          nullable: true
          type: string
        state:
          description: State the fulfillment center is located in
          example: IL
          nullable: true
          type: string
        timezone:
          description: Timezone the fulfillment center is located in
          example: Central Standard Time
          nullable: true
          type: string
        zip_code:
          description: Postal code of the fulfillment center
          example: "60804"
          nullable: true
          type: string
      type: object
    Receiving.ReceivingOrderViewModel:
      additionalProperties: false
      description: Information about a receiving order
      example:
        boxes:
        - counting_started_date: 2000-01-23T04:56:07.000+00:00
          box_number: 5
          received_date: 2000-01-23T04:56:07.000+00:00
          box_items:
          - lot_date: 2000-01-23T04:56:07.000+00:00
            quantity: 6
            inventory_id: 0
            received_quantity: 1
            lot_number: lot_number
          - lot_date: 2000-01-23T04:56:07.000+00:00
            quantity: 6
            inventory_id: 0
            received_quantity: 1
            lot_number: lot_number
          tracking_number: 860C8CDC8F0B4FC7AB69AC86C20539EC
          arrived_date: 2000-01-23T04:56:07.000+00:00
        - counting_started_date: 2000-01-23T04:56:07.000+00:00
          box_number: 5
          received_date: 2000-01-23T04:56:07.000+00:00
          box_items:
          - lot_date: 2000-01-23T04:56:07.000+00:00
            quantity: 6
            inventory_id: 0
            received_quantity: 1
            lot_number: lot_number
          - lot_date: 2000-01-23T04:56:07.000+00:00
            quantity: 6
            inventory_id: 0
            received_quantity: 1
            lot_number: lot_number
          tracking_number: 860C8CDC8F0B4FC7AB69AC86C20539EC
          arrived_date: 2000-01-23T04:56:07.000+00:00
        fulfillment_center:
          country: USA
          address2: Suite 100
          city: Cicero
          address1: 5900 W Ogden Ave
          timezone: Central Standard Time
          name: Cicero (IL)
          phone_number: 555-555-5555
          id: 0
          state: IL
          email: example@example.com
          zip_code: "60804"
        insert_date: 2000-01-23T04:56:07.000+00:00
        box_labels_uri: https://api.shipbob.com/1.0/receiving/1/labels
        id: 5
        last_updated_date: 2000-01-23T04:56:07.000+00:00
        expected_arrival_date: 2000-01-23T04:56:07.000+00:00
      properties:
        box_labels_uri:
          description: URL to the packing slip to be included in each box shipment
            for this receiving order
          example: https://api.shipbob.com/1.0/receiving/1/labels
          nullable: true
          type: string
        box_packaging_type:
          $ref: '#/components/schemas/Receiving.PackingType'
        boxes:
          description: Information about the boxes being shipped in this receiving
            order
          items:
            $ref: '#/components/schemas/Receiving.BoxViewModel'
          nullable: true
          type: array
        expected_arrival_date:
          description: Expected date that all packages will have arrived
          format: date-time
          type: string
        fulfillment_center:
          $ref: '#/components/schemas/Receiving.FulfillmentCenterViewModel'
        id:
          description: Unique id of the warehouse receiving order
          format: int32
          type: integer
        insert_date:
          description: Insert date of the receiving order
          format: date-time
          type: string
        last_updated_date:
          description: Last date the receiving order was updated
          format: date-time
          type: string
        package_type:
          $ref: '#/components/schemas/Receiving.PackageType'
        status:
          $ref: '#/components/schemas/Receiving.ReceivingStatus'
      type: object
    Receiving.BoxStatus:
      enum:
      - Awaiting
      - Arrived
      - Completed
      - Counting
      - Stowing
      - Cancelled
      type: string
    Receiving.PackageType:
      enum:
      - Package
      - Pallet
      - FloorLoadedContainer
      type: string
    Receiving.PackingType:
      enum:
      - EverythingInOneBox
      - OneSkuPerBox
      - MultipleSkuPerBox
      type: string
    Receiving.ReceivingStatus:
      enum:
      - Awaiting
      - Processing
      - Completed
      - Cancelled
      - Incomplete
      - Arrived
      - PartiallyArrived
      type: string
    Returns.ChannelInfoViewModel:
      additionalProperties: false
      description: Created by channel metadata
      example:
        name: ShipBobs-Shopify-Store
        id: 0
      properties:
        id:
          description: Unique id of the channel
          format: int32
          type: integer
        name:
          description: Name of the channel
          example: ShipBobs-Shopify-Store
          nullable: true
          type: string
      type: object
    Returns.CreateReturnViewModel:
      additionalProperties: false
      properties:
        fulfillment_center:
          $ref: '#/components/schemas/Returns.FulfillmentCenterViewModel'
        inventory:
          description: Array of inventory items being returned
          items:
            $ref: '#/components/schemas/Returns.ReturnInventoryViewModel'
          minLength: 1
          nullable: true
          type: array
        original_shipment_id:
          description: Shipment from which the items in the return originated
          example: 123456
          format: int32
          nullable: true
          type: integer
        reference_id:
          description: Client-defined external unique identifier for the return order
          example: ShipBob_Return_123
          maxLength: 50
          nullable: true
          type: string
        tracking_number:
          description: Tracking number for the return shipment
          example: 1Z9999999999999999
          maxLength: 500
          nullable: true
          type: string
      required:
      - fulfillment_center
      - inventory
      - reference_id
      type: object
    Returns.FulfillmentCenterViewModel:
      additionalProperties: false
      description: Information about a fulfillment center
      example:
        name: Cicero (IL)
        id: 6
      properties:
        id:
          description: Unique identifier of the fulfillment center
          format: int32
          type: integer
        name:
          description: Name of the fulfillment center
          example: Cicero (IL)
          nullable: true
          type: string
      required:
      - id
      type: object
    Returns.InventoryItemViewModel:
      additionalProperties: false
      example:
        action_requested:
          instructions: instructions
        quantity: 2
        action_taken:
        - quantity_processed: 1280358509
          action_reason: action_reason
        - quantity_processed: 1280358509
          action_reason: action_reason
        name: name
        id: 5
      properties:
        action_requested:
          $ref: '#/components/schemas/Returns.ReturnActionRequestedViewModel'
        action_taken:
          description: Action(s) taken when processing the return
          items:
            $ref: '#/components/schemas/Returns.ReturnActionTakenViewModel'
          nullable: true
          type: array
        id:
          description: Unique id of the inventory item
          format: int32
          type: integer
        name:
          description: Name of the inventory item
          nullable: true
          type: string
        quantity:
          description: Quantity expected to be processed with the return
          format: int32
          type: integer
      type: object
    Returns.ReturnActionRequestedViewModel:
      additionalProperties: false
      example:
        instructions: instructions
      properties:
        action:
          $ref: '#/components/schemas/Returns.ReturnAction'
        action_type:
          $ref: '#/components/schemas/Returns.ReturnActionSource'
        instructions:
          description: Specific instructions to be taken for the inventory when processing
            the return
          nullable: true
          type: string
      type: object
    Returns.ReturnActionTakenViewModel:
      additionalProperties: false
      example:
        quantity_processed: 1280358509
        action_reason: action_reason
      properties:
        action:
          $ref: '#/components/schemas/Returns.ReturnAction'
        action_reason:
          description: Reason the given action was taken
          nullable: true
          type: string
        quantity_processed:
          description: Quantity of inventory processed with the taken action
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      type: object
    Returns.ReturnInventoryViewModel:
      additionalProperties: false
      properties:
        id:
          description: ID of the inventory item to return
          example: 111222
          format: int32
          type: integer
        quantity:
          description: Quantity of the returned inventory item in the return
          example: 1
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        requested_action:
          $ref: '#/components/schemas/Returns.ReturnAction'
      required:
      - id
      - quantity
      type: object
    Returns.ReturnOrderStatusHistoryViewModel:
      additionalProperties: false
      example:
        time_stamp: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          $ref: '#/components/schemas/Returns.ReturnStatus'
        time_stamp:
          description: Date this corresponding return order status was created
          format: date-time
          type: string
      type: object
    Returns.ReturnOrderViewModel:
      additionalProperties: false
      example:
        fulfillment_center:
          name: Cicero (IL)
          id: 6
        reference_id: reference_id
        insert_date: 2000-01-23T04:56:07.000+00:00
        channel:
          name: ShipBobs-Shopify-Store
          id: 0
        tracking_number: 860C8CDC8F0B4FC7AB69AC86C20539EC
        id: 1
        inventory:
        - action_requested:
            instructions: instructions
          quantity: 2
          action_taken:
          - quantity_processed: 1280358509
            action_reason: action_reason
          - quantity_processed: 1280358509
            action_reason: action_reason
          name: name
          id: 5
        - action_requested:
            instructions: instructions
          quantity: 2
          action_taken:
          - quantity_processed: 1280358509
            action_reason: action_reason
          - quantity_processed: 1280358509
            action_reason: action_reason
          name: name
          id: 5
        original_shipment_id: 9
        transactions:
        - amount: 2.5
        - amount: 2.5
        invoice_amount: 7.061401241503109
      properties:
        channel:
          $ref: '#/components/schemas/Returns.ChannelInfoViewModel'
        fulfillment_center:
          $ref: '#/components/schemas/Returns.FulfillmentCenterViewModel'
        id:
          description: Unique id of the Return Order
          format: int32
          type: integer
        insert_date:
          description: Date this return order was created
          format: date-time
          type: string
        inventory:
          description: List of inventory included in the return order
          items:
            $ref: '#/components/schemas/Returns.InventoryItemViewModel'
          nullable: true
          type: array
        invoice_amount:
          description: Invoiced amount of return order (sum of transaction amounts)
          format: double
          nullable: true
          type: number
        original_shipment_id:
          description: Id of the corresponding shipment that is the souce of the return
          format: int32
          nullable: true
          type: integer
        reference_id:
          description: Client-defined external unique id of the return order
          nullable: true
          type: string
        return_type:
          $ref: '#/components/schemas/Returns.ReturnType'
        status:
          $ref: '#/components/schemas/Returns.ReturnStatus'
        tracking_number:
          description: Tracking number of the return shipment
          example: 860C8CDC8F0B4FC7AB69AC86C20539EC
          nullable: true
          type: string
        transactions:
          description: Array of transactions affiliated with the return order
          items:
            $ref: '#/components/schemas/Returns.TransactionViewModel'
          nullable: true
          type: array
      type: object
    Returns.TransactionViewModel:
      additionalProperties: false
      example:
        amount: 2.5
      properties:
        amount:
          description: Transaction amount in dollars
          example: 2.5
          format: double
          type: number
        transaction_type:
          $ref: '#/components/schemas/Returns.TransactionLogSource'
      type: object
    Returns.ReturnAction:
      enum:
      - Default
      - Restock
      - Quarantine
      - Dispose
      type: string
    Returns.ReturnActionSource:
      enum:
      - InventoryDefault
      - Override
      type: string
    Returns.ReturnStatus:
      enum:
      - AwaitingArrival
      - Arrived
      - Processing
      - Completed
      - Cancelled
      type: string
    Returns.ReturnType:
      enum:
      - Regular
      - ReturnToSender
      type: string
    Returns.SortOrder:
      enum:
      - Newest
      - Oldest
      type: string
    Returns.TransactionLogSource:
      enum:
      - ReturnLabelInvoice
      - ReturnProcessingFee
      - ReturnToSenderFee
      type: string
    ValidationProblemDetails_allOf:
      properties:
        errors:
          additionalProperties:
            items:
              type: string
            type: array
          nullable: true
          type: object
      type: object
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://auth.shipbob.com/connect/integrate
          scopes:
            channels_read: Read channel metadata
            inventory_read: Access read operations
            inventory_write: Access write operations
            locations_read: Access locations read operations
            orders_read: Access read operations
            orders_write: Access write operations
            products_read: Access read operations
            products_write: Access write operations
            receiving_read: Access receiving read operations
            receiving_write: Access receiving write operations
            returns_read: Access returns read operations
            returns_write: Access returns write operations
            webhooks_read: Access read operations
            webhooks_write: Access write operations
          tokenUrl: https://auth.shipbob.com/connect/token
      type: oauth2
