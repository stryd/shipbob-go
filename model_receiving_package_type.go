/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// ReceivingPackageType the model 'ReceivingPackageType'
type ReceivingPackageType string

// List of Receiving.PackageType
const (
	ReceivingPackageTypePACKAGE ReceivingPackageType = "Package"
	ReceivingPackageTypePALLET ReceivingPackageType = "Pallet"
	ReceivingPackageTypeFLOOR_LOADED_CONTAINER ReceivingPackageType = "FloorLoadedContainer"
)

func (v *ReceivingPackageType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ReceivingPackageType(value)
	for _, existing := range []ReceivingPackageType{ "Package", "Pallet", "FloorLoadedContainer",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ReceivingPackageType", value)
}

// Ptr returns reference to Receiving.PackageType value
func (v ReceivingPackageType) Ptr() *ReceivingPackageType {
	return &v
}

type NullableReceivingPackageType struct {
	value *ReceivingPackageType
	isSet bool
}

func (v NullableReceivingPackageType) Get() *ReceivingPackageType {
	return v.value
}

func (v *NullableReceivingPackageType) Set(val *ReceivingPackageType) {
	v.value = val
	v.isSet = true
}

func (v NullableReceivingPackageType) IsSet() bool {
	return v.isSet
}

func (v *NullableReceivingPackageType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReceivingPackageType(val *ReceivingPackageType) *NullableReceivingPackageType {
	return &NullableReceivingPackageType{value: val, isSet: true}
}

func (v NullableReceivingPackageType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReceivingPackageType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

