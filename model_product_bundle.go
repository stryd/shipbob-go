/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
	"fmt"
)

// ProductBundle the model 'ProductBundle'
type ProductBundle string

// List of ProductBundle
const (
	ANY        ProductBundle = "Any"
	BUNDLE     ProductBundle = "Bundle"
	NOT_BUNDLE ProductBundle = "NotBundle"
)

func (v *ProductBundle) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ProductBundle(value)
	for _, existing := range []ProductBundle{"Any", "Bundle", "NotBundle"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ProductBundle", value)
}

// Ptr returns reference to ProductBundle value
func (v ProductBundle) Ptr() *ProductBundle {
	return &v
}

type NullableProductBundle struct {
	value *ProductBundle
	isSet bool
}

func (v NullableProductBundle) Get() *ProductBundle {
	return v.value
}

func (v *NullableProductBundle) Set(val *ProductBundle) {
	v.value = val
	v.isSet = true
}

func (v NullableProductBundle) IsSet() bool {
	return v.isSet
}

func (v *NullableProductBundle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductBundle(val *ProductBundle) *NullableProductBundle {
	return &NullableProductBundle{value: val, isSet: true}
}

func (v NullableProductBundle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductBundle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
