/*
ShipBob Developer API

ShipBob Developer API Documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// checks if the OrderStatusDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderStatusDetails{}

// OrderStatusDetails struct for OrderStatusDetails
type OrderStatusDetails struct {
	// Describes what the status detail means
	Description                  *string       `json:"description,omitempty"`
	ExceptionFulfillmentCenterId NullableInt32 `json:"exception_fulfillment_center_id,omitempty"`
	// The id of the status detail
	Id *int32 `json:"id,omitempty"`
	// Inventory Id the detail applies to (if applicable)
	InventoryId NullableInt32 `json:"inventory_id,omitempty"`
	// Short name of the status detail
	Name *string `json:"name,omitempty"`
}

// NewOrderStatusDetails instantiates a new OrderStatusDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderStatusDetails() *OrderStatusDetails {
	this := OrderStatusDetails{}
	return &this
}

// NewOrderStatusDetailsWithDefaults instantiates a new OrderStatusDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderStatusDetailsWithDefaults() *OrderStatusDetails {
	this := OrderStatusDetails{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrderStatusDetails) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusDetails) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrderStatusDetails) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrderStatusDetails) SetDescription(v string) {
	o.Description = &v
}

// GetExceptionFulfillmentCenterId returns the ExceptionFulfillmentCenterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderStatusDetails) GetExceptionFulfillmentCenterId() int32 {
	if o == nil || IsNil(o.ExceptionFulfillmentCenterId.Get()) {
		var ret int32
		return ret
	}
	return *o.ExceptionFulfillmentCenterId.Get()
}

// GetExceptionFulfillmentCenterIdOk returns a tuple with the ExceptionFulfillmentCenterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderStatusDetails) GetExceptionFulfillmentCenterIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExceptionFulfillmentCenterId.Get(), o.ExceptionFulfillmentCenterId.IsSet()
}

// HasExceptionFulfillmentCenterId returns a boolean if a field has been set.
func (o *OrderStatusDetails) HasExceptionFulfillmentCenterId() bool {
	if o != nil && o.ExceptionFulfillmentCenterId.IsSet() {
		return true
	}

	return false
}

// SetExceptionFulfillmentCenterId gets a reference to the given NullableInt32 and assigns it to the ExceptionFulfillmentCenterId field.
func (o *OrderStatusDetails) SetExceptionFulfillmentCenterId(v int32) {
	o.ExceptionFulfillmentCenterId.Set(&v)
}

// SetExceptionFulfillmentCenterIdNil sets the value for ExceptionFulfillmentCenterId to be an explicit nil
func (o *OrderStatusDetails) SetExceptionFulfillmentCenterIdNil() {
	o.ExceptionFulfillmentCenterId.Set(nil)
}

// UnsetExceptionFulfillmentCenterId ensures that no value is present for ExceptionFulfillmentCenterId, not even an explicit nil
func (o *OrderStatusDetails) UnsetExceptionFulfillmentCenterId() {
	o.ExceptionFulfillmentCenterId.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrderStatusDetails) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusDetails) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrderStatusDetails) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OrderStatusDetails) SetId(v int32) {
	o.Id = &v
}

// GetInventoryId returns the InventoryId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderStatusDetails) GetInventoryId() int32 {
	if o == nil || IsNil(o.InventoryId.Get()) {
		var ret int32
		return ret
	}
	return *o.InventoryId.Get()
}

// GetInventoryIdOk returns a tuple with the InventoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderStatusDetails) GetInventoryIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InventoryId.Get(), o.InventoryId.IsSet()
}

// HasInventoryId returns a boolean if a field has been set.
func (o *OrderStatusDetails) HasInventoryId() bool {
	if o != nil && o.InventoryId.IsSet() {
		return true
	}

	return false
}

// SetInventoryId gets a reference to the given NullableInt32 and assigns it to the InventoryId field.
func (o *OrderStatusDetails) SetInventoryId(v int32) {
	o.InventoryId.Set(&v)
}

// SetInventoryIdNil sets the value for InventoryId to be an explicit nil
func (o *OrderStatusDetails) SetInventoryIdNil() {
	o.InventoryId.Set(nil)
}

// UnsetInventoryId ensures that no value is present for InventoryId, not even an explicit nil
func (o *OrderStatusDetails) UnsetInventoryId() {
	o.InventoryId.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrderStatusDetails) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderStatusDetails) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrderStatusDetails) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrderStatusDetails) SetName(v string) {
	o.Name = &v
}

func (o OrderStatusDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderStatusDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if o.ExceptionFulfillmentCenterId.IsSet() {
		toSerialize["exception_fulfillment_center_id"] = o.ExceptionFulfillmentCenterId.Get()
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.InventoryId.IsSet() {
		toSerialize["inventory_id"] = o.InventoryId.Get()
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableOrderStatusDetails struct {
	value *OrderStatusDetails
	isSet bool
}

func (v NullableOrderStatusDetails) Get() *OrderStatusDetails {
	return v.value
}

func (v *NullableOrderStatusDetails) Set(val *OrderStatusDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderStatusDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderStatusDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderStatusDetails(val *OrderStatusDetails) *NullableOrderStatusDetails {
	return &NullableOrderStatusDetails{value: val, isSet: true}
}

func (v NullableOrderStatusDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderStatusDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
