/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// ShipBobOrdersPresentationViewModelsShipmentProductViewModel Information about a store product belonging to a shipment
type ShipBobOrdersPresentationViewModelsShipmentProductViewModel struct {
	// Unique id of the product
	Id *int32 `json:"id,omitempty"`
	// Information about fulfillable inventory items belonging to this product
	InventoryItems *[]ShipBobOrdersPresentationViewModelsInventoryViewModel `json:"inventory_items,omitempty"`
	// Name of the product
	Name *string `json:"name,omitempty"`
	// Unique reference id of the product
	ReferenceId *string `json:"reference_id,omitempty"`
	// Stock keeping unit for the product
	Sku *string `json:"sku,omitempty"`
}

// NewShipBobOrdersPresentationViewModelsShipmentProductViewModel instantiates a new ShipBobOrdersPresentationViewModelsShipmentProductViewModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipBobOrdersPresentationViewModelsShipmentProductViewModel() *ShipBobOrdersPresentationViewModelsShipmentProductViewModel {
	this := ShipBobOrdersPresentationViewModelsShipmentProductViewModel{}
	return &this
}

// NewShipBobOrdersPresentationViewModelsShipmentProductViewModelWithDefaults instantiates a new ShipBobOrdersPresentationViewModelsShipmentProductViewModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipBobOrdersPresentationViewModelsShipmentProductViewModelWithDefaults() *ShipBobOrdersPresentationViewModelsShipmentProductViewModel {
	this := ShipBobOrdersPresentationViewModelsShipmentProductViewModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) SetId(v int32) {
	o.Id = &v
}

// GetInventoryItems returns the InventoryItems field value if set, zero value otherwise.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) GetInventoryItems() []ShipBobOrdersPresentationViewModelsInventoryViewModel {
	if o == nil || o.InventoryItems == nil {
		var ret []ShipBobOrdersPresentationViewModelsInventoryViewModel
		return ret
	}
	return *o.InventoryItems
}

// GetInventoryItemsOk returns a tuple with the InventoryItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) GetInventoryItemsOk() (*[]ShipBobOrdersPresentationViewModelsInventoryViewModel, bool) {
	if o == nil || o.InventoryItems == nil {
		return nil, false
	}
	return o.InventoryItems, true
}

// HasInventoryItems returns a boolean if a field has been set.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) HasInventoryItems() bool {
	if o != nil && o.InventoryItems != nil {
		return true
	}

	return false
}

// SetInventoryItems gets a reference to the given []ShipBobOrdersPresentationViewModelsInventoryViewModel and assigns it to the InventoryItems field.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) SetInventoryItems(v []ShipBobOrdersPresentationViewModelsInventoryViewModel) {
	o.InventoryItems = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) SetName(v string) {
	o.Name = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) GetReferenceId() string {
	if o == nil || o.ReferenceId == nil {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) GetReferenceIdOk() (*string, bool) {
	if o == nil || o.ReferenceId == nil {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) HasReferenceId() bool {
	if o != nil && o.ReferenceId != nil {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) SetReferenceId(v string) {
	o.ReferenceId = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) GetSku() string {
	if o == nil || o.Sku == nil {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) GetSkuOk() (*string, bool) {
	if o == nil || o.Sku == nil {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) HasSku() bool {
	if o != nil && o.Sku != nil {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) SetSku(v string) {
	o.Sku = &v
}

func (o ShipBobOrdersPresentationViewModelsShipmentProductViewModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InventoryItems != nil {
		toSerialize["inventory_items"] = o.InventoryItems
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ReferenceId != nil {
		toSerialize["reference_id"] = o.ReferenceId
	}
	if o.Sku != nil {
		toSerialize["sku"] = o.Sku
	}
	return json.Marshal(toSerialize)
}

type NullableShipBobOrdersPresentationViewModelsShipmentProductViewModel struct {
	value *ShipBobOrdersPresentationViewModelsShipmentProductViewModel
	isSet bool
}

func (v NullableShipBobOrdersPresentationViewModelsShipmentProductViewModel) Get() *ShipBobOrdersPresentationViewModelsShipmentProductViewModel {
	return v.value
}

func (v *NullableShipBobOrdersPresentationViewModelsShipmentProductViewModel) Set(val *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) {
	v.value = val
	v.isSet = true
}

func (v NullableShipBobOrdersPresentationViewModelsShipmentProductViewModel) IsSet() bool {
	return v.isSet
}

func (v *NullableShipBobOrdersPresentationViewModelsShipmentProductViewModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipBobOrdersPresentationViewModelsShipmentProductViewModel(val *ShipBobOrdersPresentationViewModelsShipmentProductViewModel) *NullableShipBobOrdersPresentationViewModelsShipmentProductViewModel {
	return &NullableShipBobOrdersPresentationViewModelsShipmentProductViewModel{value: val, isSet: true}
}

func (v NullableShipBobOrdersPresentationViewModelsShipmentProductViewModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipBobOrdersPresentationViewModelsShipmentProductViewModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


