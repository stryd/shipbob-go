/*
 * ShipBob Developer API
 *
 * ShipBob Developer API Documentation
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipbob

import (
	"encoding/json"
)

// ProductsCreateProductModel The product to create
type ProductsCreateProductModel struct {
	// Barcode for the product
	Barcode NullableString `json:"barcode,omitempty"`
	// The name of the product
	Name NullableString `json:"name"`
	// Unique reference identifier for the product. Any linked or generated inventory will also be uniquely identified by this value
	ReferenceId NullableString `json:"reference_id"`
	// Stock keeping unit for the product
	Sku NullableString `json:"sku,omitempty"`
}

// NewProductsCreateProductModel instantiates a new ProductsCreateProductModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductsCreateProductModel(name NullableString, referenceId NullableString, ) *ProductsCreateProductModel {
	this := ProductsCreateProductModel{}
	this.Name = name
	this.ReferenceId = referenceId
	return &this
}

// NewProductsCreateProductModelWithDefaults instantiates a new ProductsCreateProductModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductsCreateProductModelWithDefaults() *ProductsCreateProductModel {
	this := ProductsCreateProductModel{}
	return &this
}

// GetBarcode returns the Barcode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductsCreateProductModel) GetBarcode() string {
	if o == nil || o.Barcode.Get() == nil {
		var ret string
		return ret
	}
	return *o.Barcode.Get()
}

// GetBarcodeOk returns a tuple with the Barcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductsCreateProductModel) GetBarcodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Barcode.Get(), o.Barcode.IsSet()
}

// HasBarcode returns a boolean if a field has been set.
func (o *ProductsCreateProductModel) HasBarcode() bool {
	if o != nil && o.Barcode.IsSet() {
		return true
	}

	return false
}

// SetBarcode gets a reference to the given NullableString and assigns it to the Barcode field.
func (o *ProductsCreateProductModel) SetBarcode(v string) {
	o.Barcode.Set(&v)
}
// SetBarcodeNil sets the value for Barcode to be an explicit nil
func (o *ProductsCreateProductModel) SetBarcodeNil() {
	o.Barcode.Set(nil)
}

// UnsetBarcode ensures that no value is present for Barcode, not even an explicit nil
func (o *ProductsCreateProductModel) UnsetBarcode() {
	o.Barcode.Unset()
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductsCreateProductModel) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductsCreateProductModel) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *ProductsCreateProductModel) SetName(v string) {
	o.Name.Set(&v)
}

// GetReferenceId returns the ReferenceId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductsCreateProductModel) GetReferenceId() string {
	if o == nil || o.ReferenceId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ReferenceId.Get()
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductsCreateProductModel) GetReferenceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReferenceId.Get(), o.ReferenceId.IsSet()
}

// SetReferenceId sets field value
func (o *ProductsCreateProductModel) SetReferenceId(v string) {
	o.ReferenceId.Set(&v)
}

// GetSku returns the Sku field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductsCreateProductModel) GetSku() string {
	if o == nil || o.Sku.Get() == nil {
		var ret string
		return ret
	}
	return *o.Sku.Get()
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductsCreateProductModel) GetSkuOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Sku.Get(), o.Sku.IsSet()
}

// HasSku returns a boolean if a field has been set.
func (o *ProductsCreateProductModel) HasSku() bool {
	if o != nil && o.Sku.IsSet() {
		return true
	}

	return false
}

// SetSku gets a reference to the given NullableString and assigns it to the Sku field.
func (o *ProductsCreateProductModel) SetSku(v string) {
	o.Sku.Set(&v)
}
// SetSkuNil sets the value for Sku to be an explicit nil
func (o *ProductsCreateProductModel) SetSkuNil() {
	o.Sku.Set(nil)
}

// UnsetSku ensures that no value is present for Sku, not even an explicit nil
func (o *ProductsCreateProductModel) UnsetSku() {
	o.Sku.Unset()
}

func (o ProductsCreateProductModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Barcode.IsSet() {
		toSerialize["barcode"] = o.Barcode.Get()
	}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["reference_id"] = o.ReferenceId.Get()
	}
	if o.Sku.IsSet() {
		toSerialize["sku"] = o.Sku.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProductsCreateProductModel struct {
	value *ProductsCreateProductModel
	isSet bool
}

func (v NullableProductsCreateProductModel) Get() *ProductsCreateProductModel {
	return v.value
}

func (v *NullableProductsCreateProductModel) Set(val *ProductsCreateProductModel) {
	v.value = val
	v.isSet = true
}

func (v NullableProductsCreateProductModel) IsSet() bool {
	return v.isSet
}

func (v *NullableProductsCreateProductModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductsCreateProductModel(val *ProductsCreateProductModel) *NullableProductsCreateProductModel {
	return &NullableProductsCreateProductModel{value: val, isSet: true}
}

func (v NullableProductsCreateProductModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductsCreateProductModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


